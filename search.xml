<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>2023蓝桥杯C/C++ B组复盘（居然晋级国赛）</title>
      <link href="/2023/05/10/2023%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
      <url>/2023/05/10/2023%E8%93%9D%E6%A1%A5%E6%9D%AF/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前段时间较忙，博客已经鸽了一个月了(咕咕~) 惭愧惭愧<br>还有一个月备考蓝桥杯国赛，先复盘一下上个月的省赛题目吧</p></blockquote><h2 id="A：日期统计（5分）"><a href="#A：日期统计（5分）" class="headerlink" title="A：日期统计（5分）"></a>A：日期统计（5分）</h2><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>小蓝现在有一个长度为100的数组，数组中的每个元素的值都在0到9的范围之内。数组中的元素从左至右如下所示：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">5 6 8 6 9 1 6 1 2 4 9 1 9 8 2 3 6 4 7 7</span><br><span class="line">5 9 5 0 3 8 7 5 8 1 5 8 6 1 8 3 0 3 7 9</span><br><span class="line">2 7 0 5 8 8 5 7 0 9 9 1 9 4 4 6 8 6 3 3</span><br><span class="line">8 5 1 6 3 4 6 7 0 7 8 2 7 6 8 9 5 6 5 6</span><br><span class="line">1 4 0 1 0 0 9 4 8 0 9 1 2 8 5 0 2 5 3 3</span><br></pre></td></tr></table></figure><br>现在他想要从这个数组中寻找一些满足以下条件的子序列：</p><ol><li>子序列的长度为8；</li><li>这个子序列可以按照下标顺序组成一个yyyymmdd 格式的日期，并且要求这个日期是2023 年中的某一天的日期，例如20230902，20231223。yyyy 表示年份，mm 表示月份，dd 表示天数，当月份或者天数的长度只有一位时需要一个前导零补充。</li></ol><p>请你帮小蓝计算下按上述条件一共能找到多少个不同的2023 年的日期。<br>对于相同的日期你只需要统计一次即可。</p><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p>考试的时候想纯手算找出所有可能日期，奈何眼睛受不了（实在泰难受辣），还是挺难数的</p><p><strong>暴力枚举每个2023年的日期，查询是否能由给出的数字序列拼出来：</strong><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> numbers[<span class="number">100</span>] = &#123;<span class="number">5</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">1</span>, <span class="number">6</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">1</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">5</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">1</span>, <span class="number">5</span>,</span><br><span class="line">                          <span class="number">8</span>, <span class="number">6</span>, <span class="number">1</span>, <span class="number">8</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">2</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">9</span>, <span class="number">9</span>, <span class="number">1</span>, <span class="number">9</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">8</span>, <span class="number">5</span>,</span><br><span class="line">                          <span class="number">1</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">0</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">2</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">9</span>, <span class="number">4</span>, <span class="number">8</span>, <span class="number">0</span>, <span class="number">9</span>, <span class="number">1</span>, <span class="number">2</span>,</span><br><span class="line">                          <span class="number">8</span>, <span class="number">5</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">3</span>&#125;;</span><br><span class="line"><span class="type">int</span> days[<span class="number">13</span>] = &#123;<span class="number">0</span>, <span class="number">31</span>, <span class="number">28</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">12</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= days[i]; j++) &#123;</span><br><span class="line">            string str = <span class="string">&quot;2023&quot;</span>;</span><br><span class="line">            <span class="keyword">if</span> (i &lt; <span class="number">10</span>)str += <span class="string">&quot;0&quot;</span>;</span><br><span class="line">            str += <span class="built_in">to_string</span>(i);</span><br><span class="line">            <span class="keyword">if</span> (j &lt; <span class="number">10</span>)str += <span class="string">&quot;0&quot;</span>;</span><br><span class="line">            str += <span class="built_in">to_string</span>(j);</span><br><span class="line">            <span class="type">int</span> k = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> l = <span class="number">0</span>; l &lt; <span class="number">100</span> &amp;&amp; k &lt; <span class="number">8</span>; l++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (numbers[l] == str[k] - <span class="string">&#x27;0&#x27;</span>) k++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (k &gt;= <span class="number">8</span>) ans++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p><h2 id="B：01-串的熵（5分）"><a href="#B：01-串的熵（5分）" class="headerlink" title="B：01 串的熵（5分）"></a>B：01 串的熵（5分）</h2><h3 id="问题描述-1"><a href="#问题描述-1" class="headerlink" title="问题描述"></a>问题描述</h3><p>对于一个长度为$n$的$01$串$S = x_1x_2x_3…x_n$，香农信息熵的定义为$H(S)=-\sum^n_1p(x_i)\log_2(p(x_i))$，其中$p(0), p(1)$表示在这个$01$串中0和1出现的占比。比如，对于$S = 100$ 来说，信息熵$H(S)=-\frac{1}{3}\log_2(\frac{1}{3})-\frac{2}{3}\log_2(\frac{2}{3})-\frac{2}{3}\log_2(\frac{2}{3})=1.3083$</p><p>对于一个长度为$23333333$的$01$串，如果其信息熵为$11625907.5798$且$0$出现次数比$1$少，那么这个$01$串中$0$出现了多少次？</p><h3 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h3><p>注意对数运算<br><strong>暴力枚举：</strong><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> total = <span class="number">23333333</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">double</span> H = <span class="number">11625907.5798</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; total / <span class="number">2</span>; i++) &#123;</span><br><span class="line">        <span class="type">double</span> ans = <span class="number">0</span>;</span><br><span class="line">        ans -= <span class="number">1.0</span> * i * i / total * <span class="built_in">log2</span>(<span class="number">1.0</span> * i / total);</span><br><span class="line">        ans -= <span class="number">1.0</span> * (total - i) * (total - i) / total * <span class="built_in">log2</span>(<span class="number">1.0</span> * (total - i) / total);</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">abs</span>(ans - H) &lt; <span class="number">1e-4</span>) &#123;</span><br><span class="line">            cout &lt;&lt; i &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="C-冶炼金属（10分）"><a href="#C-冶炼金属（10分）" class="headerlink" title="C: 冶炼金属（10分）"></a>C: 冶炼金属（10分）</h2><h3 id="问题描述-2"><a href="#问题描述-2" class="headerlink" title="问题描述"></a>问题描述</h3><p>小蓝有一个神奇的炉子用于将普通金属 O 冶炼成为一种特殊金属 X。这个炉子有一个称作转换率的属性 V，V 是一个正整数，这意味着消耗 V 个普通金属 O 恰好可以冶炼出一个特殊金属 X，当普通金属 O 的数目不足 V 时，无法继续冶炼。</p><p>现在给出了 N 条冶炼记录，每条记录中包含两个整数 A 和 B ，这表示本次投入了 A 个普通金属 O ，最终冶炼出了 B 个特殊金属 X 。每条记录都是独立的，这意味着上一次没消耗完的普通金属 O 不会累加到下一次的冶炼当中。</p><p>根据这 N 条冶炼记录，请你推测出转换率 V 的最小值和最大值分别可能是多少，题目保证评测数据不存在无解的情况。</p><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行一个整数N，表示冶炼记录的数目。<br>接下来输入N行，每行两个整数A、B，含义如题目所述。</p><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>输出两个整数，分别表示 V 可能的最小值和最大值，中间用空格分开。</p><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">75 3</span><br><span class="line">53 2</span><br><span class="line">59 2</span><br></pre></td></tr></table></figure><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">20 25</span><br></pre></td></tr></table></figure><h3 id="样例说明"><a href="#样例说明" class="headerlink" title="样例说明"></a>样例说明</h3><p>当V = 20时，有：$\lfloor \frac{75}{20}=3 \rfloor、\lfloor \frac{53}{20}=2 \rfloor、\lfloor \frac{59}{20}=2 \rfloor$，可以看到符合所有冶炼记录。<br>当V = 25时，有：$\lfloor \frac{75}{25}=3 \rfloor、\lfloor \frac{53}{25}=2 \rfloor、\lfloor \frac{59}{25}=2 \rfloor$，可以看到符合所有冶炼记录。<br>且再也找不到比20更小或者比25更大的符合条件的V值了。</p><h3 id="评测用例规模与约定"><a href="#评测用例规模与约定" class="headerlink" title="评测用例规模与约定"></a>评测用例规模与约定</h3><p>对于$30%$的评测用例，$1 ≤ N ≤ 10^2$<br>对于$60%$的评测用例，$1 ≤ N ≤ 10^3$<br>对于$100%$的评测用例，$1 ≤ N ≤ 10^4，1 ≤ B ≤ A ≤ 10^9$</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> a[<span class="number">10005</span>];</span><br><span class="line"><span class="type">int</span> b[<span class="number">10005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> maxV = <span class="number">1000000005</span>, minV = <span class="number">-1</span>;</span><br><span class="line"><span class="type">int</span> ansmin = <span class="number">1000000005</span>, ansmax = <span class="number">-1</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;a[i],&amp;b[i]);</span><br><span class="line">maxV = <span class="built_in">min</span>(maxV, a[i]/b[i]);</span><br><span class="line">minV = <span class="built_in">max</span>(minV, a[i]/(b[i]+<span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> V = maxV; V &gt;= minV; V--)&#123;</span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n ; i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i] / V != b[i])&#123;</span><br><span class="line">flag = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flag)&#123;</span><br><span class="line">ansmin = <span class="built_in">min</span>(ansmin, V);</span><br><span class="line">ansmax = <span class="built_in">max</span>(ansmax, V);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt;ansmin &lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;ansmax;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>赛后<br>每两个a,b都能求出炼制效率的最小值l，和最大值，即一个可能区间[l,r]，所有区间的交集就是答案，每对数据都是在缩小区间<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> a[<span class="number">10005</span>];</span><br><span class="line"><span class="type">int</span> b[<span class="number">10005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> maxV = <span class="number">1000000005</span>, minV = <span class="number">-1</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;a[i],&amp;b[i]);</span><br><span class="line">maxV = <span class="built_in">min</span>(maxV, a[i]/b[i]);</span><br><span class="line">minV = <span class="built_in">max</span>(minV, a[i]/(b[i]+<span class="number">1</span>)+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt;minV &lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;maxV;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></blockquote><h2 id="D-飞机降落（10分）"><a href="#D-飞机降落（10分）" class="headerlink" title="D: 飞机降落（10分）"></a>D: 飞机降落（10分）</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>有 N 架飞机准备降落到某个只有一条跑道的机场。</p><p>其中第 i 架飞机在$T_i$时刻到达机场上空，到达时它的剩余油料还可以继续盘旋$D_i$个单位时间，即它最早可以于$T_i$时刻开始降落，最晚可以于$T_i+D_i$时刻开始降落。</p><p>降落过程需要$L_i$个单位时间。</p><p>一架飞机降落完毕时，另一架飞机可以立即在同一时刻开始降落，但是不能在前一架飞机完成降落前开始降落。</p><p>请你判断 N 架飞机是否可以全部安全降落。</p><h3 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h3><p>输入包含多组数据。</p><p>第一行包含一个整数 T，代表测试数据的组数。</p><p>对于每组数据，第一行包含一个整数 N。</p><p>以下 N 行，每行包含三个整数：$T_i，D_i 和 L_i$。</p><h3 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h3><p>对于每组数据，输出<code>YES</code>或者<code>NO</code>，代表是否可以全部安全降落。</p><h3 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h3><p>对于 30% 的数据，$N≤2$<br>对于 100% 的数据，$1≤T≤10，1≤N≤10，0≤T_i,D_i,L_i≤10^5$</p><h3 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">3</span><br><span class="line">0 100 10</span><br><span class="line">10 10 10</span><br><span class="line">0 2 20</span><br><span class="line">3</span><br><span class="line">0 10 20</span><br><span class="line">10 10 20</span><br><span class="line">20 10 20</span><br></pre></td></tr></table></figure><h3 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">YES</span><br><span class="line">NO</span><br></pre></td></tr></table></figure><h3 id="样例解释"><a href="#样例解释" class="headerlink" title="样例解释"></a>样例解释</h3><p>对于第一组数据，可以安排第 3 架飞机于 0 时刻开始降落，20 时刻完成降落。安排第 2 架飞机于 20 时刻开始降落，30 时刻完成降落。安排第 1 架飞机于 30 时刻开始降落，40 时刻完成降落。</p><p>对于第二组数据，无论如何安排，都会有飞机不能及时降落。</p><h3 id="题解-2"><a href="#题解-2" class="headerlink" title="题解"></a>题解</h3><blockquote><p>待填坑 考试时只编程了30%的数据点</p></blockquote><h2 id="E-接龙数列（15分）"><a href="#E-接龙数列（15分）" class="headerlink" title="E: 接龙数列（15分）"></a>E: 接龙数列（15分）</h2><h3 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h3><p>对于一个长度为 K 的整数数列：A1,A2,…,AK，我们称之为接龙数列当且仅当 $A_i$ 的首位数字恰好等于 $A_i−1$的末位数字 (2≤ i ≤K)。</p><p>例如 12,23,35,56,61,11 是接龙数列；12,23,34,56 不是接龙数列，因为 56 的首位数字不等于 34 的末位数字。</p><p>所有长度为 1 的整数数列都是接龙数列。</p><p>现在给定一个长度为 N 的数列 A1,A2,…,AN，请你计算最少从中删除多少个数，可以使剩下的序列是接龙序列？</p><h3 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行包含一个整数 N。<br>第二行包含 N 个整数 A1,A2,…,AN</p><h3 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式"></a>输出格式</h3><p>一个整数代表答案。</p><h3 id="数据范围-1"><a href="#数据范围-1" class="headerlink" title="数据范围"></a>数据范围</h3><p>对于 20% 的数据，1≤N≤20<br>对于 50% 的数据，1≤N≤10000<br>对于 100% 的数据，$1≤N≤10^5，1≤A_i≤10^9$。所有 $A_i$保证不包含前导 0</p><h3 id="输入样例：-1"><a href="#输入样例：-1" class="headerlink" title="输入样例："></a>输入样例：</h3><p>5<br>11 121 22 12 2023</p><h3 id="输出样例：-1"><a href="#输出样例：-1" class="headerlink" title="输出样例："></a>输出样例：</h3><p>1</p><h3 id="样例解释-1"><a href="#样例解释-1" class="headerlink" title="样例解释"></a>样例解释</h3><p>删除 22，剩余 11,121,12,2023 是接龙数列。</p><blockquote><p><a href="https://www.acwing.com/solution/content/184189/">解析文章</a><br><a href="https://www.bilibili.com/video/BV1kN411w7N6/?spm_id_from=333.999.0.0&amp;vd_source=4c4e06d9794ecf36566117b17c0bf46a">解析视频</a></p><iframe src="//player.bilibili.com/player.html?aid=312395382&bvid=BV1kN411w7N6&cid=1094551903&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" height=550 width=700> </iframe></blockquote><p><strong>原始版dp 时间复杂度n方，超时</strong><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> f[N];</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="type">int</span> b[N];</span><br><span class="line"></span><br><span class="line"><span class="comment">//f[i]表示以第i个数字为结尾的接龙数列的集合,属性为最长长度</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="type">char</span> str[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; str;</span><br><span class="line">        a[i] = str[<span class="number">0</span>] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        b[i] = str[<span class="built_in">strlen</span>(str) - <span class="number">1</span>] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        f[i] = <span class="number">1</span>;</span><br><span class="line">        <span class="comment">//遍历到第i个数字之前</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= i - <span class="number">1</span>; j++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (b[j] == a[i]) </span><br><span class="line">            f[i] = <span class="built_in">max</span>(f[i], f[j] + <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        res = <span class="built_in">max</span>(res, f[i]);</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; n - res &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>优化</strong><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> f[N];</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="type">int</span> b[N];</span><br><span class="line"><span class="type">int</span> g[<span class="number">10</span>];<span class="comment">//用于存储第i个数字之前以末尾数字k(0 &lt;= k &lt;= 9)为结尾的接龙序列的max</span></span><br><span class="line"><span class="comment">//即g[k]表示在第i个数字以前,为k为末尾的接龙序列的最大长度</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="type">char</span> str[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; str;</span><br><span class="line">        a[i] = str[<span class="number">0</span>] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        b[i] = str[<span class="built_in">strlen</span>(str) - <span class="number">1</span>] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        f[i] = <span class="number">1</span>;</span><br><span class="line">        <span class="comment">//由于第i个数字的首位为a[i],那么只关心以a[i]为结尾的数字</span></span><br><span class="line">        f[i] = <span class="built_in">max</span>(f[i], g[a[i]] + <span class="number">1</span>);</span><br><span class="line">        <span class="comment">//由于第i个数字的末尾为b[i],那么就要更新g[b[i]</span></span><br><span class="line">        g[b[i]] = <span class="built_in">max</span>(g[b[i]], f[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        res = <span class="built_in">max</span>(res, f[i]);</span><br><span class="line">    cout &lt;&lt; n - res &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="F-岛屿个数（15分）"><a href="#F-岛屿个数（15分）" class="headerlink" title="F: 岛屿个数（15分）"></a>F: 岛屿个数（15分）</h2><blockquote><p>待填坑</p></blockquote><h2 id="G-子串简写（20分）"><a href="#G-子串简写（20分）" class="headerlink" title="G: 子串简写（20分）"></a>G: 子串简写（20分）</h2><h3 id="子串简写"><a href="#子串简写" class="headerlink" title="子串简写"></a>子串简写</h3><h3 id="问题描述-3"><a href="#问题描述-3" class="headerlink" title="问题描述"></a>问题描述</h3><p>程序猿圈子里正在流行一种很新的简写方法：对于一个字符串，只保留首尾字符，将首尾字符之间的所有字符用这部分的长度代替。例如internationalization简写成i18n，Kubernetes 简写成K8s, Lanqiao 简写成L5o 等。</p><p>在本题中，我们规定长度大于等于K的字符串都可以采用这种简写方法（长度小于K的字符串不配使用这种简写）。</p><p>给定一个字符串S SS 和两个字符$c_1和c_2$,<br>​请你计算S有多少个以$c_1$开头 以$c_2$结尾子串可以采用这种简写？</p><h3 id="输入格式-3"><a href="#输入格式-3" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行包含一个整数K。<br>第二行包含一个字符串S 和两个字符$c_1和c_2$。</p><h3 id="输出格式-3"><a href="#输出格式-3" class="headerlink" title="输出格式"></a>输出格式</h3><p>一个整数代表答案。</p><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h3><p>4<br>abababdb a b</p><h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h3><p>6</p><h3 id="样例说明-1"><a href="#样例说明-1" class="headerlink" title="样例说明"></a>样例说明</h3><p>符合条件的子串如下所示，中括号内是该子串：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[abab]abdb</span><br><span class="line">[ababab]db</span><br><span class="line">[abababdb]</span><br><span class="line">ab[abab]db</span><br><span class="line">ab[ababdb]</span><br><span class="line">abab[abdb]</span><br></pre></td></tr></table></figure></p><h3 id="评测用例规模与约定-1"><a href="#评测用例规模与约定-1" class="headerlink" title="评测用例规模与约定"></a>评测用例规模与约定</h3><p>对于30%的评测用例 2 &lt;= K &lt;= |S| &lt;= 10000。<br>对于100%的评测用例，2 ≤ K ≤ ∣S∣ ≤ 5 × 10^5。S只包含小写字母c1和c2都是小写字母。<br>∣S∣代表字符串S的长度。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> k;</span><br><span class="line">string s;</span><br><span class="line"><span class="type">int</span> ans;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin&gt;&gt;k;</span><br><span class="line">cin&gt;&gt;s;</span><br><span class="line"><span class="type">char</span> a,b;</span><br><span class="line">cin&gt;&gt;a&gt;&gt;b;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> l = <span class="number">0</span>;l+k<span class="number">-1</span> &lt; s.<span class="built_in">size</span>(); l++)&#123;</span><br><span class="line"><span class="keyword">if</span>(s[l]!=a)&#123;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> r = l+k<span class="number">-1</span>; r &lt; s.<span class="built_in">size</span>(); r++)&#123;</span><br><span class="line"><span class="keyword">if</span>(s[r]!=b)&#123;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">ans++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cout&lt;&lt;ans;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="H-整数删除（20分）"><a href="#H-整数删除（20分）" class="headerlink" title="H: 整数删除（20分）"></a>H: 整数删除（20分）</h2><h3 id="问题描述-4"><a href="#问题描述-4" class="headerlink" title="问题描述"></a>问题描述</h3><p>给定一个长度为N的整数数列：$A_1, A_2, …, A_N$。你要重复以下操作K次：<br>每次选择数列中最小的整数（如果最小值不止一个，选择最靠前的），将其删除。并把与它相邻的整数加上被删除的数值。<br>输出K次操作后的序列。</p><h3 id="输入格式-4"><a href="#输入格式-4" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行包含两个整数 N 和 K。<br>第二行包含N个整数，$A_1, A_2, A_3, …, A_N$</p><h3 id="输出格式-4"><a href="#输出格式-4" class="headerlink" title="输出格式"></a>输出格式</h3><p>输出N − K个整数，中间用一个空格隔开，代表K次操作后的序列。</p><h3 id="样例输入-2"><a href="#样例输入-2" class="headerlink" title="样例输入"></a>样例输入</h3><p>5 3<br>1 4 2 8 7</p><h3 id="样例输出-2"><a href="#样例输出-2" class="headerlink" title="样例输出"></a>样例输出</h3><p>17 7</p><h3 id="样例说明-2"><a href="#样例说明-2" class="headerlink" title="样例说明"></a>样例说明</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">数列变化如下，中括号里的数是当次操作中被选择的数：</span><br><span class="line">[1] 4 2 8 7</span><br><span class="line">5 [2] 8 7</span><br><span class="line">[7] 10 7</span><br><span class="line">17 7</span><br></pre></td></tr></table></figure><p>评测用例规模与约定<br>对于 20% 的评测用例，$1 ≤K ≤N ≤ 10^4$<br>对于 100% 的评测用例，$1 ≤K ≤N ≤ 5 ×10^5，0 ≤ A_i ≤ 10^8$</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[<span class="number">500005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">a[<span class="number">0</span>] = <span class="number">-1</span>;</span><br><span class="line"><span class="type">int</span> n,k;</span><br><span class="line">cin&gt;&gt;n&gt;&gt;k;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(k--)&#123;</span><br><span class="line"><span class="type">int</span> minn = <span class="number">100000001</span>;</span><br><span class="line"><span class="type">int</span> index = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i] == <span class="number">-1</span>)</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i] &lt; minn)&#123;</span><br><span class="line">minn = a[i];</span><br><span class="line">index = i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = index<span class="number">-1</span>; j &gt; <span class="number">0</span>; j--)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[j] != <span class="number">-1</span>)&#123;</span><br><span class="line">a[j] += minn;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = index+<span class="number">1</span>; j &lt;= n; j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[j] != <span class="number">-1</span>)&#123;</span><br><span class="line">a[j] += minn;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">a[index] = <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i] != <span class="number">-1</span>)</span><br><span class="line">cout&lt;&lt;a[i]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>未完待续</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 算法练习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 模拟 </tag>
            
            <tag> dp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2019年蓝桥杯c++B组 | C：数列求值 | G：完全二叉树的权值</title>
      <link href="/2023/04/04/2019%E5%B9%B4%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
      <url>/2023/04/04/2019%E5%B9%B4%E8%93%9D%E6%A1%A5%E6%9D%AF/</url>
      
        <content type="html"><![CDATA[<h2 id="数列求值（10分）"><a href="#数列求值（10分）" class="headerlink" title="数列求值（10分）"></a>数列求值（10分）</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>给定数列1,1,1,3,5,9,17,…，从第4项开始，每项都是前3项的和。求<br>第20190324项的最后4位数字。</p><h3 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h3><p>用数组保存三项值，通过对3取余依次将数字加上去。应为保留最后四位数字，所以每次计算过后需要用10000取余，不然会溢出<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> num[<span class="number">4</span>] = &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>&#125;;</span><br><span class="line"><span class="type">int</span> index = <span class="number">4</span>;</span><br><span class="line"><span class="keyword">while</span>(index&lt;=<span class="number">20190324</span>)</span><br><span class="line">&#123;</span><br><span class="line">num[index%<span class="number">3</span>] = num[<span class="number">1</span>]+num[<span class="number">2</span>]+num[<span class="number">3</span>];</span><br><span class="line">num[index%<span class="number">3</span>]%=<span class="number">10000</span>;</span><br><span class="line">index++;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; num[index%<span class="number">3</span>] &lt;&lt;endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure></p><h2 id="完全二叉树的权值（20分）"><a href="#完全二叉树的权值（20分）" class="headerlink" title="完全二叉树的权值（20分）"></a>完全二叉树的权值（20分）</h2><h3 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h3><p>给定一棵包含 N 个节点的完全二叉树，树上每个节点都有一个权值，按从上到下、从左到右的顺序依次是 $A_1 , A_2 , ··· A_N$ ，<br>如下图所示：现在小明要把相同深度的节点的权值加在一起，他想知道哪个深度的节点权值之和最大？如果有多个深度的权值和同为最大，请你输出其中最小的深度。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">    A1</span><br><span class="line">   / \</span><br><span class="line">  A2  A3</span><br><span class="line"> / \  / \</span><br><span class="line">A4 A5 A6 A7</span><br></pre></td></tr></table></figure><br><code>注：根的深度是 1。</code></p><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行包含一个整数 N。<br>第二行包含 N 个整数 $A_1 , A_2 , ··· A_N$ 。</p><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>输出一个整数代表答案。</p><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">7</span><br><span class="line">1 6 5 4 3 2 1</span><br></pre></td></tr></table></figure><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><h3 id="评测用例规模与约定"><a href="#评测用例规模与约定" class="headerlink" title="评测用例规模与约定"></a>评测用例规模与约定</h3><p>对于所有评测用例，$1 ≤ N ≤ 100000，−100000 ≤ A_i ≤ 100000。$</p><ul><li><strong>注意最后一层可能没有填满的情况</strong></li><li>用前缀和数组优化同一层求和的运算</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[<span class="number">100005</span>];</span><br><span class="line"><span class="type">int</span> s[<span class="number">100005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> <span class="type">int</span> n;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">cin&gt;&gt;a[i];</span><br><span class="line">s[i] = s[i<span class="number">-1</span>] + a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> level=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">pow</span>(<span class="number">2</span>,level)<span class="number">-1</span> &lt; n)&#123;</span><br><span class="line">level++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> ans_s = a[<span class="number">1</span>];</span><br><span class="line"><span class="type">int</span> ans = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i =<span class="number">2</span> ; i &lt;= level; i++)&#123;</span><br><span class="line"><span class="type">int</span> start = <span class="built_in">pow</span>(<span class="number">2</span>,i<span class="number">-1</span>);</span><br><span class="line"><span class="type">int</span> end = <span class="built_in">pow</span>(<span class="number">2</span>,i)<span class="number">-1</span>;</span><br><span class="line">end = <span class="built_in">min</span>(end, n);</span><br><span class="line"><span class="type">int</span> t = s[end] - s[start<span class="number">-1</span>];</span><br><span class="line"><span class="keyword">if</span>(t &gt; ans_s)&#123;</span><br><span class="line">ans_s = t;</span><br><span class="line">ans = i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法练习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 模拟 </tag>
            
            <tag> 前缀和 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大整数运算</title>
      <link href="/2023/04/01/node%E5%A4%A7%E6%95%B4%E6%95%B0%E8%BF%90%E7%AE%97/"/>
      <url>/2023/04/01/node%E5%A4%A7%E6%95%B4%E6%95%B0%E8%BF%90%E7%AE%97/</url>
      
        <content type="html"><![CDATA[<h2 id="大整数A-B"><a href="#大整数A-B" class="headerlink" title="大整数A+B"></a>大整数A+B</h2><p>输入两个整数A、B，求 A + B。</p><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>首先输入一个正整数T，表示测试数据的组数，然后是T组测试数据。每组测试输入2个正整数A、B。整数可能很大，但每个整数的位数不会超过1000。</p><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>对于每组测试输出两行数据；第一行输出”Case #:”，#表示测试组号，第二行输出形式为“A + B = Sum”，Sum表示A+B的结果。每两组测试数据之间空一行。</p><h3 id="输入样例"><a href="#输入样例" class="headerlink" title="输入样例:"></a>输入样例:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">1 2</span><br><span class="line">88888888888888888888888 11111111111111111111111</span><br></pre></td></tr></table></figure><h3 id="输出样例"><a href="#输出样例" class="headerlink" title="输出样例:"></a>输出样例:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Case 1:</span><br><span class="line">1 + 2 = 3</span><br><span class="line"></span><br><span class="line">Case 2:</span><br><span class="line">88888888888888888888888 + 11111111111111111111111 = 99999999999999999999999</span><br></pre></td></tr></table></figure><p><strong>出处:</strong><br>HDOJ 1002</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">add</span><span class="params">(vector&lt;<span class="type">int</span>&gt; a,vector&lt;<span class="type">int</span>&gt; b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; c;</span><br><span class="line">    <span class="type">int</span> t = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; a.<span class="built_in">size</span>() || i &lt; b.<span class="built_in">size</span>(); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//短的位数就不加</span></span><br><span class="line">        <span class="keyword">if</span> (i &lt; a.<span class="built_in">size</span>())</span><br><span class="line">            t += a[i];</span><br><span class="line">        <span class="keyword">if</span> (i &lt; b.<span class="built_in">size</span>())</span><br><span class="line">            t += b[i];</span><br><span class="line">        c.<span class="built_in">push_back</span>(t % <span class="number">10</span>);</span><br><span class="line">        t /= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(t)</span><br><span class="line">        c.<span class="built_in">push_back</span>(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> cnt=<span class="number">1</span>;cnt&lt;=n;cnt++)</span><br><span class="line">    &#123;</span><br><span class="line">        string s1, s2;</span><br><span class="line">        cin &gt;&gt; s1 &gt;&gt; s2;</span><br><span class="line">        vector&lt;<span class="type">int</span>&gt; v1, v2, v3;</span><br><span class="line">        <span class="comment">//反过来储存</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = s1.<span class="built_in">size</span>()<span class="number">-1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">            v1.<span class="built_in">push_back</span>(s1[i] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = s2.<span class="built_in">size</span>()<span class="number">-1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">            v2.<span class="built_in">push_back</span>(s2[i] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">        v3 = <span class="built_in">add</span>(v1, v2);</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;Case &quot;</span>&lt;&lt;cnt&lt;&lt;<span class="string">&quot;:&quot;</span>&lt;&lt;endl;</span><br><span class="line">        cout&lt;&lt;s1&lt;&lt;<span class="string">&quot; + &quot;</span>&lt;&lt;s2&lt;&lt;<span class="string">&quot; = &quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = v3.<span class="built_in">size</span>()<span class="number">-1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">            cout &lt;&lt; v3[i];</span><br><span class="line">        <span class="keyword">if</span>(cnt != n)</span><br><span class="line">            cout&lt;&lt;endl&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">else</span>    </span><br><span class="line">            cout&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="大整数A-B-1"><a href="#大整数A-B-1" class="headerlink" title="大整数A-B"></a>大整数A-B</h2><p>给定两个正整数（不含前导0），计算它们的差，计算结果可能为负数。</p><h3 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>共两行，每行包含一个整数。</p><h3 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>共一行，包含所求的差。</p><h3 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围:"></a>数据范围:</h3><p>1 ≤ 整数长度 ≤ 10^5</p><h3 id="输入样例-1"><a href="#输入样例-1" class="headerlink" title="输入样例:"></a>输入样例:</h3><p>在这里给出一组输入。例如：32 11</p><h3 id="输出样例-1"><a href="#输出样例-1" class="headerlink" title="输出样例:"></a>输出样例:</h3><p>在这里给出相应的输出。例如：21</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">//判断是否交换</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">NeedSwap</span><span class="params">(vector&lt;<span class="type">int</span>&gt; a, vector&lt;<span class="type">int</span>&gt; b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a.<span class="built_in">size</span>() &gt; b.<span class="built_in">size</span>())</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(a.<span class="built_in">size</span>() &lt; b.<span class="built_in">size</span>())</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = a.<span class="built_in">size</span>()<span class="number">-1</span>; i &gt;= <span class="number">0</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i] &gt; b[i])</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(a[i] &lt; b[i])</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Swap</span><span class="params">(vector&lt;<span class="type">int</span>&gt; &amp;a, vector&lt;<span class="type">int</span>&gt; &amp;b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; temp;</span><br><span class="line">    temp = a;</span><br><span class="line">    a = b;</span><br><span class="line">    b = temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//减法 大 - 小</span></span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">sub</span><span class="params">(vector&lt;<span class="type">int</span>&gt; a, vector&lt;<span class="type">int</span>&gt; b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; c;</span><br><span class="line">    <span class="type">int</span> t = <span class="number">0</span>; <span class="comment">//借位</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; a.<span class="built_in">size</span>(); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        t = a[i] - t; <span class="comment">//减去之前借的位</span></span><br><span class="line">        <span class="keyword">if</span> (i &lt; b.<span class="built_in">size</span>())</span><br><span class="line">            t -= b[i];</span><br><span class="line">        <span class="keyword">if</span> (t &lt; <span class="number">0</span>) <span class="comment">//不够减 需要借位</span></span><br><span class="line">        &#123;</span><br><span class="line">            c.<span class="built_in">push_back</span>((t + <span class="number">10</span>) % <span class="number">10</span>);</span><br><span class="line">            t = <span class="number">1</span>; <span class="comment">//记录向前借了1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="comment">//不需要借位</span></span><br><span class="line">        &#123;</span><br><span class="line">            c.<span class="built_in">push_back</span>(t % <span class="number">10</span>);</span><br><span class="line">            t = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//解决反转后的(答案)前导0问题 即pop c的末尾0</span></span><br><span class="line">    <span class="keyword">while</span> (c.<span class="built_in">size</span>() &gt; <span class="number">1</span> &amp;&amp; c.<span class="built_in">back</span>() == <span class="number">0</span>)</span><br><span class="line">        c.<span class="built_in">pop_back</span>();</span><br><span class="line">    <span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string s1, s2;</span><br><span class="line">    cin &gt;&gt; s1 &gt;&gt; s2;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; v1, v2, v3;</span><br><span class="line">    <span class="type">int</span> flag = <span class="number">0</span>;<span class="comment">//要不要加负号</span></span><br><span class="line">    <span class="comment">//反过来储存 输出</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = s1.<span class="built_in">size</span>() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">        v1.<span class="built_in">push_back</span>(s1[i] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = s2.<span class="built_in">size</span>() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">        v2.<span class="built_in">push_back</span>(s2[i] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">NeedSwap</span>(v1, v2))&#123;</span><br><span class="line">        <span class="built_in">Swap</span>(v1, v2);</span><br><span class="line">        flag = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    v3 = <span class="built_in">sub</span>(v1, v2);</span><br><span class="line">    <span class="keyword">if</span>(flag) cout&lt;&lt;<span class="string">&quot;-&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = v3.<span class="built_in">size</span>() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">        cout &lt;&lt; v3[i];</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="高精度A-低精度b"><a href="#高精度A-低精度b" class="headerlink" title="高精度A * 低精度b"></a>高精度A * 低精度b</h2><p>给定两个非负整数（不含前导 0） A 和 B，请你计算 A×B 的值。</p><h3 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式:"></a>输入格式:</h3><p>共两行，第一行包含整数 A，第二行包含整数 B。</p><h3 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式:"></a>输出格式:</h3><p>共一行，包含 A×B 的值。</p><h3 id="数据范围-1"><a href="#数据范围-1" class="headerlink" title="数据范围:"></a>数据范围:</h3><p>1 ≤ A的长度 ≤ 100000,<br>0 ≤ B ≤ 10000</p><h3 id="输入样例-2"><a href="#输入样例-2" class="headerlink" title="输入样例:"></a>输入样例:</h3><p>在这里给出一组输入。例如：<br>2<br>3<br>输出样例:<br>6</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">//高精度*低精度</span></span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">mul</span><span class="params">(vector&lt;<span class="type">int</span>&gt; a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; c;</span><br><span class="line">    <span class="type">int</span> t = <span class="number">0</span>; <span class="comment">//进位</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; a.<span class="built_in">size</span>(); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        t += a[i] * b;</span><br><span class="line">        c.<span class="built_in">push_back</span>(t % <span class="number">10</span>);</span><br><span class="line">        t /= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (t)</span><br><span class="line">        c.<span class="built_in">push_back</span>(t);</span><br><span class="line">    <span class="comment">//解决反转后的(答案)前导0问题 即pop c的末尾0</span></span><br><span class="line">    <span class="keyword">while</span> (c.<span class="built_in">size</span>() &gt; <span class="number">1</span> &amp;&amp; c.<span class="built_in">back</span>() == <span class="number">0</span>)</span><br><span class="line">        c.<span class="built_in">pop_back</span>();</span><br><span class="line">    <span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    string s;</span><br><span class="line">    <span class="type">int</span> b;</span><br><span class="line">    cin&gt;&gt;s&gt;&gt;b;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; a;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = s.<span class="built_in">size</span>() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">         a.<span class="built_in">push_back</span>(s[i] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; v3;</span><br><span class="line">    v3=<span class="built_in">mul</span>(a,b);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = v3.<span class="built_in">size</span>() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">        cout &lt;&lt; v3[i];</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大整数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AcWing 1211. 蚂蚁感冒</title>
      <link href="/2023/03/29/ACWing1211%E8%9A%82%E8%9A%81%E6%84%9F%E5%86%92/"/>
      <url>/2023/03/29/ACWing1211%E8%9A%82%E8%9A%81%E6%84%9F%E5%86%92/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">难度：简单</span><br><span class="line">时/空限制：1s / 64MB</span><br><span class="line">总通过数：11420</span><br><span class="line">总尝试数：22089</span><br><span class="line">来源：第五届蓝桥杯省赛C++A/B组</span><br><span class="line">算法标签</span><br><span class="line">数学</span><br></pre></td></tr></table></figure><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>长 100 厘米的细长直杆子上有 n 只蚂蚁。</p><p>它们的头有的朝左，有的朝右。</p><p>每只蚂蚁都只能沿着杆子向前爬，速度是 1 厘米/秒。</p><p>当两只蚂蚁碰面时，它们会同时掉头往相反的方向爬行。</p><p>这些蚂蚁中，有 1 只蚂蚁感冒了。</p><p>并且在和其它蚂蚁碰面时，会把感冒传染给碰到的蚂蚁。</p><p>请你计算，当所有蚂蚁都爬离杆子时，有多少只蚂蚁患上了感冒。</p><p><strong>输入格式</strong><br>第一行输入一个整数 n, 表示蚂蚁的总数。</p><p>接着的一行是 n 个用空格分开的整数 Xi, Xi 的绝对值表示蚂蚁离开杆子左边端点的距离。</p><p>正值表示头朝右，负值表示头朝左，数据中不会出现 0 值，也不会出现两只蚂蚁占用同一位置。</p><p>其中，第一个数据代表的蚂蚁感冒了。</p><p><strong>输出格式</strong><br>输出1个整数，表示最后感冒蚂蚁的数目。</p><p><strong>数据范围</strong><br>$1&lt;n&lt;50,$<br>$0&lt;|X_i|&lt;100$<br><strong>输入样例1：</strong><br>3<br>5 -2 8<br><strong>输出样例1：</strong><br>1<br><strong>输入样例2：</strong><br>5<br>-10 8 -20 12 25<br><strong>输出样例2：</strong><br>3</p><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p>先分两种大的情况，<br>第一个感冒的蚂蚁向左还是向右<br>这里把两个蚂蚁碰到后掉头爬行看成直接穿过，可以理解成两个蚂蚁互换身体，代替这对方继续走<br>如果向右， 那么它右面向左走的一定会传染，右面向右走的一定不会传染<br>它左面向左走的一定不会传染，它左面向右走的会被它右面向左走的感染<br>如果向左，与上同理</p><p>这样想代码比较容易实现，也容易讨论</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n, pos;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="type">int</span> ans = <span class="number">1</span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">cmp</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">abs</span>(a) &lt; <span class="built_in">abs</span>(b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  cin &gt;&gt; n;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    cin &gt;&gt; a[i];</span><br><span class="line">  <span class="type">int</span> pre = a[<span class="number">0</span>];</span><br><span class="line">  <span class="built_in">sort</span>(a, a + n, cmp); <span class="comment">//先按绝对值 将蚂蚁的位置排好</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> (a[i] == pre)</span><br><span class="line">      pos = i;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="type">int</span> flag = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span> (pre &gt; <span class="number">0</span>) <span class="comment">//首先感染的蚂蚁向右走</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = pos + <span class="number">1</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> (a[i] &gt; <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">      <span class="keyword">if</span> (a[i] &lt; <span class="number">0</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        ans++;</span><br><span class="line">        flag = <span class="number">1</span>; <span class="comment">//标记右面有蚂蚁向左走</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = pos - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> (flag) <span class="comment">//在右边有往左走的蚂蚁前提下</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i] &gt; <span class="number">0</span>) <span class="comment">//如果左面有向右走的那么肯定会传染</span></span><br><span class="line">          ans++;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (pre &lt; <span class="number">0</span>)  <span class="comment">//首先感染的蚂蚁向左走，方法同上</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = pos - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> (a[i] &lt; <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">      <span class="keyword">if</span> (a[i] &gt; <span class="number">0</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        ans++;</span><br><span class="line">        flag = <span class="number">1</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = pos + <span class="number">1</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> (a[i] &gt; <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">      <span class="keyword">if</span> (flag)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i] &lt; <span class="number">0</span>)</span><br><span class="line">          ans++;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法练习 </category>
          
          <category> ACWing </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 思维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ACWing 1210. 连号区间数</title>
      <link href="/2023/03/28/ACWing1210%E8%BF%9E%E5%8F%B7%E5%8C%BA%E9%97%B4%E6%95%B0/"/>
      <url>/2023/03/28/ACWing1210%E8%BF%9E%E5%8F%B7%E5%8C%BA%E9%97%B4%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">难度：简单</span><br><span class="line">时/空限制：1s / 64MB</span><br><span class="line">总通过数：11844</span><br><span class="line">总尝试数：19938</span><br><span class="line">来源：第四届蓝桥杯省赛C++B组,第四届蓝桥杯省赛JAVAB组</span><br><span class="line">算法标签</span><br><span class="line">枚举</span><br></pre></td></tr></table></figure><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>小明这些天一直在思考这样一个奇怪而有趣的问题：</p><p>在 1∼N 的某个排列中有多少个连号区间呢？</p><p>这里所说的连号区间的定义是：</p><p>如果区间 <code>[L,R]</code> 里的所有元素（即此排列的第 L 个到第 R 个元素）递增排序后能得到一个长度为 <code>R−L+1</code> 的“连续”数列，则称这个区间连号区间。</p><p>当 N 很小的时候，小明可以很快地算出答案，但是当 N 变大的时候，问题就不是那么简单了，现在小明需要你的帮助。</p><p><strong>输入格式</strong><br>第一行是一个正整数 N，表示排列的规模。</p><p>第二行是 N 个不同的数字 $P_i$，表示这 N 个数字的某一排列。</p><p><strong>输出格式</strong><br>输出一个整数，表示不同连号区间的数目。</p><p><strong>数据范围</strong><br>$1≤N≤10000$<br>$1≤P_i≤N$<br><strong>输入样例1：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">3 2 4 1</span><br></pre></td></tr></table></figure><br><strong>输出样例1：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">7</span><br></pre></td></tr></table></figure><br><strong>输入样例2：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">3 4 2 5 1</span><br></pre></td></tr></table></figure><br><strong>输出样例2：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">9</span><br></pre></td></tr></table></figure><br><strong>样例解释</strong><br>第一个用例中，有 7 个连号区间分别是：<code>[1,1],[1,2],[1,3],[1,4],[2,2],[3,3],[4,4]</code></p><p>第二个用例中，有 9 个连号区间分别是：<code>[1,1],[1,2],[1,3],[1,4],[1,5],[2,2],[3,3],[4,4],[5,5]</code></p><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p>因为没有重复的数，并且区间内排序后为递增序列差值为1，因此可以转化为区间<strong>最大最小值作差等于区间长度</strong>，即<code>max - min = j - i</code></p><blockquote><p>初尝试：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> a[<span class="number">10005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> l = <span class="number">1</span>; l &lt;= n; l++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> r = l; r &lt;= n; r++) &#123;</span><br><span class="line">            <span class="type">int</span> max_ = <span class="number">-1</span>, min_ = <span class="number">10005</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = l; i &lt;= r; i++) &#123;</span><br><span class="line">                max_ = <span class="built_in">max</span>(a[i], max_);</span><br><span class="line">                min_ = <span class="built_in">min</span>(a[i], min_);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (max_ - min_ == r - l) ans++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>上述做法超时了，第三层循环可以进一步优化掉:<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> a[<span class="number">10005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> l = <span class="number">1</span>; l &lt;= n; l++) &#123;</span><br><span class="line">        <span class="type">int</span> max_ = <span class="number">-1</span>, min_ = <span class="number">10005</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> r = l; r &lt;= n; r++) &#123;</span><br><span class="line">            max_ = <span class="built_in">max</span>(a[r], max_);</span><br><span class="line">            min_ = <span class="built_in">min</span>(a[r], min_);</span><br><span class="line">            <span class="keyword">if</span> (max_ - min_ == r - l) ans++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 算法练习 </category>
          
          <category> ACWing </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 枚举 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建mcjufe.fun 并git到GitHub出现的一些问题及解决</title>
      <link href="/2023/03/25/mcjufe%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/"/>
      <url>/2023/03/25/mcjufe%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h2 id="hexo部分"><a href="#hexo部分" class="headerlink" title="hexo部分"></a>hexo部分</h2><h3 id="部署后发现没有css样式"><a href="#部署后发现没有css样式" class="headerlink" title="部署后发现没有css样式"></a>部署后发现没有css样式</h3><p>注意仓库路径问题，如果不是以io结尾<strong>要到hexo的config.yml文件中添加仓库URL路径(<a href="https://username.github.io/project)并设置root(/project">https://username.github.io/project)并设置root(/project</a>)</strong></p><h3 id="关于仓库路径-Page链接绑定域名"><a href="#关于仓库路径-Page链接绑定域名" class="headerlink" title="关于仓库路径 Page链接绑定域名"></a>关于仓库路径 Page链接绑定域名</h3><p>由于域名的DNS信息中CNAME记录的记录值需为域名形式（如abc.example.com）<br>仓库似乎不能乱命名（避免出现<a href="https://username.github.io/project的情况">https://username.github.io/project的情况</a>)</p><h2 id="git部分（hexo-d）"><a href="#git部分（hexo-d）" class="headerlink" title="git部分（hexo d）"></a>git部分（hexo d）</h2><h3 id="解决报错：The-requested-URL-returned-error-403-或-Logon-failed-use-ctrl-c-to-cancel-basic-credential-prompt-的解决方法"><a href="#解决报错：The-requested-URL-returned-error-403-或-Logon-failed-use-ctrl-c-to-cancel-basic-credential-prompt-的解决方法" class="headerlink" title="解决报错：The requested URL returned error: 403 或 Logon failed, use ctrl+c to cancel basic credential prompt.的解决方法"></a>解决报错：The requested URL returned error: 403 或 Logon failed, use ctrl+c to cancel basic credential prompt.的解决方法</h3><p>推送上传文件到远程仓库时总是跳出，说密码或者账号输入错误<br>第一次是输入github的登陆用户名和密码；<br>第二次是输入usernuserame（用户名） 和生成的tokens（密码）<br><img src="https://img-blog.csdnimg.cn/img_convert/c791f038dfa49557246cf1beaeeb683d.png" alt=""><br><strong>解决方法</strong><br>去生成一个第二次登录的token<br><a href="https://blog.csdn.net/weixin_46622106/article/details/111914231">解决方法链接在这</a></p><h3 id="关于GitHub-git-443-Timed-out的报错"><a href="#关于GitHub-git-443-Timed-out的报错" class="headerlink" title="关于GitHub git 443: Timed out的报错"></a>关于GitHub git 443: Timed out的报错</h3><p>网络问题</p><ol><li>git取消全局代理（一般来说默认就是这样）<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global --unset http.proxy</span><br><span class="line">git config --global --unset https.proxy</span><br></pre></td></tr></table></figure></li><li><p>别用校园网，就没成功过</p></li><li><p>把自己电脑的网络代理服务器关了<br>以我的体验不需要科学上网git也挺流畅的<br>有的时候翻墙了代理不会自己关，经常没网</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ACWing 3417.砝码称重</title>
      <link href="/2023/03/25/ACWing3417%E7%A0%9D%E7%A0%81%E7%A7%B0%E9%87%8D/"/>
      <url>/2023/03/25/ACWing3417%E7%A0%9D%E7%A0%81%E7%A7%B0%E9%87%8D/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.acwing.com/problem/content/description/3420/">原题链接</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">难度：中等</span><br><span class="line">时/空限制：1s / 256MB</span><br><span class="line">总通过数：6792</span><br><span class="line">总尝试数：15019</span><br><span class="line">来源：第十二届蓝桥杯省赛第一场C++A/B/研究生组</span><br><span class="line">算法标签</span><br><span class="line">DP 背包问题</span><br></pre></td></tr></table></figure><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>你有一架天平和 N 个砝码，这 N 个砝码重量依次是 $W_1,W_2,W_3,⋅⋅⋅,W_N$。</p><p>请你计算一共可以称出多少种不同的正整数重量？</p><p>注意砝码可以放在天平两边。</p><p><strong>输入格式</strong><br>输入的第一行包含一个整数 N。</p><p>第二行包含 N 个整数：$W_1,W_2,W_3,⋅⋅⋅,W_N$。</p><p><strong>输出格式</strong><br>输出一个整数代表答案。</p><p><strong>数据范围</strong><br>对于 50% 的评测用例，1≤N≤15。<br>对于所有评测用例，1≤N≤100，N 个砝码总重不超过 10^5。</p><p><strong>输入样例：</strong><br>3<br>1 4 6<br><strong>输出样例：</strong><br>10<br><strong>样例解释</strong><br>能称出的 10 种重量是：1、2、3、4、5、6、7、9、10、11</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">1 = 1；</span><br><span class="line">2 = 6 − 4 (天平一边放 6，另一边放 4)；</span><br><span class="line">3 = 4 − 1；</span><br><span class="line">4 = 4；</span><br><span class="line">5 = 6 − 1；</span><br><span class="line">6 = 6；</span><br><span class="line">7 = 1 + 6；</span><br><span class="line">9 = 4 + 6 − 1；</span><br><span class="line">10 = 4 + 6；</span><br><span class="line">11 = 1 + 4 + 6。</span><br></pre></td></tr></table></figure><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p><strong>动态规划背包问题：</strong><br><img src="https://cdn.acwing.com/media/article/image/2021/04/28/39421_a2e7f5a0a8-2.png" alt=""><br><code>f[i-1][j-w[i]]</code>会出现下标为负值的问题，由实际含义可知下标可取绝对值（称重）</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">110</span>, m = <span class="number">2e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> w[N];</span><br><span class="line"><span class="type">int</span> sum = <span class="number">0</span>, n;</span><br><span class="line"><span class="type">bool</span> dp[N][m];<span class="comment">//布尔值来表示前n个物品中能不能凑出质量m </span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;w[i]);</span><br><span class="line">sum += w[i];</span><br><span class="line">&#125;</span><br><span class="line">dp[<span class="number">0</span>][<span class="number">0</span>] = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt;= sum; j++)&#123;</span><br><span class="line">dp[i][j] = dp[i<span class="number">-1</span>][j] || dp[i<span class="number">-1</span>][<span class="built_in">abs</span>(j-w[i])] || dp[i<span class="number">-1</span>][j+w[i]];<span class="comment">//不选 放左边 放右边 </span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= sum; i++)</span><br><span class="line"><span class="keyword">if</span>(dp[n][i]) ans++;</span><br><span class="line">cout&lt;&lt;ans;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>dfs暴力练手</strong><br>50%数据<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span> </span></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> ans;</span><br><span class="line"><span class="type">int</span> w[<span class="number">1000000</span>]; </span><br><span class="line"><span class="type">bool</span> st[<span class="number">100000</span>];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> k,<span class="type">int</span> sum)</span><span class="comment">//表示k个的砝码,重量是sum </span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(k &gt; n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(sum &gt; <span class="number">0</span> &amp;&amp; !st[sum])<span class="comment">// 判断选出来的n个砝码的重量是否没被标记过 ，如没标记则答案加1 </span></span><br><span class="line">        &#123;</span><br><span class="line">            ans++;</span><br><span class="line">            st[sum] = <span class="literal">true</span>;<span class="comment">//标记这个重量 </span></span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;   </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">dfs</span>(k+<span class="number">1</span>,sum-w[k]);<span class="comment">//砝码放左边</span></span><br><span class="line">        <span class="built_in">dfs</span>(k+<span class="number">1</span>,sum);<span class="comment">//不选用当前的砝码 </span></span><br><span class="line">        <span class="built_in">dfs</span>(k+<span class="number">1</span>,sum+w[k]);<span class="comment">//砝码放右边 </span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n); </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;w[i]); </span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, ans); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 算法练习 </category>
          
          <category> ACWing </category>
          
      </categories>
      
      
        <tags>
            
            <tag> dp </tag>
            
            <tag> dfs </tag>
            
            <tag> 背包问题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2023-3-11蓝桥杯模拟赛</title>
      <link href="/2023/03/11/%E8%93%9D%E6%A1%A5%E6%9D%AF%E6%A8%A1%E6%8B%9F%E8%B5%9B20230311/"/>
      <url>/2023/03/11/%E8%93%9D%E6%A1%A5%E6%9D%AF%E6%A8%A1%E6%8B%9F%E8%B5%9B20230311/</url>
      
        <content type="html"><![CDATA[<h2 id="填空题"><a href="#填空题" class="headerlink" title="填空题"></a>填空题</h2><h3 id="最小的十六进制-答案：2730"><a href="#最小的十六进制-答案：2730" class="headerlink" title="最小的十六进制(答案：2730)"></a>最小的十六进制(答案：2730)</h3><p><strong>问题描述</strong><br>　　请找到一个大于 2022 的最小数，这个数转换成十六进制之后，所有的数位（不含前导 0）都为字母（A 到 F）。</p><blockquote><p>直接用程序员计算器即可</p></blockquote><h3 id="Excel的列-答案：BYT"><a href="#Excel的列-答案：BYT" class="headerlink" title="Excel的列(答案：BYT)"></a>Excel的列(答案：BYT)</h3><p><strong>问题描述</strong><br>　　在 Excel 中，列的名称使用英文字母的组合。前 26 列用一个字母，依次为 A 到 Z，接下来 26*26 列使用两个字母的组合，依次为 AA 到 ZZ。<br>　　请问第 2022 列的名称是什么？</p><blockquote><p>新定义进制转换<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">2022 % 26 = 20 == T</span><br><span class="line">2022 /= 26 ==  77</span><br><span class="line">77 % 26 == 25 == Y</span><br><span class="line">77 /= 26 == 2</span><br><span class="line">2 == B</span><br></pre></td></tr></table></figure></p></blockquote><h3 id="相等日期-答案：70910"><a href="#相等日期-答案：70910" class="headerlink" title="相等日期(答案：70910)"></a>相等日期(答案：70910)</h3><p><strong>问题描述</strong></p><p>对于一个日期，我们可以计算出年份的各个数位上的数字之和，也可以分别计算月和日的各位数字之和。请问从 1900 年 1 月 1 日至 9999 年 12 月 31 日，总共有多少天，年份的数位数字之和等于月的数位数字之和加日的数位数字之和。<br>例如，2022年11月13日满足要求，因为 2+0+2+2=(1+1)+(1+3) 。<br>请提交满足条件的日期的总数量。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> m[<span class="number">12</span>] = &#123;<span class="number">31</span>, <span class="number">28</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>&#125;;</span><br><span class="line"><span class="type">int</span> m2[<span class="number">12</span>] = &#123;<span class="number">31</span>, <span class="number">29</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>&#125;;</span><br><span class="line"><span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//是闰年</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">isRun</span><span class="params">(<span class="type">int</span> y)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>((y% <span class="number">4</span>  == <span class="number">0</span> &amp;&amp; y %<span class="number">100</span> != <span class="number">0</span> )|| y % <span class="number">400</span> == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">check</span><span class="params">(<span class="type">int</span> y, <span class="type">int</span>  m, <span class="type">int</span> d)</span></span>&#123;</span><br><span class="line"><span class="type">int</span> sy = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(y)&#123;</span><br><span class="line">sy += y % <span class="number">10</span>;</span><br><span class="line">y/=<span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> sd = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(m)&#123;</span><br><span class="line">sd+=m%<span class="number">10</span>;</span><br><span class="line">m/=<span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(d)&#123;</span><br><span class="line">sd+=d%<span class="number">10</span>;</span><br><span class="line">d/=<span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sy == sd) ans++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> y = <span class="number">1900</span>; y &lt;= <span class="number">9999</span>; y++)&#123;</span><br><span class="line"><span class="keyword">if</span>(!<span class="built_in">isRun</span>(y))&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">12</span>; i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> d = <span class="number">1</span>; d &lt;= m[i<span class="number">-1</span>]; d++)&#123;</span><br><span class="line"><span class="built_in">check</span>(y,i,d);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">12</span>; i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> d = <span class="number">1</span>; d &lt;= m2[i<span class="number">-1</span>]; d++)&#123;</span><br><span class="line"><span class="built_in">check</span>(y,i,d);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;ans;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="多少种取法-答案：189"><a href="#多少种取法-答案：189" class="headerlink" title="多少种取法(答案：189)"></a>多少种取法(答案：189)</h3><p><strong>问题描述</strong><br>　　小蓝有 30 个数，分别为：99, 22, 51, 63, 72, 61, 20, 88, 40, 21, 63, 30, 11, 18, 99, 12, 93, 16, 7, 53, 64, 9, 28, 84, 34, 96, 52, 82, 51, 77 。<br>　　小蓝可以在这些数中取出两个序号不同的数，共有 30*29/2=435 种取法。<br>　　请问这 435 种取法中，有多少种取法取出的两个数的乘积大于等于 2022 。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[<span class="number">30</span>] = &#123;<span class="number">99</span>, <span class="number">22</span>, <span class="number">51</span>, <span class="number">63</span>, <span class="number">72</span>, <span class="number">61</span>, <span class="number">20</span>, <span class="number">88</span>, <span class="number">40</span>, <span class="number">21</span>, <span class="number">63</span>, <span class="number">30</span>, <span class="number">11</span>, <span class="number">18</span>, <span class="number">99</span>, <span class="number">12</span>, <span class="number">93</span>, <span class="number">16</span>, <span class="number">7</span>, <span class="number">53</span>, <span class="number">64</span>, <span class="number">9</span>, <span class="number">28</span>, <span class="number">84</span>, <span class="number">34</span>, <span class="number">96</span>, <span class="number">52</span>, <span class="number">82</span>, <span class="number">51</span>, <span class="number">77</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">30</span>; i ++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">30</span>; j ++)&#123;</span><br><span class="line"><span class="keyword">if</span>(i == j) <span class="keyword">continue</span>;</span><br><span class="line"><span class="type">int</span> m = a[i] * a[j];</span><br><span class="line"><span class="keyword">if</span>(m &gt;= <span class="number">2022</span>) ans++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;ans/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="最大连通分块-答案：148"><a href="#最大连通分块-答案：148" class="headerlink" title="最大连通分块(答案：148)"></a>最大连通分块(答案：148)</h3><p><strong>问题描述</strong><br>　　小蓝有一个 30 行 60 列的数字矩阵，矩阵中的每个数都是 0 或 1 。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">　　110010000011111110101001001001101010111011011011101001111110</span><br><span class="line">　　010000000001010001101100000010010110001111100010101100011110</span><br><span class="line">　　001011101000100011111111111010000010010101010111001000010100</span><br><span class="line">　　101100001101011101101011011001000110111111010000000110110000</span><br><span class="line">　　010101100100010000111000100111100110001110111101010011001011</span><br><span class="line">　　010011011010011110111101111001001001010111110001101000100011</span><br><span class="line">　　101001011000110100001101011000000110110110100100110111101011</span><br><span class="line">　　101111000000101000111001100010110000100110001001000101011001</span><br><span class="line">　　001110111010001011110000001111100001010101001110011010101110</span><br><span class="line">　　001010101000110001011111001010111111100110000011011111101010</span><br><span class="line">　　011111100011001110100101001011110011000101011000100111001011</span><br><span class="line">　　011010001101011110011011111010111110010100101000110111010110</span><br><span class="line">　　001110000111100100101110001011101010001100010111110111011011</span><br><span class="line">　　111100001000001100010110101100111001001111100100110000001101</span><br><span class="line">　　001110010000000111011110000011000010101000111000000110101101</span><br><span class="line">　　100100011101011111001101001010011111110010111101000010000111</span><br><span class="line">　　110010100110101100001101111101010011000110101100000110001010</span><br><span class="line">　　110101101100001110000100010001001010100010110100100001000011</span><br><span class="line">　　100100000100001101010101001101000101101000000101111110001010</span><br><span class="line">　　101101011010101000111110110000110100000010011111111100110010</span><br><span class="line">　　101111000100000100011000010001011111001010010001010110001010</span><br><span class="line">　　001010001110101010000100010011101001010101101101010111100101</span><br><span class="line">　　001111110000101100010111111100000100101010000001011101100001</span><br><span class="line">　　101011110010000010010110000100001010011111100011011000110010</span><br><span class="line">　　011110010100011101100101111101000001011100001011010001110011</span><br><span class="line">　　000101000101000010010010110111000010101111001101100110011100</span><br><span class="line">　　100011100110011111000110011001111100001110110111001001000111</span><br><span class="line">　　111011000110001000110111011001011110010010010110101000011111</span><br><span class="line">　　011110011110110110011011001011010000100100101010110000010011</span><br><span class="line">　　010011110011100101010101111010001001001111101111101110011101</span><br></pre></td></tr></table></figure><br>　　如果从一个标为 1 的位置可以通过上下左右走到另一个标为 1 的位置，则称两个位置连通。与某一个标为 1 的位置连通的所有位置（包括自己）组成一个连通分块。<br>　　请问矩阵中最大的连通分块有多大？<br>答案提交<br>　　这是一道结果填空的题，你只需要算出结果后提交即可。本题的结果为一个整数，在提交答案时只填写这个整数，填写多余的内容将无法得分。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span> </span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">char</span> g[<span class="number">35</span>][<span class="number">65</span>];</span><br><span class="line"><span class="type">bool</span> st[<span class="number">35</span>][<span class="number">65</span>];</span><br><span class="line"><span class="type">int</span> n = <span class="number">30</span>, m = <span class="number">60</span>;</span><br><span class="line"><span class="type">int</span> dx[] = &#123;<span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">0</span>&#125;, dy[] = &#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>&#125;; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">bfs</span><span class="params">(<span class="type">int</span> u, <span class="type">int</span> v)</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> ans = <span class="number">1</span>;</span><br><span class="line">st[u][v] = <span class="literal">true</span>;</span><br><span class="line">queue &lt;pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt;&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(&#123;u, v&#125;);</span><br><span class="line"><span class="keyword">while</span>(q.<span class="built_in">size</span>()) &#123;</span><br><span class="line"><span class="keyword">auto</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i ++) &#123;</span><br><span class="line"><span class="type">int</span> x = dx[i] + t.first, y = dy[i] + t.second;</span><br><span class="line"><span class="keyword">if</span>(x &lt; <span class="number">1</span> || x &gt; n || y &lt; <span class="number">1</span> || y &gt; m) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span>(st[x][y]) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span>(g[x][y] == <span class="string">&#x27;1&#x27;</span>) &#123;</span><br><span class="line">st[x][y] = <span class="literal">true</span>;</span><br><span class="line">q.<span class="built_in">push</span>(&#123;x, y&#125;);</span><br><span class="line">ans ++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(st, <span class="number">0</span>, <span class="keyword">sizeof</span> st);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">30</span>; i ++)</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= <span class="number">60</span>; j ++)</span><br><span class="line">cin &gt;&gt; g[i][j];</span><br><span class="line"> </span><br><span class="line"><span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">30</span>; i ++)</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= <span class="number">60</span>; j ++)</span><br><span class="line"><span class="keyword">if</span>(!st[i][j] &amp;&amp; g[i][j] == <span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">res = <span class="built_in">max</span>(res, <span class="built_in">bfs</span>(i, j));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; res &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="编程题"><a href="#编程题" class="headerlink" title="编程题"></a>编程题</h2><h3 id="哪一天"><a href="#哪一天" class="headerlink" title="哪一天"></a>哪一天</h3><p><strong>问题描述</strong><br>　　给定一天是一周中的哪天，请问 n 天后是一周中的哪天？<br><strong>输入格式</strong><br>　　输入第一行包含一个整数 w，表示给定的天是一周中的哪天，w 为 1 到 6 分别表示周一到周六，w 为 7 表示周日。<br>　　第二行包含一个整数 n。<br><strong>输出格式</strong><br>　　输出一行包含一个整数，表示 n 天后是一周中的哪天，1 到 6 分别表示周一到周六，7 表示周日。<br><strong>样例输入</strong><br>6<br>10<br><strong>样例输出</strong><br>2<br><strong>评测用例规模与约定</strong><br>对于所有评测用例，1 &lt;= n &lt;= 1000000。</p><blockquote><p>day等于7的时候需要特判一下输出7 </p></blockquote><h3 id="信号覆盖"><a href="#信号覆盖" class="headerlink" title="信号覆盖"></a>信号覆盖</h3><p><strong>问题描述</strong><br>小蓝负责一块区域的信号塔安装，整块区域是一个长方形区域，建立坐标轴后，西南角坐标为 (0, 0)， 东南角坐标为 (W, 0)， 西北角坐标为 (0, H)， 东北角坐标为 (W, H)。其中 W, H 都是整数。<br>他在 n 个位置设置了信号塔，每个信号塔可以覆盖以自己为圆心，半径为 R 的圆形（包括边缘）。<br>为了对信号覆盖的情况进行检查，小蓝打算在区域内的所有横纵坐标为整数的点进行测试，检查信号状态。其中横坐标范围为 0 到 W，纵坐标范围为 0 到 H，总共测试 (W+1) <em> (H+1) 个点。<br>给定信号塔的位置，请问这 (W+1)</em>(H+1) 个点中有多少个点被信号覆盖。</p><p><strong>输入格式</strong></p><p>输入第一行包含四个整数 W, H, n, R，相邻整数之间使用一个空格分隔。<br>接下来 n 行，每行包含两个整数 x, y，表示一个信号塔的坐标。信号塔可能重合，表示两个信号发射器装在了同一个位置。</p><p><strong>输出格式</strong><br>输出一行包含一个整数，表示答案。</p><p><strong>样例输入</strong><br>10 10 2 5<br>0 0<br>7 0<br><strong>样例输出</strong><br>57<br><strong>评测用例规模与约定</strong><br>对于所有评测用例，1 &lt;= W, H &lt;= 100，1 &lt;= n &lt;= 100, 1 &lt;= R &lt;= 100, 0 &lt;= x &lt;= W, 0 &lt;= y &lt;= H。</p><blockquote><p>暴力枚举<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> w,h,n,r;</span><br><span class="line"><span class="type">int</span> x[<span class="number">102</span>];</span><br><span class="line"><span class="type">int</span> y[<span class="number">102</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">int</span> ix, <span class="type">int</span> jy)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line"><span class="type">int</span> s = (ix-x[i])*(ix-x[i]) + (jy-y[i])*(jy-y[i]);</span><br><span class="line"><span class="keyword">if</span>(s &lt;= r*r)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">cin&gt;&gt;w&gt;&gt;h&gt;&gt;n&gt;&gt;r;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">cin &gt;&gt; x[i] &gt;&gt; y[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt;= w; i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt;= h; j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">check</span>(i, j)) ans ++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;ans;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></blockquote><h3 id="清理水草"><a href="#清理水草" class="headerlink" title="清理水草"></a>清理水草</h3><p><strong>问题描述</strong><br>小蓝有一个 n * m 大小的矩形水域，小蓝将这个水域划分为 n 行 m 列，行数从 1 到 n 标号，列数从 1 到 m 标号。每行和每列的宽度都是单位 1 。<br>现在，这个水域长满了水草，小蓝要清理水草。<br>每次，小蓝可以清理一块矩形的区域，从第 r1 行（含）到第 r2 行（含）的第 c1 列（含）到 c2 列（含）。<br>经过一段时间清理后，请问还有多少地方没有被清理过。</p><p><strong>输入格式</strong><br>输入第一行包含两个整数 n, m，用一个空格分隔。<br>第二行包含一个整数 t ，表示清理的次数。<br>接下来 t 行，每行四个整数 r1, c1, r2, c2，相邻整数之间用一个空格分隔，表示一次清理。请注意输入的顺序。</p><p><strong>输出格式</strong><br>输出一行包含一个整数，表示没有被清理过的面积。</p><p><strong>样例输入1</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">2 3</span><br><span class="line">2</span><br><span class="line">1 1 1 3</span><br><span class="line">1 2 2 2</span><br></pre></td></tr></table></figure></p><p><strong>样例输出1</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><br><strong>样例输入2</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">30 20</span><br><span class="line">2</span><br><span class="line">5 5 10 15</span><br><span class="line">6 7 15 9</span><br></pre></td></tr></table></figure></p><p><strong>样例输出2</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">519</span><br></pre></td></tr></table></figure><br><strong>评测用例规模与约定</strong><br>对于所有评测用例，1 &lt;= r1 &lt;= r2 &lt;= n &lt;= 100, 1 &lt;= c1 &lt;= c2 &lt;= m &lt;= 100, 0 &lt;= t &lt;= 100。</p><blockquote><p><a href="https://blog.csdn.net/weixin_45629285/article/details/111146240?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522167853523116800227459868%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&amp;request_id=167853523116800227459868&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~pc_rank_34-2-111146240-null-null.142^v73^pc_new_rank,201^v4^add_ask,239^v2^insert_chatgpt&amp;utm_term=%E4%BA%8C%E7%BB%B4%E5%B7%AE%E5%88%86%E6%95%B0%E7%BB%84&amp;spm=1018.2226.3001.4187">二维差分数组</a></p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n,m,t;</span><br><span class="line"><span class="type">int</span> a[<span class="number">105</span>][<span class="number">105</span>];</span><br><span class="line"><span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">insert</span><span class="params">(<span class="type">int</span> x1, <span class="type">int</span> y1, <span class="type">int</span> x2, <span class="type">int</span> y2)</span></span>&#123;</span><br><span class="line">    a[x1][y1] += <span class="number">1</span>;</span><br><span class="line">    a[x2 + <span class="number">1</span>][y1] -= <span class="number">1</span>;</span><br><span class="line">    a[x1][y2 + <span class="number">1</span>] -= <span class="number">1</span>;</span><br><span class="line">    a[x2 + <span class="number">1</span>][y2 + <span class="number">1</span>] += <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m &gt;&gt; t;</span><br><span class="line">    <span class="type">int</span> r1, c1, r2, c2;</span><br><span class="line">    <span class="comment">//处理二维差分数组</span></span><br><span class="line">    <span class="keyword">while</span> (t--)&#123;</span><br><span class="line">        cin &gt;&gt; r1 &gt;&gt; c1 &gt;&gt; r2 &gt;&gt; c2;</span><br><span class="line">        <span class="built_in">insert</span>(r1, c1, r2, c2);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//恢复二维差分数组</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j++)&#123;</span><br><span class="line">            a[i][j] += a[i - <span class="number">1</span>][j] + a[i][j - <span class="number">1</span>] - a[i - <span class="number">1</span>][j - <span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!a[i][j])</span><br><span class="line">                ans++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="最长滑行"><a href="#最长滑行" class="headerlink" title="最长滑行"></a>最长滑行</h3><p><strong>问题描述</strong><br>　　小蓝准备在一个空旷的场地里面滑行，这个场地的高度不一，小蓝用一个 n 行 m 列的矩阵来表示场地，矩阵中的数值表示场地的高度。<br>　　如果小蓝在某个位置，而他上、下、左、右中有一个位置的高度（严格）低于当前的高度，小蓝就可以滑过去，滑动距离为 1 。<br>　　如果小蓝在某个位置，而他上、下、左、右中所有位置的高度都大于等于当前的高度，小蓝的滑行就结束了。<br>　　小蓝不能滑出矩阵所表示的场地。<br>　　小蓝可以任意选择一个位置开始滑行，请问小蓝最多能滑行多远距离。<br><strong>输入格式</strong><br>　　输入第一行包含两个整数 n, m，用一个空格分隔。<br>　　接下来 n 行，每行包含 m 个整数，相邻整数之间用一个空格分隔，依次表示每个位置的高度。<br><strong>输出格式</strong><br>输出一行包含一个整数，表示答案。<br><strong>样例输入</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">4 5</span><br><span class="line">1 4 6 3 1</span><br><span class="line">11 8 7 3 1</span><br><span class="line">9 4 5 2 1</span><br><span class="line">1 3 2 2 1</span><br></pre></td></tr></table></figure><br><strong>样例输出</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">7</span><br></pre></td></tr></table></figure><br><strong>样例说明</strong><br>滑行的位置一次为 (2, 1), (2, 2), (2, 3), (3, 3), (3, 2), (4, 2), (4, 3)。<br><strong>评测用例规模与约定</strong><br>对于 30% 评测用例，1 &lt;= n &lt;= 20，1 &lt;= m &lt;= 20，0 &lt;= 高度 &lt;= 100。<br>对于所有评测用例，1 &lt;= n &lt;= 100，1 &lt;= m &lt;= 100，0</p><blockquote><p>dfs暴力 \ 记忆化搜索？？？不会</p></blockquote><h3 id="区间最小值"><a href="#区间最小值" class="headerlink" title="区间最小值"></a>区间最小值</h3><p><strong>题目描述</strong><br>小蓝有一个序列a[1], a[2]. …. a[n].<br>给定一个正整数k，请问对于每一个1到n之间的序号i，a[i-k], a[i-k+1]…. a[i+k]这2k+1个数中的最小值是多少?当某个下标超过1到n的范围时，数不存在，求最小值时只取存在的那些值。<br><strong>输入格式</strong><br>输入的第一行包含一整数n。<br>第二行包含n个整数，分别表示a[1], a[2]. … a[n]。第三行包含一个整数k。<br><strong>输出格式</strong><br>输出一行，包含n个整数，分别表示对于每个序号求得的最小值。<br><strong>样例输入</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">5 2 7 4 3</span><br><span class="line">1</span><br></pre></td></tr></table></figure><br><strong>样例输出</strong><br><code>2 2 2 3 3</code><br><strong>评测用例规模与约定</strong><br>对于30%的评测用例，1&lt;= n&lt;= 1000，1 &lt;= a[i]&lt;=1000。<br>对于50%的评测用例，1&lt;= n&lt;= 10000，1 &lt;= a[]&lt;=10000。<br>对于所有评测用例，1&lt;= n&lt;= 1000000，1 &lt;= a[i]&lt;=100000。</p><blockquote><p>暴力骗分 单调队列、ST表？？？不会<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[<span class="number">1000005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i&lt;= n; i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> k;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;k);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i&lt;= n; i++)&#123;</span><br><span class="line"><span class="type">int</span> ans = <span class="number">1000005</span>;</span><br><span class="line"><span class="type">int</span> l = <span class="built_in">max</span>(<span class="number">1</span>, i-k);</span><br><span class="line"><span class="type">int</span> r = <span class="built_in">min</span>(n, i+k);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = l; j&lt;= r; j++)&#123;</span><br><span class="line">ans = <span class="built_in">min</span>(ans, a[j]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 算法练习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 模拟 </tag>
            
            <tag> 枚举 </tag>
            
            <tag> dfs </tag>
            
            <tag> 进制转换 </tag>
            
            <tag> 差分 </tag>
            
            <tag> bfs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ACWing 4405. 统计子矩阵</title>
      <link href="/2023/03/09/ACWing4405%E7%BB%9F%E8%AE%A1%E5%AD%90%E7%9F%A9%E9%98%B5/"/>
      <url>/2023/03/09/ACWing4405%E7%BB%9F%E8%AE%A1%E5%AD%90%E7%9F%A9%E9%98%B5/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">难度：中等</span><br><span class="line">时/空限制：1s / 256MB</span><br><span class="line">总通过数：4005</span><br><span class="line">总尝试数：10637</span><br><span class="line">来源：第十三届蓝桥杯省赛C++B组</span><br><span class="line">算法标签</span><br><span class="line">枚举 前缀和 双指针</span><br></pre></td></tr></table></figure><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>给定一个 N×M 的矩阵 A，请你统计有多少个子矩阵 (最小 1×1，最大 N×M) 满足子矩阵中所有数的和不超过给定的整数 K?</p><p><strong>输入格式</strong><br>第一行包含三个整数 N,M 和 K。</p><p>之后 N 行每行包含 M 个整数，代表矩阵 A。</p><p><strong>输出格式</strong><br>一个整数代表答案。</p><p><strong>数据范围</strong><br>对于$30%$的数据，$N,M≤20$，<br>对于$70%$的数据，$N,M≤100$，<br>对于$100%$的数据，$1≤N,M≤500;0≤A_{ij}≤1000;1≤K≤2.5×10^8$。</p><p><strong>输入样例：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3 4 10</span><br><span class="line">1 2 3 4</span><br><span class="line">5 6 7 8</span><br><span class="line">9 10 11 12</span><br></pre></td></tr></table></figure><br><strong>输出样例：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">19</span><br></pre></td></tr></table></figure><br><strong>样例解释</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">满足条件的子矩阵一共有 19，包含：</span><br><span class="line">大小为 1×1 的有 10 个。</span><br><span class="line">大小为 1×2 的有 3 个。</span><br><span class="line">大小为 1×3 的有 2 个。</span><br><span class="line">大小为 1×4 的有 1 个。</span><br><span class="line">大小为 2×1 的有 3 个。</span><br></pre></td></tr></table></figure></p><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p><strong>二维前缀和</strong></p><p><a href="笔记二维前缀和.md">二维前缀和</a>预处理矩阵<br>枚举子矩阵的左上、右下两个端点(x1,x2,x3,x4), 计算子矩阵的和<br>时间复杂度O(n^4)，需优化<br>结果： Time Limit Exceeded 通过了 4/10个数据</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[<span class="number">505</span>][<span class="number">505</span>];</span><br><span class="line"><span class="type">int</span> s[<span class="number">505</span>][<span class="number">505</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n,m,k;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>,&amp;n,&amp;m,&amp;k);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j ++ )&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i][j]);</span><br><span class="line">            s[i][j] = s[i<span class="number">-1</span>][j] + s[i][j<span class="number">-1</span>] - s[i<span class="number">-1</span>][j<span class="number">-1</span>] + a[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> x1 = <span class="number">1</span>; x1 &lt;= n; x1 ++ )&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> y1 = <span class="number">1</span>; y1 &lt;= m; y1 ++ )&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> x2 = <span class="number">1</span>; x2 &lt;= n; x2 ++ )&#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> y2 = <span class="number">1</span>; y2 &lt;= m; y2 ++ )&#123;</span><br><span class="line">                    <span class="keyword">if</span>(x2 &lt; x1 || y2 &lt; y1) <span class="keyword">continue</span>;</span><br><span class="line">                    <span class="keyword">if</span>(s[x2][y2] - s[x1<span class="number">-1</span>][y2] - s[x2][y1<span class="number">-1</span>] + s[x1<span class="number">-1</span>][y1<span class="number">-1</span>] &lt;= k) ans++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>优化：一维前缀和 +  双指针</strong></p><p><a href="https://www.acwing.com/video/4234/">视频</a></p><p><img src="https://cdn.acwing.com/media/article/image/2022/04/11/115313_9c85b174b9-%E6%97%A0%E6%A0%87%E9%A2%98.png" alt=""></p><p>优化的方法是：<br>1) 通过指针 s 和 t 确定矩阵上下边界<br>2) 一维前缀和处理上下边界内的每一列<br>3) 枚举子矩阵的 左边界i 和 右边界j，i固定 j向右移动直到子矩阵刚好过大<br>4) i向右移动，使得子矩阵减小至范围内<br>5) 每一次竖指针发生变化 ans += 右-左+1</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[<span class="number">505</span>][<span class="number">505</span>];</span><br><span class="line"><span class="type">int</span> s[<span class="number">505</span>][<span class="number">505</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n,m,k;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>,&amp;n,&amp;m,&amp;k);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j ++ )&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i][j]);</span><br><span class="line">            s[i][j] = s[i<span class="number">-1</span>][j] + a[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++ )&#123;<span class="comment">// 横线</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = i; j &lt;= n; j ++ )&#123; <span class="comment">// 横线</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> l = <span class="number">1</span>, r = <span class="number">1</span>, sum = <span class="number">0</span>; r &lt;= m; r++ )&#123;<span class="comment">//移动右指针</span></span><br><span class="line">                sum += s[j][r] - s[i<span class="number">-1</span>][r];</span><br><span class="line">                <span class="keyword">while</span>(sum &gt; k)&#123;<span class="comment">//移动左指针</span></span><br><span class="line">                    sum -= s[j][l] - s[i<span class="number">-1</span>][l];</span><br><span class="line">                    l++;</span><br><span class="line">                &#125;</span><br><span class="line">                ans += r - l + <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld&quot;</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法练习 </category>
          
          <category> ACWing </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前缀和 </tag>
            
            <tag> 双指针 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>二维前缀和</title>
      <link href="/2023/03/07/%E7%AC%94%E8%AE%B0%E4%BA%8C%E7%BB%B4%E5%89%8D%E7%BC%80%E5%92%8C/"/>
      <url>/2023/03/07/%E7%AC%94%E8%AE%B0%E4%BA%8C%E7%BB%B4%E5%89%8D%E7%BC%80%E5%92%8C/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本篇介绍二维前缀和模板及应用</p></blockquote><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p><img src="https://img-blog.csdnimg.cn/img_convert/2309d130fa81f7423bd7c21a1141e6e2.png" alt=""></p><p>首先我们用s数组来表示前缀和，那么<br><code>s[i][j] = s[i - 1][j] + s[i][j - 1] - s[i- 1][j - 1] + a[i][j]</code><br>即这一个点的二位前缀和等于它左边的点和上面的点的前缀和之和减去左上角的点的前缀和（即多加的部分）再加上这个点的值就是该点的二维前缀和。</p><p>既然我们求出了每一个点对应的二维前缀和，那么如果需要求<strong>子矩阵的二维前缀和</strong>，该怎么求。</p><p><img src="https://img-blog.csdnimg.cn/img_convert/f2380a1259a36819cda1b0f2647e6267.png" alt=""></p><p>其实也很简单，从定义出发，以（x1，y1）为左上角，（x2，y2）为右下角的子矩阵的前缀和可以看成是（x2，y2）的前缀和减去（x2，y1-1）的前缀和再减去（x1-1，y2）的前缀和最后再加上（x1-1，y1-1）的前缀和即可。用公式表示就是<br><code>s[x2][y2] - s[x2][y1 - 1] - s[x1 - 1][y2] + s[x1 - 1][y1 - 1]</code></p><p>红色部分为所求区域，绿色和橙色是多余部分要减去，而灰色部分是多减了要加回来。</p><h2 id="模板题"><a href="#模板题" class="headerlink" title="模板题"></a>模板题</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>输入一个n行m列的整数矩阵，再输入q个询问，每个询问包含四个整数x1, y1, x2, y2，表示一个子矩阵的左上角坐标和右下角坐标。</p><p>对于每个询问输出子矩阵中所有数的和。</p><p><strong>输入格式</strong><br>第一行包含三个整数n，m，q。</p><p>接下来n行，每行包含m个整数，表示整数矩阵。</p><p>接下来q行，每行包含四个整数x1, y1, x2, y2，表示一组询问。</p><p><strong>输出格式</strong><br>共q行，每行输出一个询问的结果。</p><p><strong>数据范围</strong><br>1 ≤ n , m ≤ 1000 ,<br>1 ≤ q ≤ 200000 ,<br>1 ≤ x 1 ≤ x 2 ≤ n ,<br>1 ≤ y 1 ≤ y 2 ≤ m ,<br>− 1000 ≤ 矩阵内元素的值 ≤ 1000</p><p><strong>输入样例：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">3 4 3</span><br><span class="line">1 7 2 4</span><br><span class="line">3 6 2 8</span><br><span class="line">2 1 2 3</span><br><span class="line">1 1 2 2</span><br><span class="line">2 1 3 4</span><br><span class="line">1 3 3 4</span><br></pre></td></tr></table></figure></p><p><strong>输出样例：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">17</span><br><span class="line">27</span><br><span class="line">21</span><br></pre></td></tr></table></figure></p><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1010</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n, m, q;</span><br><span class="line"><span class="type">int</span> a[N][N] , s[N][N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m &gt;&gt; q;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j ++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span> , &amp;a[i][j]);</span><br><span class="line">            s[i][j] = s[i - <span class="number">1</span>][j] + s[i][j - <span class="number">1</span>] - s[i - <span class="number">1</span>][j - <span class="number">1</span>] + a[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">while</span>(q--)&#123;</span><br><span class="line">        <span class="type">int</span> x1, y1, x2, y2;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d%d&quot;</span>, &amp;x1, &amp;y1, &amp;x2, &amp;y2);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span> , s[x2][y2] - s[x2][y1 - <span class="number">1</span>] - s[x1 - <span class="number">1</span>][y2] + s[x1 - <span class="number">1</span>][y1 - <span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法练习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前缀和 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AcWing 2058. 笨拙的手指</title>
      <link href="/2023/03/04/ACWing2058%E7%AC%A8%E6%8B%99%E7%9A%84%E6%89%8B%E6%8C%87/"/>
      <url>/2023/03/04/ACWing2058%E7%AC%A8%E6%8B%99%E7%9A%84%E6%89%8B%E6%8C%87/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">难度：简单</span><br><span class="line">时/空限制：1s / 64MB</span><br><span class="line">总通过数：10012</span><br><span class="line">总尝试数：18453</span><br><span class="line">来源：USACO 2011 November Contest Bronze Division</span><br><span class="line">算法标签</span><br><span class="line">枚举 进位制 哈希表</span><br></pre></td></tr></table></figure><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>奶牛贝茜正在学习如何在不同进制之间转换数字。</p><p>但是她总是犯错误，因为她无法轻易的用两个前蹄握住笔。</p><p>每当贝茜将数字转换为一个新的进制并写下结果时，她总是将其中的某一位数字写错。</p><p>例如，如果她将数字 14 转换为二进制数，那么正确的结果应为 1110，但她可能会写下 0110 或 1111。</p><p>贝茜不会额外添加或删除数字，但是可能会由于写错数字的原因，写下包含前导 0 的数字。</p><p>给定贝茜将数字 N 转换为二进制数字以及三进制数字的结果，请确定 N 的正确初始值（十进制表示）。</p><p><strong>输入格式</strong><br>第一行包含 N 的二进制表示，其中一位是错误的。</p><p>第二行包含 N 的三进制表示，其中一位是错误的。</p><p><strong>输出格式</strong><br>输出正确的 N 的值。</p><p><strong>数据范围</strong><br>$ 0≤N≤10^9 $，且存在唯一解。</p><p><strong>输入样例：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1010</span><br><span class="line">212</span><br></pre></td></tr></table></figure><br><strong>输出样例：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">14</span><br></pre></td></tr></table></figure><br><strong>样例解释</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">14</span><br><span class="line"> 在二进制下的正确表示为 1110</span><br><span class="line">，在三进制下的正确表示为 112。</span><br></pre></td></tr></table></figure></p><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p><strong>思路：</strong><br>枚举二进制出错的位置，通过异或运算还原，<br>将还原出的二进制字符串通过秦九韶算法转换为10进制数<code>t</code><br>用哈希表<code>unordered_set</code>容器记录<code>t</code></p><p>同理枚举三进制出错的位置，再枚举该位置下的所有可能性<br>（0或1或2 且 与原数字不同）<br>将还原出的三进制字符串通过秦九韶算法转换为10进制数<code>x</code><br>通过<code>count()</code>函数判断哈希表中是否存在<code>x</code>, 若存在即为答案。</p><p><strong>注意：</strong><br>字符串处理时要注意字符和数字的转换</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unordered_set&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将b进制的数转化成十进制</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">get</span><span class="params">(string s, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 秦九韶算法</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> c: s)</span><br><span class="line">        res = res * b + c - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string a, b;</span><br><span class="line">    cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line"></span><br><span class="line">    unordered_set&lt;<span class="type">int</span>&gt; S;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; a.<span class="built_in">length</span>(); i++)<span class="comment">//2进制</span></span><br><span class="line">    &#123;</span><br><span class="line">        string ta = a;</span><br><span class="line">        ta[i] ^= <span class="number">1</span>;</span><br><span class="line">        <span class="comment">//前导0</span></span><br><span class="line">        <span class="keyword">if</span>(ta.<span class="built_in">length</span>() &gt; <span class="number">1</span> &amp;&amp; ta[<span class="number">0</span>] == <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        S.<span class="built_in">insert</span>(<span class="built_in">get</span>(ta, <span class="number">2</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; b.<span class="built_in">length</span>(); i++)<span class="comment">//三进制</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j ++)&#123;<span class="comment">//枚举0-2</span></span><br><span class="line">            string tb = b;</span><br><span class="line">            <span class="keyword">if</span>(b[i] - <span class="string">&#x27;0&#x27;</span> != j)&#123;</span><br><span class="line">                tb[i] = j + <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">                <span class="keyword">if</span>(tb.<span class="built_in">length</span>() &gt; <span class="number">1</span> &amp;&amp; tb[<span class="number">0</span>] == <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                <span class="type">int</span> x = <span class="built_in">get</span>(tb, <span class="number">3</span>);</span><br><span class="line">                <span class="keyword">if</span> (S.<span class="built_in">count</span>(x)) <span class="comment">// 如果哈希表中存在这个数x，则直接返回即为答案</span></span><br><span class="line">                &#123;</span><br><span class="line">                    cout &lt;&lt; x &lt;&lt; endl;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="进制转换总结"><a href="#进制转换总结" class="headerlink" title="进制转换总结"></a>进制转换总结</h3><p><a href="https://blog.csdn.net/weixin_44668898/article/details/101443574">csdn</a></p><ol><li><p>任意2~36进制数转化为10进制数:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//m是要转换成的进制，s是给定的m进制下的字符串</span></span><br><span class="line"><span class="comment">//结果为int型</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">binary</span><span class="params">(<span class="type">int</span> m, string s)</span></span>&#123; </span><br><span class="line">    <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;s.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        <span class="type">char</span> t=s[i];</span><br><span class="line">        <span class="keyword">if</span>(t&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;t&lt;=<span class="string">&#x27;9&#x27;</span>) </span><br><span class="line">ans=ans*m+t-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">ans=ans*m+t-<span class="string">&#x27;a&#x27;</span>+<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>10进制数转换为任意的n进制数:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//n是待转换的十进制数，m是待转换成的进制数 </span></span><br><span class="line"><span class="function">string <span class="title">intToA</span><span class="params">(<span class="type">int</span> n,<span class="type">int</span> m)</span></span>&#123;</span><br><span class="line">    string ans=<span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">do</span>&#123;<span class="comment">//使用do&#123;&#125;while()循环类型以防止输入为0的情况</span></span><br><span class="line">        <span class="type">int</span> t=n%m;</span><br><span class="line">        <span class="keyword">if</span>(t&gt;=<span class="number">0</span>&amp;&amp;t&lt;=<span class="number">9</span>)    </span><br><span class="line">ans+=(t+<span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">ans+=(t+<span class="string">&#x27;a&#x27;</span><span class="number">-10</span>);</span><br><span class="line">        n/=m;</span><br><span class="line">    &#125;<span class="keyword">while</span>(n);   </span><br><span class="line">    ans.<span class="built_in">reverse</span>();</span><br><span class="line">    <span class="keyword">return</span> ans;    </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 算法练习 </category>
          
          <category> ACWing </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 哈希表 </tag>
            
            <tag> 进制转换 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AcWing 1249 亲戚（并查集）</title>
      <link href="/2023/03/01/ACWing1249%E4%BA%B2%E6%88%9A%E5%B9%B6%E6%9F%A5%E9%9B%86/"/>
      <url>/2023/03/01/ACWing1249%E4%BA%B2%E6%88%9A%E5%B9%B6%E6%9F%A5%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">难度：简单</span><br><span class="line">时/空限制：1s / 64MB</span><br><span class="line">总通过数：4391</span><br><span class="line">总尝试数：12317</span><br><span class="line">来源：《信息学奥赛一本通》</span><br><span class="line">算法标签</span><br><span class="line">并查集</span><br></pre></td></tr></table></figure><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>或许你并不知道，你的某个朋友是你的亲戚。</p><p>他可能是你的曾祖父的外公的女婿的外甥女的表姐的孙子。</p><p>如果能得到完整的家谱，判断两个人是否是亲戚应该是可行的，但如果两个人的最近公共祖先与他们相隔好几代，使得家谱十分庞大，那么检验亲戚关系实非人力所能及。</p><p>在这种情况下，最好的帮手就是计算机。</p><p>为了将问题简化，你将得到一些亲戚关系的信息，如Marry和Tom是亲戚，Tom和Ben是亲戚，等等。</p><p>从这些信息中，你可以推出Marry和Ben是亲戚。</p><p>请写一个程序，对于我们的关于亲戚关系的提问，以最快的速度给出答案。</p><p><strong>输入格式</strong><br>输入由两部分组成。</p><p>第一部分以 N,M 开始。N 为问题涉及的人的个数。这些人的编号为 1,2,3,…,N。下面有 M 行，每行有两个数 ai,bi，表示已知 ai 和 bi 是亲戚。</p><p>第二部分以 Q 开始。以下 Q 行有 Q 个询问，每行为 ci,di，表示询问 ci 和 di 是否为亲戚。</p><p><strong>输出格式</strong><br>对于每个询问 ci,di，输出一行：若 ci 和 di 为亲戚，则输出“Yes”，否则输出“No”。</p><p><strong>数据范围</strong><br>$%1≤N≤20000,$<br>$1≤M≤10^6,$<br>$1≤Q≤10^6$</p><p><strong>输入样例：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">10 7</span><br><span class="line">2 4</span><br><span class="line">5 7</span><br><span class="line">1 3</span><br><span class="line">8 9</span><br><span class="line">1 2</span><br><span class="line">5 6</span><br><span class="line">2 3</span><br><span class="line">3</span><br><span class="line">3 4</span><br><span class="line">7 10</span><br><span class="line">8 9</span><br></pre></td></tr></table></figure><br><strong>输出样例：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Yes</span><br><span class="line">No</span><br><span class="line">Yes</span><br></pre></td></tr></table></figure></p><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p><strong>经典并查集算法：</strong></p><p>并查集是一种树型的数据结构，用于处理一些不相交集合的合并及查询问题。常常在使用中以森林来表示。</p><p><strong>合并：</strong></p><p>当许多组元素需要合并在一起时，只需将各组元素的老大(根)合并在一起即可，也就是让其中一个根指向另一个根，就使得两棵树合并成了一棵树，也就把两个组合并为了一个组。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">                       4</span><br><span class="line">  1       4           / \</span><br><span class="line"> / \   +   \     =   1   5</span><br><span class="line">2   3       5        /\   \</span><br><span class="line">             \      2  3   6</span><br><span class="line">              6</span><br></pre></td></tr></table></figure><br>因为并查集的结构是树状结构，所以需注意退化问题。避免退化发生的方法如下：<br>首先，我们合并时，可记录这棵树的高度。接下来当我们需合并两棵树时，我们先对两棵树的高度进行判断，如不同，则让高度小的树的根指向高度大的根。</p><p><strong>查询:</strong><br>当我们要查询两个元素是否属于同一个组时，我们需要沿着各个节点往上向树的根进行查询，如果最终发现<strong>两个元素的根相同</strong>，那么他们就属于同一个组。反之，则不属于同一个组。</p><div class="table-container"><table><thead><tr><th style="text-align:left">数据存储</th><th style="text-align:center">作用及举例</th></tr></thead><tbody><tr><td style="text-align:left">parent[]</td><td style="text-align:center">parent[ i ] = j 表示 节点 i 的父节点是 j（比如上面根结点为10的那棵树，有 parent[ 7 ] = 6 , parent[ 6 ] = 10 …）</td></tr><tr><td style="text-align:left">h[]</td><td style="text-align:center">h[ i ] = j 表示 节点 i 的高度为  j</td></tr></tbody></table></div><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> parent[<span class="number">20005</span>];<span class="comment">//记录父节点 parent[a]表示a的父节点下标</span></span><br><span class="line"><span class="type">int</span> h[<span class="number">20005</span>];<span class="comment">//height</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//找到根(父节点为自己)</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">findP</span><span class="params">(<span class="type">int</span> i)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (i == parent[i])</span><br><span class="line">        <span class="keyword">return</span> i;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">findP</span>(parent[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="comment">//初始化 父节点为自己</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= n; i++)</span><br><span class="line">        parent[i] = i;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> (m--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> a, b;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">        <span class="type">int</span> fa = <span class="built_in">findP</span>(a);</span><br><span class="line">        <span class="type">int</span> fb = <span class="built_in">findP</span>(b);</span><br><span class="line">        <span class="comment">//接枝</span></span><br><span class="line">        <span class="keyword">if</span> (h[fa] &lt;= h[fb])&#123;</span><br><span class="line">            parent[fa] = fb;</span><br><span class="line">            h[fb]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            parent[fb] = fa;</span><br><span class="line">            h[fa]++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> q;</span><br><span class="line">    cin &gt;&gt; q;</span><br><span class="line">    <span class="comment">//查询</span></span><br><span class="line">    <span class="keyword">while</span> (q--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> a, b;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">findP</span>(a) == <span class="built_in">findP</span>(b))</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Yes\n&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;No\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//路径压缩优化查询</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">findP</span><span class="params">(<span class="type">int</span> i)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (i == parent[i])</span><br><span class="line">        <span class="keyword">return</span> i;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        parent[i] = <span class="built_in">findP</span>(parent[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法练习 </category>
          
          <category> ACWing </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 并查集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AcWing 3777. 砖块</title>
      <link href="/2023/02/26/ACWing3777%E7%A0%96%E5%9D%97/"/>
      <url>/2023/02/26/ACWing3777%E7%A0%96%E5%9D%97/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">难度：简单</span><br><span class="line">时/空限制：1s / 64MB</span><br><span class="line">总通过数：4942</span><br><span class="line">总尝试数：8862</span><br><span class="line">来源：CF1271B</span><br><span class="line">算法标签</span><br><span class="line">递推</span><br></pre></td></tr></table></figure><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>n 个砖块排成一排，从左到右编号依次为 1∼n。</p><p>每个砖块要么是黑色的，要么是白色的。</p><p>现在你可以进行以下操作若干次（可以是 0 次）：</p><p><strong>选择两个相邻的砖块，反转它们的颜色。（黑变白，白变黑）</strong></p><p>你的目标是通过不超过 3n 次操作，将所有砖块的颜色变得一致。</p><p><strong>输入格式</strong><br>第一行包含整数 T，表示共有 T 组测试数据。</p><p>每组数据第一行包含一个整数 n。</p><p>第二行包含一个长度为 n 的字符串 s。其中的每个字符都是 W 或 B，如果第 i 个字符是 W，则表示第 i 号砖块是白色的，如果第 i 个字符是 B，则表示第 i 个砖块是黑色的。</p><p><strong>输出格式</strong><br>每组数据，如果无解则输出一行 −1。</p><p>否则，首先输出一行 k，表示需要的操作次数。</p><p>如果 k&gt;0，则还需再输出一行 k 个整数，p1,p2,…,pk。其中 pi 表示第 i 次操作，选中的砖块为 pi 和 pi+1 号砖块。</p><p>如果方案不唯一，则输出任意合理方案即可。</p><p><strong>数据范围</strong><br>1≤T≤10，<br>2≤n≤200。</p><p><strong>输入样例：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">8</span><br><span class="line">BWWWWWWB</span><br><span class="line">4</span><br><span class="line">BWBB</span><br><span class="line">5</span><br><span class="line">WWWWW</span><br><span class="line">3</span><br><span class="line">BWB</span><br></pre></td></tr></table></figure><br><strong>输出样例：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">6 2 4</span><br><span class="line">-1</span><br><span class="line">0</span><br><span class="line">2</span><br><span class="line">2 1</span><br></pre></td></tr></table></figure></p><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p><strong>贪心</strong>：<br>最终的字符串，要么全为白色，要么全为黑色。</p><ul><li>以目标全为白色为例，遍历字符串的前 n−1 个砖块，每遇到一个黑色砖块，就对其进行一次操作，将该砖块和下一个砖块变为另一种颜色，并将结果记录到数组中。如果发现最后一个砖块不为白色，那说明无法将砖块全部转化为白色；黑色同理。</li><li>若最终全转化为白色和全转化为黑色均不可行，则输出 −1。</li><li>输出一种可行的方案即可。</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">update</span><span class="params">(<span class="type">char</span>&amp; c)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (c == <span class="string">&#x27;W&#x27;</span>)</span><br><span class="line">        c = <span class="string">&#x27;B&#x27;</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        c = <span class="string">&#x27;W&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">turnTo</span><span class="params">(string s, <span class="type">char</span> c)</span></span>&#123;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; res;<span class="comment">//记录操作位置</span></span><br><span class="line">    string str = s;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; str.<span class="built_in">length</span>() - <span class="number">1</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (str[i] != c)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">update</span>(str[i]);</span><br><span class="line">            <span class="built_in">update</span>(str[i + <span class="number">1</span>]);</span><br><span class="line">            res.<span class="built_in">push_back</span>(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//判断最后一个位置</span></span><br><span class="line">    <span class="keyword">if</span>(str.<span class="built_in">back</span>() != c)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        cout &lt;&lt; res.<span class="built_in">size</span>() &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = res.<span class="built_in">size</span>()<span class="number">-1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; res[i] + <span class="number">1</span> &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span> (t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> n;</span><br><span class="line">        string s;</span><br><span class="line">        cin &gt;&gt; n &gt;&gt; s;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="built_in">turnTo</span>(s, <span class="string">&#x27;B&#x27;</span>) &amp;&amp; !<span class="built_in">turnTo</span>(s, <span class="string">&#x27;W&#x27;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;-1&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>讨论奇偶性进行模拟</strong></p><ul><li>如果个数都是奇数次，则不可能构造出来</li><li>如果w是奇数个。那就把b变成w</li><li>如果b是奇数个，或者b和w都是偶数个。把w都变成b即可</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> T;    cin &gt;&gt; T;</span><br><span class="line">    <span class="keyword">while</span> (T --)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> n;    cin &gt;&gt; n;</span><br><span class="line">        string s;    cin &gt;&gt; s;</span><br><span class="line">        <span class="type">int</span> w_cnt = <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> b_cnt = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">char</span> c : s)</span><br><span class="line">        &#123;</span><br><span class="line">            w_cnt += (c == <span class="string">&#x27;W&#x27;</span>);</span><br><span class="line">            b_cnt += (c == <span class="string">&#x27;B&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (w_cnt % <span class="number">2</span> == <span class="number">1</span> &amp;&amp; b_cnt % <span class="number">2</span> == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="number">-1</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> res_cnt = <span class="number">0</span>;</span><br><span class="line">            vector&lt;<span class="type">int</span>&gt; res;</span><br><span class="line">            <span class="keyword">if</span> (w_cnt % <span class="number">2</span> == <span class="number">1</span>) <span class="comment">//w是奇数个，b是偶数个。则b要变w</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">while</span> (i &lt; n - <span class="number">1</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (s[i] == <span class="string">&#x27;B&#x27;</span> &amp;&amp; s[i+<span class="number">1</span>] == <span class="string">&#x27;B&#x27;</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        s[i] = <span class="string">&#x27;W&#x27;</span>;</span><br><span class="line">                        s[i+<span class="number">1</span>] = <span class="string">&#x27;W&#x27;</span>;</span><br><span class="line">                        res_cnt ++ ;</span><br><span class="line">                        res.<span class="built_in">push_back</span>(i + <span class="number">1</span>);</span><br><span class="line">                        i += <span class="number">2</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span> (s[i] == <span class="string">&#x27;B&#x27;</span> &amp;&amp; s[i+<span class="number">1</span>] == <span class="string">&#x27;W&#x27;</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        s[i] = <span class="string">&#x27;W&#x27;</span>;</span><br><span class="line">                        s[i+<span class="number">1</span>] = <span class="string">&#x27;B&#x27;</span>;</span><br><span class="line">                        res_cnt ++;</span><br><span class="line">                        res.<span class="built_in">push_back</span>(i + <span class="number">1</span>);</span><br><span class="line">                        i ++;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span> (s[i] == <span class="string">&#x27;W&#x27;</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        i ++;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>        <span class="comment">//w要变b</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">int</span> i = <span class="number">0</span>; </span><br><span class="line">                <span class="keyword">while</span> (i &lt; n - <span class="number">1</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (s[i] == <span class="string">&#x27;W&#x27;</span> &amp;&amp; s[i+<span class="number">1</span>] == <span class="string">&#x27;W&#x27;</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        s[i] = <span class="string">&#x27;B&#x27;</span>;</span><br><span class="line">                        s[i+<span class="number">1</span>] = <span class="string">&#x27;B&#x27;</span>;</span><br><span class="line">                        res_cnt ++;</span><br><span class="line">                        res.<span class="built_in">push_back</span>(i + <span class="number">1</span>);</span><br><span class="line">                        i += <span class="number">2</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span> (s[i] == <span class="string">&#x27;W&#x27;</span> &amp;&amp; s[i+<span class="number">1</span>] == <span class="string">&#x27;B&#x27;</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        s[i] = <span class="string">&#x27;B&#x27;</span>;</span><br><span class="line">                        s[i+<span class="number">1</span>] = <span class="string">&#x27;W&#x27;</span>;</span><br><span class="line">                        res_cnt ++;</span><br><span class="line">                        res.<span class="built_in">push_back</span>(i + <span class="number">1</span>);</span><br><span class="line">                        i += <span class="number">1</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span> (s[i] == <span class="string">&#x27;B&#x27;</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        i ++;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (res_cnt &gt; <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                cout &lt;&lt; res_cnt &lt;&lt; endl;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> x : res)</span><br><span class="line">                &#123;</span><br><span class="line">                    cout &lt;&lt; x &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                cout &lt;&lt; endl;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                cout &lt;&lt; <span class="number">0</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法练习 </category>
          
          <category> ACWing </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 模拟 </tag>
            
            <tag> 贪心 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AcWing 1460 我在那</title>
      <link href="/2023/02/23/ACWing1460%E6%88%91%E5%9C%A8%E5%93%AA/"/>
      <url>/2023/02/23/ACWing1460%E6%88%91%E5%9C%A8%E5%93%AA/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">难度：简单</span><br><span class="line">时/空限制：1s / 64MB</span><br><span class="line">总通过数：6138</span><br><span class="line">总尝试数：8947</span><br><span class="line">来源：USACO 2019 December Contest Bronze</span><br><span class="line">算法标签</span><br><span class="line">哈希表 字符串哈希</span><br></pre></td></tr></table></figure><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>农夫约翰出门沿着马路散步，但是他现在发现自己可能迷路了！</p><p>沿路有一排共 $N$ 个农场。</p><p>不幸的是农场并没有编号，这使得约翰难以分辨他在这条路上所处的位置。</p><p>然而，每个农场都沿路设有一个彩色的邮箱，所以约翰希望能够通过查看最近的几个邮箱的颜色来唯一确定他所在的位置。</p><p>每个邮箱的颜色用 <code>A..Z</code> 之间的一个字母来指定，所以沿着道路的 $N$ 个邮箱的序列可以用一个长为 $N$ 的由字母 <code>A..Z</code> 组成的字符串来表示。</p><p>某些邮箱可能会有相同的颜色。</p><p>约翰想要知道最小的 <code>K</code> 的值，使得他查看任意连续 <code>K</code> 个邮箱序列，他都可以唯一确定这一序列在道路上的位置。</p><p>例如，假设沿路的邮箱序列为 <code>ABCDABC</code> 。</p><p>约翰不能令 K=3，因为如果他看到了 <code>ABC</code>，则沿路有两个这一连续颜色序列可能所在的位置。</p><p>最小可行的 K 的值为 K=4，因为如果他查看任意连续 4 个邮箱，那么可得到的连续颜色序列可以唯一确定他在道路上的位置。</p><p><strong>输入格式</strong><br>输入的第一行包含 N ，第二行包含一个由 N 个字符组成的字符串，每个字符均在 A..Z 之内。</p><p><strong>输出格式</strong><br>输出一行，包含一个整数，为可以解决农夫约翰的问题的最小 K 值。</p><p><strong>数据范围</strong><br>$1≤N≤100$</p><p><strong>输入样例：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">7</span><br><span class="line">ABCDABC</span><br></pre></td></tr></table></figure><br>输出样例：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure></p><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p>枚举步长和子串的起始点，通过set容器判断该子串是否出现过<br><code>st.count(s.substr(begin, end))</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;set&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    string s;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; s;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">1</span>; k &lt;= n; k++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line">        set&lt;string&gt; st;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i+k<span class="number">-1</span> &lt; n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            string t = s.<span class="built_in">substr</span>(i,k);</span><br><span class="line">            <span class="keyword">if</span> (st.<span class="built_in">count</span>(t) != <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                flag = <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                st.<span class="built_in">insert</span>(t);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (flag)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; k;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法练习 </category>
          
          <category> ACWing </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 哈希表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AcWing 3729. 改变数组元素</title>
      <link href="/2023/02/19/ACWing3729%E6%94%B9%E5%8F%98%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0/"/>
      <url>/2023/02/19/ACWing3729%E6%94%B9%E5%8F%98%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">难度：中等</span><br><span class="line">时/空限制：2s / 256MB</span><br><span class="line">总通过数：5478</span><br><span class="line">总尝试数：10327</span><br><span class="line">来源：CF1501B</span><br><span class="line">算法标签</span><br><span class="line">差分 区间合并</span><br></pre></td></tr></table></figure><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>给定一个空数组 V 和一个整数数组 a1,a2,…,an。<br>现在要对数组 V 进行 n 次操作。</p><p>第 i 次操作的具体流程如下：</p><p>从数组 V 尾部插入整数 0。<br>将位于数组 V 末尾的 $a_i$ 个元素都变为 1（已经是 1 的不予理会）。<br>注意：<br>$a_i$可能为 0，即不做任何改变。<br>$a_i$可能大于目前数组 V 所包含的元素个数，此时视为将数组内所有元素变为 1。<br>请你输出所有操作完成后的数组 V。</p><p><strong>输入格式</strong><br>第一行包含整数 T，表示共有 T 组测试数据。</p><p>每组数据第一行包含整数 n。</p><p>第二行包含 n 个整数 a1,a2,…,an。</p><p><strong>输出格式</strong><br>每组数据输出一行结果，表示所有操作完成后的数组 V，数组内元素之间用空格隔开。</p><p><strong>数据范围</strong><br>$1≤T≤20000$,<br>$1≤n≤2×10^5$,<br>$0≤a_i≤n$,<br>保证一个测试点内所有 n 的和不超过 $2×10^5$。</p><p><strong>输入样例：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">6</span><br><span class="line">0 3 0 0 1 3</span><br><span class="line">10</span><br><span class="line">0 0 0 1 0 5 0 0 0 2</span><br><span class="line">3</span><br><span class="line">0 0 0</span><br></pre></td></tr></table></figure><br><strong>输出样例：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1 1 0 1 1 1</span><br><span class="line">0 1 1 1 1 1 0 0 1 1</span><br><span class="line">0 0 0</span><br></pre></td></tr></table></figure></p><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p><strong>差分算法</strong></p><p>根据题意，有n次操作，每次操作都会在数组后面添加个0，那么最终得到的<strong>数组长度是原数组的两倍</strong>。我们需要输出的为<strong>后半段数组</strong>元素。</p><p>每次操作还会将某个区间内的数变为 1</p><p>故可以用差分数组记录数组中该位置被操作的次数，若次数大于0则代表该元素变为1。</p><p>对于初始数组的元素，因为不需要输出且仅用于确定一个区间，故我们可以用一个临时变量来记录，差分数组记录的范围可只保留后半段数组，即将后半段数组的第一个元素在差分数组中记录为第一个元素</p><p><strong>第i次操作区间：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">r = i;</span><br><span class="line">l = max(0, i-x+1) //x为初始数组的第i元素，用临时变量x记录</span><br></pre></td></tr></table></figure></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">200005</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> c[N];<span class="comment">//差分数组</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    <span class="type">int</span> n, x;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span> (t--)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            cin &gt;&gt; x;</span><br><span class="line">            <span class="type">int</span> l = <span class="built_in">max</span>(<span class="number">0</span>, i - x + <span class="number">1</span>);</span><br><span class="line">            <span class="type">int</span> r = i;</span><br><span class="line">            c[l]++;</span><br><span class="line">            c[r + <span class="number">1</span>]--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//恢复差分数组</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">            c[i] += c[i - <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (c[i] &gt; <span class="number">0</span>)</span><br><span class="line">                cout &lt;&lt; <span class="number">1</span> &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                cout &lt;&lt; <span class="number">0</span> &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= n+<span class="number">1</span>; i++)</span><br><span class="line">            c[i] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>暴力模拟</strong><br>TLE 5/10<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line">vector&lt;<span class="type">int</span>&gt; a;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; b;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="type">int</span> n;</span><br><span class="line">        cin&gt;&gt;n;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">            <span class="type">int</span> temp;</span><br><span class="line">            cin&gt;&gt;temp;</span><br><span class="line">            a.<span class="built_in">push_back</span>(temp);</span><br><span class="line">            b.<span class="built_in">push_back</span>(temp);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">            a.<span class="built_in">push_back</span>(<span class="number">0</span>);</span><br><span class="line">            <span class="type">int</span> temp = b[i];</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="built_in">min</span>(temp,n); j++)&#123;</span><br><span class="line">                a.<span class="built_in">pop_back</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="built_in">min</span>(temp,n); j++)&#123;</span><br><span class="line">                a.<span class="built_in">push_back</span>(<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = a.<span class="built_in">size</span>() - n; i &lt; a.<span class="built_in">size</span>(); i++)&#123;</span><br><span class="line">            cout&lt;&lt;a[i]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;endl;</span><br><span class="line">        a.<span class="built_in">clear</span>();</span><br><span class="line">        b.<span class="built_in">clear</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 算法练习 </category>
          
          <category> ACWing </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 差分 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于equals()方法的新发现</title>
      <link href="/2023/02/16/Java%E5%A4%8D%E4%B9%A0%E5%85%B3%E4%BA%8Eequals%E6%96%B9%E6%B3%95/"/>
      <url>/2023/02/16/Java%E5%A4%8D%E4%B9%A0%E5%85%B3%E4%BA%8Eequals%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<blockquote><p>补充笔记：<a href="Java复习equas_compareTo.md">关于 “equals” 和 “==” 和 “compareTo”</a></p></blockquote><p>在复习时发现一个奇怪的点：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span> <span class="params">(String[] args)</span>&#123;</span><br><span class="line">      <span class="type">Object</span> <span class="variable">o1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Object</span>();</span><br><span class="line">      <span class="type">Object</span> <span class="variable">o2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Object</span>();</span><br><span class="line">      System.out.println((o1 == o2) + <span class="string">&quot; &quot;</span> + (o1.equals(o2)));</span><br><span class="line">      </span><br><span class="line">      <span class="type">String</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>();</span><br><span class="line">      <span class="type">String</span> <span class="variable">t2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>();</span><br><span class="line">      System.out.println((t1 == t2) + <span class="string">&quot; &quot;</span> + (t1.equals(t2)));</span><br><span class="line">      </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">false false</span><br><span class="line">false true</span><br></pre></td></tr></table></figure><p>同样是equals方法，比较方式在不同的类中似乎有区别</p><h3 id="equals-方法在Object类中定义"><a href="#equals-方法在Object类中定义" class="headerlink" title="equals()方法在Object类中定义:"></a>equals()方法在Object类中定义:</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">equals</span><span class="params">(Object obj)</span> &#123;  </span><br><span class="line">    <span class="keyword">return</span> (<span class="built_in">this</span> == obj);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上边我们很明显看出是比较2个对象<strong>引用地址</strong>是否相同，但是我们平时在调用<code>String、Integer</code>等封装类型时的equals方法时是<strong>比较的内容</strong>是否一致而不是地址一致，如果是地址一致，那所有的String比较都是相等的，所以封装类型都重写了equals方法。</p><h3 id="equals-方法在String类中定义"><a href="#equals-方法在String类中定义" class="headerlink" title="equals()方法在String类中定义:"></a>equals()方法在String类中定义:</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">equals</span><span class="params">(Object anObject)</span> &#123;  </span><br><span class="line">    <span class="comment">//判断是否为同一个对象</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span> == anObject) &#123;  </span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="comment">//判断是否为String对象</span></span><br><span class="line">    <span class="keyword">if</span> (anObject <span class="keyword">instanceof</span> String) &#123;  </span><br><span class="line">        <span class="type">String</span> <span class="variable">anotherString</span> <span class="operator">=</span> (String)anObject;  </span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> value.length;  </span><br><span class="line">        <span class="comment">//判断调用String的char数组和比较String的char数组长度是否一致</span></span><br><span class="line">        <span class="keyword">if</span> (n == anotherString.count) &#123;  </span><br><span class="line">            <span class="type">char</span> v1[] = value;  </span><br><span class="line">            <span class="type">char</span> v2[] = anotherString.value;  </span><br><span class="line">            <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> offset;  </span><br><span class="line">            <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> anotherString.offset;  </span><br><span class="line">            <span class="comment">//循环判断每个字符是否一致</span></span><br><span class="line">            <span class="keyword">while</span> (n– != <span class="number">0</span>) &#123;  </span><br><span class="line">                <span class="keyword">if</span> (v1[i++] != v2[j++])  </span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;  </span><br><span class="line">            &#125;  </span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>根据以上源码可以看出封装类型的String对equals进行了重写，其他封装类型原理一样，只是根据不同的类型去判断值</p>]]></content>
      
      
      <categories>
          
          <category> Java笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于 String s = &quot;Hello&quot; 和 String s = new String(&quot;Hello&quot;)</title>
      <link href="/2023/02/16/Java%E5%A4%8D%E4%B9%A0string%E5%92%8CnewString/"/>
      <url>/2023/02/16/Java%E5%A4%8D%E4%B9%A0string%E5%92%8CnewString/</url>
      
        <content type="html"><![CDATA[<p>Java为了避免产生大量的String对象，设计了一个字符串常量池。<br>工作原理是这样的，创建一个字符串时，JVM首先为检查字符串常量池中是否有值相等的字符串，<br>如果有，则不再创建，直接返回该字符串的引用地址，<br>若没有，则创建，然后放到字符串常量池中，并返回新创建的字符串的引用地址。</p><p><a href="https://imgse.com/i/pSbekUU"><img src="https://s1.ax1x.com/2023/02/16/pSbekUU.png" alt="pSbekUU.png"></a></p><p><code>String s = new String(&quot;Hello&quot;);</code><br><strong>创建两个对象，或者创建一个对象：</strong><br>JVM首先是在字符串常量池中找”Hello”字符串，如果没有创建字符串常量，然后放到常量池中，若已存在，则不需要创建；当遇到 new 时，还会在内存（在堆里面）上创建一个新的String对象，存储”Hello”，并将内存上的String对象引用地址返回</p><p><code>String s2 = &quot;Hello&quot;</code><br><strong>创建一个对象，或者不创建对象：</strong><br>String s2 直接赋值, 在常量池里找, 有就直接赋值, 把”hello”的地址给了s2,<br>String s2指向了常量池里的”hello”;<br>反之没有则创建，然后放到字符串常量池中</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StringTest</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">String s1=<span class="string">&quot;Hello&quot;</span>;</span><br><span class="line">String s2=<span class="string">&quot;Hello&quot;</span>;</span><br><span class="line">String s3=<span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;Hello&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;s1和s2 引用地址是否相同：&quot;</span>+(s1 == s2));</span><br><span class="line">System.out.println(<span class="string">&quot;s1和s2 值是否相同：&quot;</span>+s1.equals(s2));</span><br><span class="line">System.out.println(<span class="string">&quot;s1和s3 引用地址是否相同：&quot;</span>+(s1 == s3));</span><br><span class="line">System.out.println(<span class="string">&quot;s1和s3 值是否相同：&quot;</span>+s1.equals(s3));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">s1和s2 引用地址是否相同：true</span><br><span class="line">s1和s2 值是否相同：true</span><br><span class="line">s1和s3 引用地址是否相同：false</span><br><span class="line">s1和s3 值是否相同：true</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span> <span class="params">(String[] args)</span>&#123;</span><br><span class="line">      String s1=<span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;Hello&quot;</span>);</span><br><span class="line">      String s2=<span class="string">&quot;Hello&quot;</span>;</span><br><span class="line">      String s3=<span class="string">&quot;Hello&quot;</span>;    </span><br><span class="line">      System.out.println(s1==s2);</span><br><span class="line">      System.out.println(s1.equals(s2));</span><br><span class="line"></span><br><span class="line">      System.out.println(s2==s3);</span><br><span class="line">      System.out.println(s2.equals(s3));</span><br><span class="line"> </span><br><span class="line">      String s4=s1;</span><br><span class="line">      System.out.println(s1==s4);</span><br><span class="line">      System.out.println(s1.equals(s4));</span><br><span class="line"></span><br><span class="line">      String s5=<span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;Hello&quot;</span>);</span><br><span class="line">      System.out.println(s1==s5);</span><br><span class="line">      System.out.println(s1.equals(s5));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">false</span><br><span class="line">true</span><br><span class="line">true</span><br><span class="line">true</span><br><span class="line">true</span><br><span class="line">true</span><br><span class="line">false</span><br><span class="line">true</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ACWing 3956. 截断数组</title>
      <link href="/2023/02/13/AcWing3956%E6%88%AA%E6%96%AD%E6%95%B0%E7%BB%84/"/>
      <url>/2023/02/13/AcWing3956%E6%88%AA%E6%96%AD%E6%95%B0%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">难度：中等</span><br><span class="line">时/空限制：1s / 256MB</span><br><span class="line">总通过数：4585</span><br><span class="line">总尝试数：20229</span><br><span class="line">来源：AcWing,第16场周赛</span><br><span class="line">算法标签:</span><br><span class="line">枚举 前缀和</span><br></pre></td></tr></table></figure><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>给定一个长度为 n 的数组 a1,a2,…,an。</p><p>现在，要将该数组从中间截断，得到三个非空子数组。</p><p>要求，三个子数组内各元素之和都相等。</p><p>请问，共有多少种不同的截断方法？</p><p><strong>输入格式</strong><br>第一行包含整数 n。<br>第二行包含 n 个整数 a1,a2,…,an。</p><p><strong>输出格式</strong><br>输出一个整数，表示截断方法数量。</p><p><strong>数据范围</strong><br>前六个测试点满足 $1≤n≤10$<br>所有测试点满足 $1≤n≤10^5，−10000≤a_i≤10000。$</p><p><strong>输入样例1：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">1 2 3 3</span><br></pre></td></tr></table></figure><br><strong>输出样例1：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure><br><strong>输入样例2：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">1 2 3 4 5</span><br></pre></td></tr></table></figure><br><strong>输出样例2：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0</span><br></pre></td></tr></table></figure><br><strong>输入样例3：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">0 0</span><br></pre></td></tr></table></figure><br><strong>输出样例3：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0</span><br></pre></td></tr></table></figure></p><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p>既然分为三个数组，且元素和相等</p><p>那么每个数组的元素和为原数组的<strong>1/3</strong></p><p>若除不尽或<code>n &lt; 3</code>则答案为0</p><p>sum[]为前缀和, averge=原数组总和/3<br>我们只需要寻找一个位置 <code>sum[i] == averge*2</code></p><p>此时<code>ans += count(sum[1] ~ sum[i-1] == averge)</code>即可</p><p>即第i位 满足2*averge, 只需要加上能使前i位的数组 分为 两个值为averge的位置 的数量即可(sum[]==ave)</p><p>注意 前缀和、ans、count开long long<br><code>if (sum[i] == ave*2) ans += count;</code><br><code>if (sum[i] == ave) count++;</code><br>顺序不可变 例：3-&gt; 0 0 0 </p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[<span class="number">100005</span>];</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> sum[<span class="number">100005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">        sum[i] = a[i] + sum[i - <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (sum[n] % <span class="number">3</span> || n &lt; <span class="number">3</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> ave = sum[n] / <span class="number">3</span>;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> count = <span class="number">0</span>, ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (sum[i] == ave*<span class="number">2</span>)</span><br><span class="line">            ans += count;</span><br><span class="line">        <span class="keyword">if</span> (sum[i] == ave)</span><br><span class="line">            count++;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法练习 </category>
          
          <category> ACWing </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前缀和 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于抽象类和接口</title>
      <link href="/2023/02/06/Java%E5%A4%8D%E4%B9%A0%E6%8A%BD%E8%B1%A1%E7%B1%BB%E5%92%8C%E6%8E%A5%E5%8F%A3/"/>
      <url>/2023/02/06/Java%E5%A4%8D%E4%B9%A0%E6%8A%BD%E8%B1%A1%E7%B1%BB%E5%92%8C%E6%8E%A5%E5%8F%A3/</url>
      
        <content type="html"><![CDATA[<h3 id="抽象类"><a href="#抽象类" class="headerlink" title="抽象类"></a>抽象类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">Coach</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">defend</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">attack</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在一个抽象类中，<strong>至少有一个抽象方法</strong>（通过关键字 abstract 定义的方法，<strong>并且没有方法体</strong>，如上例中的 defend() 方法和 attack() 方法），否则就没有必要称之为抽象类。需要注意的是，抽象类是<strong>不能实例化</strong>的！它<strong>需要被一个子类继承</strong>；方法的具体实现都要由抽象类的子类确定，抽象类本身并不负责。<strong>抽象类中可存在非抽象方法。</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">Coach</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">defend</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">attack</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Hesai</span> <span class="keyword">extends</span> <span class="title class_">Coach</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">defend</span><span class="params">()</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;防守&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">attack</span><span class="params">()</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;攻击&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h3><p>我们知道，有抽象方法的类被称为抽象类，也就意味着抽象类中还能有不是抽象方法的方法。这样的类就不能算作纯粹的接口，尽管它也可以提供接口的功能<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 隐式的abstract</span></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">Coach</span> &#123;</span><br><span class="line"><span class="comment">// 隐式的public</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">defend</span><span class="params">()</span>;</span><br><span class="line"><span class="keyword">void</span> <span class="title function_">attack</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>接口是隐式抽象的，所以声明时没有必要使用 <code>abstract</code> 关键字；接口的每个方法都是隐式抽象的，所以同样不需要使用 <code>abstract</code> 关键字；接口中的方法都是隐式 <code>public</code> 的。</p><p>和抽象类一样，接口也不能直接被实例化，它需要一个类来实现它</p><h3 id="对比"><a href="#对比" class="headerlink" title="对比"></a>对比</h3><ol><li><p>接口可以继承多个接口，抽象类不可以多继承类，但可以单继承类或多实现接口。</p></li><li><p>抽象方法和接口函数都不能使用static修饰。抽象方法的访问修饰符可以是public、protected和default，不能是private；接口的默认访问修饰符为public，不能使用其他修饰符。</p></li><li><p>接口的变量只能是不可变常量，默认修饰符都是public static final；但是抽象类的变量可以是普通变量</p></li><li><p>抽象类可以有构造器，接口不能有构造器。</p></li><li><p>接口实现类必须实现接口中的所有声明的方法，但抽象类的子类可以部分实现父类的抽象方法，但如果子类不能全部实现抽象方法，那么该子类只能是抽象类；</p></li><li><p>抽象类可以有非抽象方法，接口中只能有常量和抽象方法。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Java笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于 &quot;equals&quot; 和 &quot;==&quot; 和 &quot;compareTo&quot;</title>
      <link href="/2023/02/05/Java%E5%A4%8D%E4%B9%A0equas_compareTo/"/>
      <url>/2023/02/05/Java%E5%A4%8D%E4%B9%A0equas_compareTo/</url>
      
        <content type="html"><![CDATA[<ol><li><code>==</code> 是指对内存地址进行比较, 判断两个变量或实例是不是指向同一个内存空间</li><li><code>equals</code> 是对字符串的内容进行比较, 判断两个变量或实例所指向的内存空间的值是不是相同<blockquote><p>在Object类中是比较2个对象引用地址是否相同, 详情见 <a href="Java复习关于equals方法.md">关于equals()方法的新发现</a></p></blockquote></li><li><code>compareTo</code> 按字典顺序比较两个字符串，不考虑大小写。<ul><li>即参与比较的两个字符串如果首字符相同，则比较下一个字符，直到有不同的为止，返回该不同的字符的ascII码差值</li><li>如果两个字符串不一样长，可以参与比较的字符又完全一样，则返回两个字符串的长度差值</li></ul></li></ol><p><strong>“compareTo” 的一些例子：</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">str1</span> <span class="operator">=</span> <span class="string">&quot;abc&quot;</span>, str2 = <span class="string">&quot;ab&quot;</span>, str3 = <span class="string">&quot;abccc&quot;</span>, str4 = <span class="string">&quot;abe&quot;</span>;</span><br><span class="line">System.out.println(<span class="string">&quot;str1.compareTo(str2):&quot;</span> + str1.compareTo(str2)); </span><br><span class="line">System.out.println(<span class="string">&quot;str2.compareTo(str1):&quot;</span> + str2.compareTo(str1));</span><br><span class="line">System.out.println(<span class="string">&quot;str1.compareTo(str3):&quot;</span> + str1.compareTo(str3));</span><br><span class="line">System.out.println(<span class="string">&quot;str1.compareTo(str4):&quot;</span> + str1.compareTo(str4));</span><br><span class="line"></span><br><span class="line"><span class="type">Integer</span> <span class="variable">num1</span> <span class="operator">=</span> <span class="number">1</span>, num2 = <span class="number">4</span>;</span><br><span class="line">System.out.println(<span class="string">&quot;num1.compareTo(num2):&quot;</span> + num1.compareTo(num2));</span><br><span class="line">System.out.println(<span class="string">&quot;num2.compareTo(num1):&quot;</span> + num2.compareTo(num1));</span><br><span class="line"><span class="type">Character</span> <span class="variable">a</span> <span class="operator">=</span> <span class="string">&#x27;a&#x27;</span>, d = <span class="string">&#x27;d&#x27;</span>;</span><br><span class="line">System.out.println(<span class="string">&quot;a.compareTo(d):&quot;</span> + a.compareTo(d));</span><br></pre></td></tr></table></figure><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">str1.compareTo(str2): 1</span><br><span class="line">str2.compareTo(str1): -1</span><br><span class="line">str1.compareTo(str3): -2</span><br><span class="line">str1.compareTo(str4): -2</span><br><span class="line">num1.compareTo(num2): -1</span><br><span class="line">num2.compareTo(num1): 1</span><br><span class="line">a.compareTo(d): -3</span><br></pre></td></tr></table></figure></p><p>建立字符对象Character x = new Character(‘a’), 下列哪个语句返回true? (A)<br>A) x.equals(new Character(‘a’))<br>B) x.compareToIgnoreCase(‘A’)<br>C) x.equalsIgnoreCase(‘A’)<br>D) x.equals(“a”)</p><p><strong>分析下面代码:</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">Object</span> <span class="variable">o1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Object</span>();</span><br><span class="line">    <span class="type">Object</span> <span class="variable">o2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Object</span>();</span><br><span class="line">    System.out.print((o1 == o2) + <span class="string">&quot; &quot;</span> + (o1.equals(o2)));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>解析:</strong><br>这段代码是Java语言的代码，它的作用是创建了两个Java对象，分别是o1和o2，并将它们的内存地址和对象内容比较的结果输出到控制台。</p><p>具体来说，在Java语言中，”==”运算符用来比较两个对象的内存地址是否相同，也就是说，判断它们是否指向同一个对象。因此，结果 “o1 == o2” 将输出false，因为它们是两个不同的对象，所以它们的内存地址不相同。</p><p>然而，”equals”方法用于比较两个对象的内容是否相等。因为Object类的默认实现是比较内存地址，所以结果 “o1.equals(o2)” 也是false。</p><p>最终，代码的输出结果是 “false false”。</p>]]></content>
      
      
      <categories>
          
          <category> Java笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于Java中的static关键字</title>
      <link href="/2023/02/04/Java%E5%A4%8D%E4%B9%A0static/"/>
      <url>/2023/02/04/Java%E5%A4%8D%E4%B9%A0static/</url>
      
        <content type="html"><![CDATA[<hr><p>java中的<code>static</code>关键字主要用于内存管理。</p><p><strong>作用范围：</strong><br> <code>static</code>关键字属于类，而不是类的实例。</p><p><strong>修饰如下：</strong></p><ul><li>变量：称为类变量、静态变量</li><li>方法：称为类方法、静态方法</li><li>代码块：称为静态代码块</li><li>内部类：称为静态内部类</li></ul><hr><h3 id="静态变量"><a href="#静态变量" class="headerlink" title="静态变量"></a>静态变量</h3><p>类的成员变量可以分为以下两种：</p><ol><li>静态变量（或称为类变量），被 <code>static</code> 修饰的成员变量。</li><li>实例变量，没有被 <code>static</code> 修饰的成员变量。</li></ol><h4 id="区别："><a href="#区别：" class="headerlink" title="区别："></a>区别：</h4><p>(1) 静态变量</p><ul><li>运行时，Java 虚拟机只为静态变量分配一次内存，<strong>加载类过程中完成静态变量的内存分配。</strong></li><li>在类的内部，可以在任何方法内直接访问静态变量。</li><li>在其他类中，可以<strong>通过类名</strong>访问该类中的静态变量。</li></ul><p>(2) 实例变量</p><ul><li>每创建一个实例，Java 虚拟机就会为实例变量分配一次内存。</li><li>在类的内部，可以在<strong>非静态方法中直接访问实例变量</strong>。</li><li>在本类的静态方法或其他类中则需要通过类的实例对象进行访问。</li></ul><h4 id="静态变量在类中的作用如下："><a href="#静态变量在类中的作用如下：" class="headerlink" title="静态变量在类中的作用如下："></a>静态变量在类中的作用如下：</h4><p>(1) 静态变量可以被类的所有实例共享，因此静态变量可以作为实例之间的共享数据，增加<strong>实例之间的交互性</strong>。<br>(2) 如果类的所有实例都包含一个相同的常量属性，则可以把这个属性定义为静态常量类型，从而节省内存空间。例如，在类中定义一个静态常量 PI。它能使程序存储器高效(即它节省内存)。</p><h3 id="静态方法"><a href="#静态方法" class="headerlink" title="静态方法"></a>静态方法</h3><p>成员方法也可以分为以下两种：</p><ol><li>静态方法（或称为类方法），被 static 修饰的成员方法。</li><li>实例方法，没有被 static 修饰的成员方法。</li></ol><h4 id="区别：-1"><a href="#区别：-1" class="headerlink" title="区别："></a>区别：</h4><ol><li>静态方法，属于类，而不属于类的对象。<ul><li>它通过类直接被调用，无需创建类的对象。</li><li>静态方法中，不能使用 this 关键字，也不能直接访问所属类的实例变量和实例方法；</li><li>静态方法中，可以直接访问所属类的静态变量和静态方法。</li><li>同this 关键字，super 关键字也与类的实例相关，静态方法中不能使用 super 关键字。</li></ul></li><li>实例方法，可直接访问所属类的静态变量、静态方法、实例变量和实例方法。</li></ol><h4 id="静态方法与静态变量好处："><a href="#静态方法与静态变量好处：" class="headerlink" title="静态方法与静态变量好处："></a>静态方法与静态变量好处：</h4><ol><li><p>属于类级别，无需创建对象就即可直接使用，使用方便。</p></li><li><p>全局唯一，内存中唯一，静态变量可以唯一标识某些状态。</p></li><li><p>类加载时候初始化，常驻在内存，调用快捷方便。</p></li></ol><h4 id="静态方法与静态变量缺点："><a href="#静态方法与静态变量缺点：" class="headerlink" title="静态方法与静态变量缺点："></a>静态方法与静态变量缺点：</h4><ol><li><p>静态方法<strong>不能调用非静态的方法和变量</strong>。</p></li><li><p>不能使用this和super关键字。</p></li></ol><h4 id="静态方法与静态变量适用场景："><a href="#静态方法与静态变量适用场景：" class="headerlink" title="静态方法与静态变量适用场景："></a>静态方法与静态变量适用场景：</h4><ol><li><p>静态方法适合工具类中方法的定义，比如文件操作，日期处理方法等。</p></li><li><p>静态方法适合入口方法定义，比如单例模式，因从外部拿不到构造函数，所以定义一个静态的方法获取对象非常有必要。</p></li><li><p>静态变量适合全局变量的定义；举例：用一个布尔型静态成员变量做控制标志。</p></li></ol><h3 id="静态代码块"><a href="#静态代码块" class="headerlink" title="静态代码块"></a>静态代码块</h3><p>静态代码块，是 Java 类中的 <code>static&#123; &#125;</code> 修饰的代码。</p><h4 id="作用："><a href="#作用：" class="headerlink" title="作用："></a>作用：</h4><p>用于类初始化时，为类的<strong>静态变量</strong>赋初始值，提升程序性能。不能调用非静态成员</p><h4 id="静态代码块的特点："><a href="#静态代码块的特点：" class="headerlink" title="静态代码块的特点："></a>静态代码块的特点：</h4><ol><li>静态代码块，有点类似于一个方法，但不可以存在于任何方法体内。</li><li>静态代码块，可以置于类中的任何地方，类中可以有多个静态初始化块。 </li><li>Java 虚拟机在加载类时执行，将只需要进行一次初始化的操作放在 static 代码块。</li><li>类中含多个静态代码块，Java虚拟机将按它们在类中出现的顺序依次执行，且都执行一次。</li><li>静态代码块不能直接访问类的实例变量和实例方法，需通过类的对象访问。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">test</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">A</span>();</span><br><span class="line">        System.out.println(<span class="string">&quot;----------&quot;</span>);</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">A</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">A</span>&#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">6</span>;</span><br><span class="line">    A() &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;i is &quot;</span>+i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">7</span>;</span><br><span class="line">    </span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;i is &quot;</span>+i);</span><br><span class="line">        i += j;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;j is &quot;</span>+j);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>输出:</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">j is 7</span><br><span class="line">i is 6</span><br><span class="line">i is 13</span><br><span class="line">----------</span><br><span class="line">i is 6</span><br><span class="line">i is 13</span><br><span class="line"></span><br><span class="line">静态代码块：类初始化时运行一次</span><br><span class="line">普通代码块：每个对象创建是运行一次</span><br></pre></td></tr></table></figure></p><p><strong>初始化顺序：</strong></p><ol><li>父类：静态属性/静态代码块</li><li>子类：静态属性/静态代码块</li><li>父类：成员属性/普通代码块</li><li>父类：构造器</li><li>子类：成员属性/普通代码块</li><li>子类：构造器</li></ol><h3 id="静态内部类"><a href="#静态内部类" class="headerlink" title="静态内部类"></a>静态内部类</h3><ol><li><p>静态内部类，跟静态方法一样，<strong>只能访问静态成员变量和方法</strong>，不能访问非静态方法和属性。</p></li><li><p>静态内部类，可以声明普通成员变量和方法，而普通内部类不能声明static成员变量和方法。</p></li><li><p>普通内部类，可以访问任意外部类的成员变量和方法，相当于外部类的成员。</p></li><li><p>静态内部类，可以单独初始化。</p><ul><li>静态内部类的初始化：<code>Inner i = new Outer.Inner();</code></li><li>普通内部类的初始化：<code>Inner i = new Outer().new Inner();</code></li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> Java笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ACWing寒假 4455.出行计划</title>
      <link href="/2023/01/20/%5BACWing%E5%AF%92%E5%81%8712%5D%E5%87%BA%E8%A1%8C%E8%AE%A1%E5%88%92/"/>
      <url>/2023/01/20/%5BACWing%E5%AF%92%E5%81%8712%5D%E5%87%BA%E8%A1%8C%E8%AE%A1%E5%88%92/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">难度：简单</span><br><span class="line">时/空限制：1.5s / 64MB</span><br><span class="line">总通过数：3041</span><br><span class="line">总尝试数：8079</span><br><span class="line">来源：第25次CCF计算机软件能力认证</span><br><span class="line">算法标签</span><br><span class="line">差分</span><br></pre></td></tr></table></figure><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>最近西西艾弗岛上出入各个场所都要持有一定时限内的核酸检测阴性证明。</p><p>具体来时，如果在 <code>t</code> 时刻做了核酸检测，则经过一段时间后可以得到核酸检测阴性证明。</p><p>这里我们假定等待核酸检测结果需要 <code>k</code> 个单位时间，即在 <code>t+k</code> 时刻可以获得结果。</p><p>如果一个场所要求持 <code>24</code> 个单位时间内核酸检测结果入内，那么凭上述的核酸检测结果，可以在第 <code>t+k</code> 时刻到第 <code>t+k+23</code> 时刻进入该场所。</p><p>小C按时间顺序列出接下来的 n 项出行计划，其中第 i 项$（1≤i≤n）$可以概括为：$t_i$ 时刻进入某场所，该场所需持有 $c_i$ 个单位时间内的核酸检测结果入内，其中 $0&lt;c_i≤2×10^5$。</p><p>为了合理安排核酸检测时间，试根据小C的出行计划，回答如下查询：</p><p>如果在 q 时刻做了核酸检测，有多少项出行计划的核酸检测要求可以得到满足？<br>这样的查询共有 m 个，分别为 q1,q2,⋯,qm ；查询之间互不影响。</p><p><strong>输入格式</strong><br>输入的第一行包含空格分隔的三个正整数 <code>n、m 和 k</code>，分别表示出行计划数目、查询个数以及等待核酸检测结果所需时间。</p><p>接下来输入 <code>n</code> 行，其中每行包含用空格分隔的两个正整数 $t_i<br>、c_i$，表示一项出行计划；出行计划按时间顺序给出，满足$0&lt;t_1≤t_2≤⋯≤t_n≤2×10^5$。</p><p>最后输入 <code>m</code> 行，每行仅包含一个正整数 $q_i$<br>，表示一个查询。<code>m</code> 个查询亦按照时间顺序给出，满足 $0&lt;q_1&lt;q_2&lt;⋯&lt;q_m≤2×10^5$。</p><p><strong>输出格式</strong><br>输出共 m 行，每行一个整数，表示对应查询的答案。</p><p><strong>数据范围</strong><br>$40\%$ 的测试数据满足 $0&lt;n,k≤1000<br>、m=1$；<br>$70\%$ 的测试数据满足 $0&lt;n,m,k≤1000$；<br>全部的测试数据满足 $0&lt;n,m,k≤10^5$。</p><p><strong>输入样例：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">6 2 10</span><br><span class="line">5 24</span><br><span class="line">10 24</span><br><span class="line">11 24</span><br><span class="line">34 24</span><br><span class="line">35 24</span><br><span class="line">35 48</span><br><span class="line">1</span><br><span class="line">2</span><br></pre></td></tr></table></figure><br><strong>输出样例：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">3</span><br></pre></td></tr></table></figure><br><strong>样例解释</strong><br>时刻 1<br> 做检测，可以满足第三、四、六项出行计划；</p><p>时刻 2<br> 做检测，可以满足第四、五、六项出行计划。</p><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p>根据数据范围猜测时间复杂度应控制在<code>O(nlogn)</code>内，因此每次询问的时间复杂度应控制在<code>O(logn)</code>内, 故每次询问先计算核酸有效期再枚举计算可行计划数的方式是不可行的。</p><p><strong>差分算法：</strong><br>q：核酸检测的时刻<br>k：检测完核酸等待结果的时间<br>t：进入到出行场所的时刻<br>c：出行场所的核酸检查要求</p><p>根据题目可知 对于每个出行地点都有，可得 <code>q+k &lt;= t &lt;= q+k+c-1</code>, 故 <code>t-k-c+1 &lt;= q &lt;= t-k</code>，<strong>即t时刻成功进入该场合的核酸检测时刻范围。</strong><br>通过差分数组记录该范围，下标表示时刻，值表示所有出行安排的核酸检测时刻范围涉及到该时刻的次数，该次数即是当前时刻做核酸能够满足的出行计划个数。</p><p>注意：处理差分数组时，下标 l、r 的值可能小于1，不符合实际意义，也会造成数组越界，故需要特殊处理。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">200005</span>;</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//出行计划数目、查询个数以及等待核酸检测结果所需时间</span></span><br><span class="line">    <span class="type">int</span> n, m, k;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m &gt;&gt; k;</span><br><span class="line">    <span class="keyword">while</span> (n--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//出行时间、核酸要求</span></span><br><span class="line">        <span class="type">int</span> t, c;</span><br><span class="line">        cin &gt;&gt; t &gt;&gt; c;</span><br><span class="line">        <span class="comment">//处理差分数组</span></span><br><span class="line">        <span class="type">int</span> l = t - k - c + <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> r = t - k;</span><br><span class="line">        <span class="keyword">if</span>(r &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            a[<span class="built_in">max</span>(l, <span class="number">1</span>)]++;<span class="comment">//l可能为负数</span></span><br><span class="line">            a[r + <span class="number">1</span>]--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//还原差分数组</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; N; i++)</span><br><span class="line">        a[i] += a[i - <span class="number">1</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> (m--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> q;</span><br><span class="line">        cin &gt;&gt; q;</span><br><span class="line">        cout &lt;&lt; a[q] &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法练习 </category>
          
          <category> ACWing </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 差分 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>L1-046 整除光棍</title>
      <link href="/2023/01/18/%5Bpta%E5%A4%A9%E6%A2%AF%E8%B5%9B04%5D/"/>
      <url>/2023/01/18/%5Bpta%E5%A4%A9%E6%A2%AF%E8%B5%9B04%5D/</url>
      
        <content type="html"><![CDATA[<h2 id="L1-046-整除光棍"><a href="#L1-046-整除光棍" class="headerlink" title="L1-046 整除光棍"></a>L1-046 整除光棍</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>这里所谓的“光棍”，并不是指单身汪啦~ 说的是全部由1组成的数字，比如1、11、111、1111等。传说任何一个光棍都能被一个不以5结尾的奇数整除。比如，111111就可以被13整除。 现在，你的程序要读入一个整数x，这个整数一定是奇数并且不以5结尾。然后，经过计算，输出两个数字：第一个数字s，表示x乘以s是一个光棍，第二个数字n是这个光棍的位数。这样的解当然不是唯一的,题目要求你输出最小的解。</p><p>提示：一个显然的办法是逐渐增加光棍的位数，直到可以整除x为止。但难点在于，s可能是个非常大的数 —— 比如，程序输入31，那么就输出3584229390681和15，因为31乘以3584229390681的结果是111111111111111，一共15个1。</p><p><strong>输入格式：</strong><br>输入在一行中给出一个不以5结尾的正奇数x（&lt;1000）。</p><p><strong>输出格式：</strong><br>在一行中输出相应的最小的s和n，其间以1个空格分隔。</p><p><strong>输入样例：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">31</span><br></pre></td></tr></table></figure><br><strong>输出样例：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3584229390681 15</span><br></pre></td></tr></table></figure></p><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p><strong>思路:</strong> 模拟除法过程<br><img src="https://s1.ax1x.com/2023/01/18/pS3HOo9.png" alt=""></p><ul><li>先找到恰好大于除数的被除数(全是1)</li><li>模拟除法过程，如果除尽则结束，没有除尽则余数*10+1继续进行除法，即除数的位数加1了<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">//模拟除法</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;<span class="comment">//除数</span></span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="type">int</span> s = <span class="number">1</span>;<span class="comment">//被除数(全为1)</span></span><br><span class="line">    <span class="type">int</span> num = <span class="number">1</span>;<span class="comment">//被除数位数</span></span><br><span class="line">    <span class="keyword">while</span>(s &lt; n)<span class="comment">//使得被除数大于除数</span></span><br><span class="line">    &#123;</span><br><span class="line">        s = s * <span class="number">10</span> + <span class="number">1</span>;</span><br><span class="line">        num++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;s/n;<span class="comment">//一位一位输出</span></span><br><span class="line">        s = s % n;<span class="comment">//余数</span></span><br><span class="line">        <span class="keyword">if</span>(s == <span class="number">0</span>)<span class="comment">//余数为0，结束</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            s = s * <span class="number">10</span> + <span class="number">1</span>;<span class="comment">//下一位</span></span><br><span class="line">            num++;<span class="comment">//位数+1</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;num;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 算法练习 </category>
          
          <category> GPLT 一阶题目集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 模拟 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>线代复习</title>
      <link href="/2023/01/18/%E7%BA%BF%E4%BB%A3%E5%A4%8D%E4%B9%A0/"/>
      <url>/2023/01/18/%E7%BA%BF%E4%BB%A3%E5%A4%8D%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<blockquote><p><a href="https://www.bilibili.com/video/BV1Ey4y147xn/?p=4&amp;share_source=copy_web&amp;vd_source=d0b85d17f6467b209d9afa78d62d4c2b">线性代数复习 - bilibili</a> </p><p><a href="https://www.bilibili.com/read/cv19188344?spm_id_from=333.999.0.0">视频笔记 - bilibili</a></p></blockquote><p><strong>对ChatGPT的提问：</strong></p><p>线性代数是数学中的一个分支，研究线性方程组、向量空间、线性变换、行列式等内容。以下列举一些线性代数中常见的性质及推论：</p><p>向量空间中，若向量组 $v_1, v_2, \cdots, v_n$ 线性相关，则必然存在某个向量可以表示为其他向量的线性组合。</p><p>若向量组 $v_1, v_2, \cdots, v_n$ 线性无关，则任何一个向量 $w$ 都可以唯一地表示为这些向量的线性组合。</p><p>若矩阵 $A$ 的秩为 $r$，则 $A$ 的行向量组和列向量组的秩都为 $r$。</p><p>若 $A$ 是一个 $n \times n$ 的方阵，且 $A$ 的行列式不为零，则 $A$ 可逆，即存在一个矩阵 $B$，使得 $AB=BA=I$，其中 $I$ 为单位矩阵。</p><p>若 $A$ 是一个 $n \times n$ 的方阵，且 $A$ 可逆，则 $A$ 的列向量组是线性无关的。</p><p>若 $A$ 是一个 $n \times m$ 的矩阵，且 $A$ 的秩为 $r$，则 $A$ 可以表示为两个矩阵的乘积 $A=BC$，其中 $B$ 是一个 $n \times r$ 的矩阵，$C$ 是一个 $r \times m$ 的矩阵。</p><p>若 $A$ 是一个 $n \times n$ 的方阵，$B$ 是一个 $n \times m$ 的矩阵，且 $AB=0$，则 $A$ 的行向量组与 $B$ 的列向量组是线性相关的。</p><p>若 $A$ 是一个 $n \times n$ 的对称矩阵，则 $A$ 可对角化，即存在一个对角矩阵 $D$ 和一个正交矩阵 $P$，使得 $A=PDP^{-1}$。其中 $D$ 的对角线元素为 $A$ 的特征值，$P$ 的列向量为 $A$ 的特征向量。</p><hr><p>什么是行向量组什么是列向量组:</p><p>行向量组和列向量组都是向量组的一种形式。</p><p>一个向量组是由若干个向量组成的集合。行向量组是指把向量排成一行形成的向量组，而列向量组是指把向量排成一列形成的向量组。</p><p>举个例子，设有三个向量 v1, v2, v3，如果我们按行把它们排成一个矩阵，那么就得到了一个行向量组。如果按列把它们排成一个矩阵，那么就得到了一个列向量组。</p><p>行向量组和列向量组在线性代数中非常常见，它们可以用来表示矩阵、向量空间等概念，也是线性代数中一些基本性质和定理的表述方式。</p><hr><p>矩阵的伴随矩阵（adjugate matrix）是矩阵的一种重要性质，用符号 $adj(A)$ 表示。如果 $A$ 是 $n$ 阶方阵，那么 $adj(A)$ 也是 $n$ 阶方阵。</p><p>伴随矩阵有以下一些性质：</p><p>$A \cdot adj(A) = adj(A) \cdot A = det(A) \cdot I$，其中 $det(A)$ 是矩阵 $A$ 的行列式，$I$ 是单位矩阵。</p><p>如果矩阵 $A$ 是可逆矩阵，那么 $adj(A) = det(A) \cdot A^{-1}$。</p><p>如果矩阵 $A$ 的行列式 $det(A) \neq 0$，那么 $A$ 是可逆矩阵当且仅当 $adj(A)$ 是可逆矩阵，且 $A^{-1} = \frac{1}{det(A)} \cdot adj(A)$。</p><p>如果 $A$ 是实矩阵，那么 $adj(A^T) = adj(A)^T$，其中 $A^T$ 是 $A$ 的转置矩阵。</p><p>如果 $A$ 是正交矩阵，那么 $adj(A) = A^T$。</p><p>这些性质对于解线性方程组、求逆矩阵等问题都有重要的应用。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>L1-039 古风排版 L1-043 阅览室</title>
      <link href="/2023/01/17/%5Bpta%E5%A4%A9%E6%A2%AF%E8%B5%9B03%5D/"/>
      <url>/2023/01/17/%5Bpta%E5%A4%A9%E6%A2%AF%E8%B5%9B03%5D/</url>
      
        <content type="html"><![CDATA[<h2 id="L1-039-古风排版"><a href="#L1-039-古风排版" class="headerlink" title="L1-039 古风排版"></a>L1-039 古风排版</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>中国的古人写文字，是从右向左竖向排版的。本题就请你编写程序，把一段文字按古风排版。</p><p><strong>输入格式：</strong><br>输入在第一行给出一个正整数N（&lt;100），是每一列的字符数。第二行给出一个长度不超过1000的非空字符串，以回车结束。</p><p><strong>输出格式：</strong><br>按古风格式排版给定的字符串，每列N个字符（除了最后一列可能不足N个）。</p><p><strong>输入样例：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">This is a test case</span><br></pre></td></tr></table></figure><br><strong>输出样例：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">asa T</span><br><span class="line">st ih</span><br><span class="line">e tsi</span><br><span class="line"> ce s</span><br></pre></td></tr></table></figure></p><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p>找数学关系：<strong>将字符串通过添加一定数量的空格使其长度为n的倍数</strong>，按行输出，第 $i$ 行第一个字符一定为字符串的倒数第$(n-i)$个字符，即下标为<code>s.length()-1 -(n-i)</code>,每一行输出第一个字符后，下一个输出字符的下标是上一个输出字符的下标减 $n$ <strong>同一行的字符下标一定同余于n</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    string s;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="built_in">getchar</span>();</span><br><span class="line">    <span class="built_in">getline</span>(cin, s);</span><br><span class="line">    <span class="type">int</span> t = s.<span class="built_in">length</span>()%n;</span><br><span class="line">    <span class="keyword">if</span>(t)&#123;</span><br><span class="line">        <span class="type">int</span> space = n - t;</span><br><span class="line">        <span class="keyword">while</span>(space--)</span><br><span class="line">            s += <span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i =<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j =s.<span class="built_in">length</span>()+i<span class="number">-1</span>-n; j&gt;=<span class="number">0</span>; j-=n)</span><br><span class="line">            cout&lt;&lt;s[j];</span><br><span class="line">        cout&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="L1-043-阅览室"><a href="#L1-043-阅览室" class="headerlink" title="L1-043 阅览室"></a>L1-043 阅览室</h2><h3 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h3><p>天梯图书阅览室请你编写一个简单的图书借阅统计程序。当读者借书时，管理员输入书号并按下S键，程序开始计时；当读者还书时，管理员输入书号并按下E键，程序结束计时。书号为不超过1000的正整数。当管理员将0作为书号输入时，表示一天工作结束，你的程序应输出当天的读者借书次数和平均阅读时间。</p><p>注意：由于线路偶尔会有故障，可能出现不完整的纪录，即只有S没有E，或者只有E没有S的纪录，系统应能自动忽略这种无效纪录。另外，题目保证书号是书的唯一标识，同一本书在任何时间区间内只可能被一位读者借阅。</p><p><strong>输入格式：</strong><br>输入在第一行给出一个正整数 $N（N≤10）$，随后给出 $N$ 天的纪录。每天的纪录由若干次借阅操作组成，每次操作占一行，格式为：</p><p>书号（$[1, 1000]$ 内的整数） 键值（$S$或$E$） 发生时间（hh:mm，其中hh是$[0,23]$内的整数，mm是$[0, 59]$内整数）</p><p>每一天的纪录保证按时间递增的顺序给出。</p><p><strong>输出格式：</strong><br>对每天的纪录，在一行中输出当天的读者借书次数和平均阅读时间（以分钟为单位的精确到个位的整数时间）。</p><p><strong>输入样例：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">1 S 08:10</span><br><span class="line">2 S 08:35</span><br><span class="line">1 E 10:00</span><br><span class="line">2 E 13:16</span><br><span class="line">0 S 17:00</span><br><span class="line">0 S 17:00</span><br><span class="line">3 E 08:10</span><br><span class="line">1 S 08:20</span><br><span class="line">2 S 09:00</span><br><span class="line">1 E 09:20</span><br><span class="line">0 E 17:00</span><br></pre></td></tr></table></figure><br><strong>输出样例：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">2 196</span><br><span class="line">0 0</span><br><span class="line">1 60</span><br></pre></td></tr></table></figure></p><h3 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h3><p>注意：</p><ul><li>求平均阅读时间时要四舍五入，<code>ave = (int)(ave*1.0 / times + 0.5)</code></li><li>times作为被除数不能为0，即需要特判</li><li>当操作符为‘E’，且<code>borrow[index]</code>为1时才表示一次有效借还</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> book[<span class="number">1005</span>];</span><br><span class="line"><span class="type">int</span> borrow[<span class="number">1005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="type">int</span> times = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> ave = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">char</span> opr, c;</span><br><span class="line">        <span class="type">int</span> id, hour, min;</span><br><span class="line">        cin &gt;&gt; id &gt;&gt; opr &gt;&gt; hour &gt;&gt; c &gt;&gt; min;</span><br><span class="line">        <span class="keyword">if</span> (id == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (times &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                ave = (<span class="type">int</span>)(ave*<span class="number">1.0</span> / times + <span class="number">0.5</span>);   </span><br><span class="line">            &#125;</span><br><span class="line">            cout &lt;&lt; times &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; ave &lt;&lt; endl;</span><br><span class="line">            times = <span class="number">0</span>;</span><br><span class="line">            ave = <span class="number">0</span>;</span><br><span class="line">            n--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (opr == <span class="string">&#x27;S&#x27;</span>)&#123;</span><br><span class="line">                borrow[id] = <span class="number">1</span>;</span><br><span class="line">                book[id] = hour * <span class="number">60</span> + min;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (opr == <span class="string">&#x27;E&#x27;</span> &amp;&amp; borrow[id]) &#123;</span><br><span class="line">                times++;</span><br><span class="line">                ave += (hour * <span class="number">60</span> + min) - book[id];</span><br><span class="line">                borrow[id] = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法练习 </category>
          
          <category> GPLT 一阶题目集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 模拟 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>L1-025 正整数A+B L1-027 出租</title>
      <link href="/2023/01/14/%5Bpta%E5%A4%A9%E6%A2%AF%E8%B5%9B02%5D/"/>
      <url>/2023/01/14/%5Bpta%E5%A4%A9%E6%A2%AF%E8%B5%9B02%5D/</url>
      
        <content type="html"><![CDATA[<h2 id="L1-025-正整数A-B"><a href="#L1-025-正整数A-B" class="headerlink" title="L1-025 正整数A+B"></a>L1-025 正整数A+B</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>题的目标很简单，就是求两个正整数A和B的和，其中A和B都在区间<code>[1,1000]</code>。稍微有点麻烦的是，输入并不保证是两个正整数。</p><p><strong>输入格式：</strong><br>输入在一行给出A和B，其间以空格分开。问题是A和B不一定是满足要求的正整数，有时候可能是<strong>超出范围的数字、负数、带小数点的实数、甚至是一堆乱码</strong>。</p><p>注意：我们把输入中出现的第1个空格认为是A和B的分隔。题目保证至少存在一个空格，并且B不是一个空字符串。</p><p><strong>输出格式：</strong><br>如果输入的确是两个正整数，则按格式A + B = 和输出。如果某个输入不合要求，则在相应位置输出?，显然此时和也是?。</p><p><strong>输入样例1：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">123 456</span><br></pre></td></tr></table></figure><br><strong>输出样例1：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">123 + 456 = 579</span><br></pre></td></tr></table></figure><br><strong>输入样例2：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">22. 18</span><br></pre></td></tr></table></figure><br><strong>输出样例2：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">? + 18 = ?</span><br></pre></td></tr></table></figure><br><strong>输入样例3：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-100 blabla bla...33</span><br></pre></td></tr></table></figure><br><strong>输出样例3：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">? + ? = ?</span><br></pre></td></tr></table></figure></p><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p>思路getline读取一行，将空格前的子串赋值给a字符串，将空格后的子串赋值给b字符串<br>条件判断：</p><ul><li>超出<code>[1,1000]</code>范围的数字: 先判断<code>length() &gt; 4</code>，若为true继续判断<code>stoi(s)</code>是否在范围内；stox(string)方法：stoi\stof\stol\stoll…</li><li>负数、带小数点的实数、甚至是一堆乱码：遍历字符串，根据ASCII码范围判断。</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">isZ</span><span class="params">(string s)</span></span>&#123;</span><br><span class="line">    <span class="comment">//超出[1, 1000]范围</span></span><br><span class="line">    <span class="keyword">if</span>(s.<span class="built_in">length</span>() &gt; <span class="number">4</span>) </span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">stoi</span>(s) &gt; <span class="number">1000</span> || <span class="built_in">stoi</span>(s) &lt; <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="comment">//判断是否为正整数</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; s.<span class="built_in">length</span>(); i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!(s[i] &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; s[i] &lt;= <span class="string">&#x27;9&#x27;</span>))</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    string s;</span><br><span class="line">    <span class="built_in">getline</span>(cin, s);</span><br><span class="line">    string a = <span class="string">&quot;&quot;</span>, b = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="type">bool</span> spaceFlag = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; s.<span class="built_in">length</span>(); i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(s[i] == <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">            spaceFlag = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(!spaceFlag)</span><br><span class="line">                a += s[i];</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                b += s[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">isZ</span>(a) &amp;&amp; <span class="built_in">isZ</span>(b))&#123;</span><br><span class="line">        <span class="type">int</span> A = <span class="built_in">stoi</span>(a);</span><br><span class="line">        <span class="type">int</span> B = <span class="built_in">stoi</span>(b);</span><br><span class="line">        cout &lt;&lt; a &lt;&lt; <span class="string">&quot; + &quot;</span> &lt;&lt; b &lt;&lt; <span class="string">&quot; = &quot;</span> &lt;&lt; A + B;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">isZ</span>(a))</span><br><span class="line">            cout &lt;&lt; a &lt;&lt; <span class="string">&quot; + &quot;</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;? + &quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">isZ</span>(b))</span><br><span class="line">            cout &lt;&lt; b &lt;&lt;<span class="string">&quot; = ?&quot;</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;? = ?&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="L1-027-出租"><a href="#L1-027-出租" class="headerlink" title="L1-027 出租"></a>L1-027 出租</h2><h3 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h3><p>下面是新浪微博上曾经很火的一张图：<br><img src="https://images.ptausercontent.com/187" alt=""></p><p>一时间网上一片求救声，急问这个怎么破。其实这段代码很简单，index数组就是arr数组的下标，<code>index[0]=2</code> 对应 <code>arr[2]=1</code>，<code>index[1]=0</code> 对应 <code>arr[0]=8</code>，<code>index[2]=3</code> 对应 <code>arr[3]=0</code>，以此类推…… 很容易得到电话号码是<code>18013820100</code>。</p><p>本题要求你编写一个程序，为任何一个电话号码生成这段代码 —— 事实上，只要生成最前面两行就可以了，后面内容是不变的。</p><p><strong>输入格式：</strong><br>输入在一行中给出一个由11位数字组成的手机号码。</p><p><strong>输出格式：</strong><br>为输入的号码生成代码的前两行，其中arr中的数字必须按递减顺序给出。</p><p><strong>输入样例：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">18013820100</span><br></pre></td></tr></table></figure><br><strong>输出样例：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">int[] arr = new int[]&#123;8,3,2,1,0&#125;;</span><br><span class="line">int[] index = new int[]&#123;3,0,4,3,1,0,2,4,3,4,4&#125;;</span><br></pre></td></tr></table></figure></p><h3 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> ct[<span class="number">10</span>];</span><br><span class="line"><span class="type">int</span> arr[<span class="number">10</span>];</span><br><span class="line"><span class="type">int</span> index[<span class="number">11</span>];</span><br><span class="line"><span class="type">int</span> p;<span class="comment">//arr下标</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x &gt; y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    string number;</span><br><span class="line">    cin &gt;&gt; number;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> c : number) &#123;</span><br><span class="line">        ct[c - <span class="string">&#x27;0&#x27;</span>]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ct[i] &gt; <span class="number">0</span>)</span><br><span class="line">            arr[p++] = i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(arr, arr + p, cmp);</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> c : number) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; p; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (arr[j] == c - <span class="string">&#x27;0&#x27;</span>) &#123;</span><br><span class="line">                index[i] = j;</span><br><span class="line">                i++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;int[] arr = new int[]&#123;&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; p; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(i == p<span class="number">-1</span>)&#123;</span><br><span class="line">            cout &lt;&lt; arr[i] &lt;&lt;<span class="string">&quot;&#125;;&quot;</span>&lt;&lt;endl;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">             cout &lt;&lt; arr[i] &lt;&lt;<span class="string">&quot;,&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">       </span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;int[] index = new int[]&#123;&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">11</span>; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(i == <span class="number">10</span>)&#123;</span><br><span class="line">            cout &lt;&lt; index[i] &lt;&lt;<span class="string">&quot;&#125;;&quot;</span>&lt;&lt;endl;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">             cout &lt;&lt; index[i] &lt;&lt;<span class="string">&quot;,&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法练习 </category>
          
          <category> GPLT 一阶题目集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 模拟 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ACWing寒假 4699.如此编码</title>
      <link href="/2023/01/12/%5BACWing%E5%AF%92%E5%81%8711%5D%E5%A6%82%E6%AD%A4%E7%BC%96%E7%A0%81/"/>
      <url>/2023/01/12/%5BACWing%E5%AF%92%E5%81%8711%5D%E5%A6%82%E6%AD%A4%E7%BC%96%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">难度：简单</span><br><span class="line">时/空限制：1s / 64MB</span><br><span class="line">来源：第27次CCF计算机软件能力认证</span><br><span class="line">算法标签</span><br><span class="line">进位制</span><br></pre></td></tr></table></figure><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>某次测验后，顿顿老师在黑板上留下了一串数字 23333 便飘然而去。</p><p>凝望着这个神秘数字，小 P 同学不禁陷入了沉思……</p><p>已知某次测验包含 n 道单项选择题，其中第 i 题$（1≤i≤n<br>）$ 有 $a_i$ 个选项，正确选项为 $b_i$ ，满足 $a_i≥2$ 且 $0≤b_i&lt;a_i$ 。</p><p>比如说，$a_i=4$ 表示第 $i$ 题有 $4$ 个选项，此时正确选项 $b_i$的取值一定是 0、1、2、3 其中之一。</p><p>顿顿老师设计了如下方式对正确答案进行编码，使得仅用一个整数 m 便可表示 b1,b2,⋯,bn.</p><p>首先定义一个辅助数组 $c_i$，表示数组 $a_i$ 的前缀乘积。</p><p>当 $1≤i≤n$ 时，满足：</p><p>$c_i=a_1×a_2×⋯×a_i$<br>特别地，定义 $c_0=1$。</p><p>于是 m 便可按照如下公式算出：</p><script type="math/tex; mode=display">m=\sum_{i=1}^n c_{i-1} * b_i=c_0×b_1+c_1×b_2+⋯+c_{n−1}×b_n</script><p>易知，$0≤m&lt;c_n$，最小值和最大值分别当 $b_i$ 全部为 0 和 $b_i=a_i−1$时取得。</p><p>试帮助小 P 同学，把测验的正确答案 b1,b2,⋯,bn 从顿顿老师留下的神秘整数 m 中恢复出来。</p><p><strong>输入格式</strong><br>输入共两行。</p><p>第一行包含用空格分隔的两个整数 n 和 m，分别表示题目数量和顿顿老师的神秘数字。</p><p>第二行包含用空格分隔的 n 个整数 a1,a2,⋯,an ，依次表示每道选择题的选项数目。</p><p><strong>输出格式</strong><br>输出仅一行，包含用空格分隔的 n个整数 b1,b2,⋯,bn ，依次表示每道选择题的正确选项。</p><p><strong>数据范围</strong><br>50% 的测试数据满足：$a_i$全部等于 2，即每道题均只有两个选项，此时 $c_i=2i$；<br>全部的测试数据满足：$1≤n≤20，a_i≥2 且 c_n≤10^9$<br>（根据题目描述中的定义 $c_n$ 表示全部 $a_i$ 的乘积）。</p><p><strong>输入样例1：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">15 32767</span><br><span class="line">2 2 2 2 2 2 2 2 2 2 2 2 2 2 2</span><br></pre></td></tr></table></figure><br><strong>输出样例1：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 1 1 1 1 1 1 1 1 1 1 1 1 1 1</span><br></pre></td></tr></table></figure><br><strong>输入样例2：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4 0</span><br><span class="line">2 3 2 5</span><br></pre></td></tr></table></figure><br><strong>输出样例2：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0 0 0 0</span><br></pre></td></tr></table></figure><br><strong>输入样例3：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">7 23333</span><br><span class="line">3 5 20 10 4 3 10</span><br></pre></td></tr></table></figure><br><strong>输出样例3：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2 2 15 7 3 1 0</span><br></pre></td></tr></table></figure><br>样例3解释<br><img src="https://cdn.acwing.com/media/article/image/2022/09/30/19_7ff1f53c40-QQ%E6%88%AA%E5%9B%BE20220930112511.png" alt=""></p><p><strong>提示</strong><br>对任意的 $1≤j≤n$，因为 $c<em>{j+1},c</em>{j+2},⋯$均为 $c_j$ 的倍数，所以 $m$ 除以 $c_j$ 的余数具有如下性质：</p><script type="math/tex; mode=display">m\%c_j = \sum_{i=1}^jc_{i−1}×b_i</script><p>其中 $\%$ 表示取余运算。</p><p>令 $j$ 取不同的值，则有如下等式：</p><script type="math/tex; mode=display">m\% c_1 = c_0×b_1</script><script type="math/tex; mode=display">m\% c_2 = c_0×b_1+c_1×b_2</script><script type="math/tex; mode=display">m\% c_3 = c_0×b_1+c_1×b_2+c_2×b_3</script><script type="math/tex; mode=display">⋯</script><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p><strong>理解题意 根据提示内容模拟解题过程</strong><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> a[<span class="number">22</span>]; <span class="comment">//选修数量</span></span><br><span class="line"><span class="type">int</span> b[<span class="number">22</span>]; <span class="comment">//答案</span></span><br><span class="line"><span class="type">int</span> c[<span class="number">22</span>] = &#123;<span class="number">1</span>&#125;; <span class="comment">//a的前缀乘积</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="type">int</span> m;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        c[i] = c[i - <span class="number">1</span>] * a[i];</span><br><span class="line">        <span class="keyword">if</span> (i == <span class="number">1</span>)</span><br><span class="line">            b[i] = (m % c[i]) / c[i - <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            b[i] = (m % c[i] - m % c[i - <span class="number">1</span>]) / c[i - <span class="number">1</span>]; </span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cout &lt;&lt; b[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 算法练习 </category>
          
          <category> ACWing </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 模拟 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ACWing寒假 4454.未初始化警告 4509.归一化处理</title>
      <link href="/2023/01/11/%5BACWing%E5%AF%92%E5%81%8710%5D%E6%9C%AA%E5%88%9D%E5%A7%8B%E5%8C%96%E5%92%8C%E5%BD%92%E4%B8%80%E5%8C%96/"/>
      <url>/2023/01/11/%5BACWing%E5%AF%92%E5%81%8710%5D%E6%9C%AA%E5%88%9D%E5%A7%8B%E5%8C%96%E5%92%8C%E5%BD%92%E4%B8%80%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<p><strong>这两题主要是理解题意</strong></p><h2 id="4454-未初始化警告"><a href="#4454-未初始化警告" class="headerlink" title="4454. 未初始化警告"></a>4454. 未初始化警告</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">难度：简单</span><br><span class="line">时/空限制：1s / 64MB</span><br><span class="line">来源：第25次CCF计算机软件能力认证</span><br><span class="line">算法标签</span><br><span class="line">模拟</span><br></pre></td></tr></table></figure><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>一个未经初始化的变量，里面存储的值可能是任意的。</p><p>因此直接使用未初始化的变量，比如将其赋值给另一个变量，并不符合一般的编程逻辑。</p><p>代码中出现这种情况，往往是因为遗漏了初始化语句、或是打错了变量名。</p><p>对代码中使用了未初始化变量的语句进行检查，可以方便地排查出代码中的一些隐秘 Bug。</p><p>考虑一段包含 $k$ 条赋值语句的简单代码。</p><p>该段代码最多使用到 $n$ 个变量，分别记作 <code>a1,a2,⋯,an</code>；该段代码使用的常量均记作 <code>a0</code>。</p><p>第 $i$ 条$（1≤i≤k）$赋值语句为 $a<em>{x_i}=a</em>{y<em>i}$，满足 $1≤x_i≤n、0≤y_i≤n$，表示将 $a</em>{y<em>i}$ 的值赋给变量 $a</em>{x_i}$。</p><p>其中 $a<em>{x_i}$ 被称为该赋值语句的左值，一定是个变量；$a</em>{y_i}$ 被称为右值，可以是一个常量或变量。</p><p>对于任意一条赋值语句 $a<em>{x_i}=a</em>{y<em>i}$，如果右值 $a</em>{y_i}$ 是一个变量，则其应该在此之前被初始化过。</p><p>具体来说，如果变量 $a<em>{y_i}$ 在前 $i−1$ 条赋值语句中做为左值出现过，即存在 $j&lt;i$ 满足 $x_j=y_i$（这里无需考虑第 $j$ 条赋值语句本身是否也有右值未初始化的问题），我们就认为在第 $i$ 条赋值语句中 $a</em>{y_i}$ 已被初始化；否则，我们认为该条语句存在右值未初始化的问题。</p><p>按照上述规则，试统计给定的代码中，有多少条赋值语句右值未被初始化。</p><p><strong>输入格式</strong><br>输入的第一行包含空格分隔的两个正整数 $n、k$，分别表示变量的数量和赋值语句的条数。</p><p>接下来输入 $k$ 行，其中第 $i$ 行$（1≤i≤k）$包含空格分隔的两个正整数 $x_i、y_i$，表示第 $i$ 条赋值语句。</p><p>纠错：其实 $y_i$ 可以等于 $0$，所以 $y_i$ 不一定是正整数（可参考样例），此为官网题面描述存在问题，特此指出。</p><p><strong>输出格式</strong><br>输出一个整数，表示有右值未被初始化问题的赋值语句条数。</p><p><strong>数据范围</strong><br>$50$% 的测试数据满足 $0&lt;n,k≤1000$；<br>全部的测试数据满足 $0&lt;n,k≤10^5，1≤x_i≤n，0≤y_i≤n$。</p><p><strong>输入样例：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">10 7</span><br><span class="line">1 2</span><br><span class="line">3 3</span><br><span class="line">3 0</span><br><span class="line">3 3</span><br><span class="line">6 2</span><br><span class="line">2 1</span><br><span class="line">8 2</span><br></pre></td></tr></table></figure><br><strong>输出样例：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><br><strong>样例解释</strong><br>其中第一、二、五条赋值语句右值未被初始化。</p><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="type">bool</span> flag[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> k, n, x, y;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; k;</span><br><span class="line">    flag[<span class="number">0</span>] = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">while</span> (k --)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!flag[y])&#123;</span><br><span class="line">            ans++;</span><br><span class="line">        &#125;</span><br><span class="line">        flag[x] = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4509-归一化处理"><a href="#4509-归一化处理" class="headerlink" title="4509. 归一化处理"></a>4509. 归一化处理</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">难度：简单</span><br><span class="line">时/空限制：0.5s / 512MB</span><br><span class="line">来源：第26次CCF计算机软件能力认证</span><br><span class="line">算法标签</span><br><span class="line">模拟</span><br></pre></td></tr></table></figure><h3 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h3><p>在机器学习中，对数据进行归一化处理是一种常用的技术。</p><p>将数据从各种各样分布调整为平均值为 0、方差为 1 的标准分布，在很多情况下都可以有效地加速模型的训练。</p><p>这里假定需要处理的数据为 n 个整数 a1,a2,⋯,an。</p><p>这组数据的平均值：</p><script type="math/tex; mode=display">\overline{a}=(a_1+a_2+⋯+a_n)/n</script><p>方差：</p><script type="math/tex; mode=display">D(a)=1/n \sum_{i=1}^n (a_i - \overline{a})^2</script><p>使用如下函数处理所有数据，得到的 n 个浮点数 f(a1),f(a2),⋯,f(an) 即满足平均值为 0 且方差为 1：</p><script type="math/tex; mode=display">f(a_i)=(a_i−\overline{a})/\sqrt{D(a)}</script><p><strong>输入格式</strong><br>第一行包含一个整数 n，表示待处理的整数个数。</p><p>第二行包含空格分隔的 n 个整数，依次表示 a1,a2,⋯,an。</p><p><strong>输出格式</strong><br>输出共 n 行，每行一个浮点数，依次表示按上述方法归一化处理后的数据 f(a1),f(a2),⋯,f(an)。</p><p>如果你输出的每个浮点数与参考结果相比，均满足绝对误差不大于 10−4，则该测试点满分，否则不得分。</p><p><strong>数据范围</strong><br>全部的测试数据保证 n,|ai|≤1000，其中 |ai| 表示 ai 的绝对值。<br>且输入的 n 个整数 a1,a2,⋯,an 满足：方差 D(a)≥1。</p><p><strong>输入样例：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">7</span><br><span class="line">-4 293 0 -22 12 654 1000</span><br></pre></td></tr></table></figure><br><strong>输出样例：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-0.7485510379073613</span><br><span class="line">0.04504284674812264</span><br><span class="line">-0.7378629047806881</span><br><span class="line">-0.7966476369773906</span><br><span class="line">-0.7057985054006686</span><br><span class="line">1.0096468614303775</span><br><span class="line">1.9341703768876082</span><br></pre></td></tr></table></figure><br><strong>样例解释</strong><br>平均值：a¯≈276.14285714285717<br>方差：D(a)≈140060.69387755104<br>标准差：D(a)−−−−√≈374.24683549437134</p><h3 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">double</span> a[<span class="number">1010</span>];     </span><br><span class="line"><span class="type">double</span> ave, var;</span><br><span class="line"><span class="type">double</span> ans;              </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">        ave += a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    ave = ave / n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        var+=(a[i]-ave)*(a[i]-ave);         </span><br><span class="line">    &#125;</span><br><span class="line">    var=<span class="built_in">sqrt</span>(var/n);        <span class="comment">//标准差</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;          </span><br><span class="line">        ans=(a[i]-ave)/var;</span><br><span class="line">        cout &lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法练习 </category>
          
          <category> ACWing </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 模拟 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>L1-006 连续因子 L1-009 N个数求和 L1-020 帅到没朋友</title>
      <link href="/2023/01/10/%5Bpta%E5%A4%A9%E6%A2%AF%E8%B5%9B01%5D/"/>
      <url>/2023/01/10/%5Bpta%E5%A4%A9%E6%A2%AF%E8%B5%9B01%5D/</url>
      
        <content type="html"><![CDATA[<h2 id="L1-006-连续因子"><a href="#L1-006-连续因子" class="headerlink" title="L1-006 连续因子"></a>L1-006 连续因子</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>一个正整数 N 的因子中可能存在若干连续的数字。例如 630 可以分解为 3×5×6×7，其中 5、6、7 就是 3 个连续的数字。给定任一正整数 N，要求编写程序求出最长连续因子的个数，并输出最小的连续因子序列。</p><p><strong>输入格式：</strong><br>输入在一行中给出一个正整数 $N（1&lt;N&lt;2^{31})$</p><p><strong>输出格式：</strong><br>首先在第 1 行输出最长连续因子的个数；然后在第 2 行中按 因子1 <em> 因子2 </em> …… * 因子k 的格式输出最小的连续因子序列，其中因子按递增顺序输出，1 不算在内。</p><p><strong>输入样例：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">630</span><br></pre></td></tr></table></figure><br><strong>输出样例：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">5*6*7</span><br></pre></td></tr></table></figure></p><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p><strong>注意素数特殊情况</strong><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="type">int</span> startNum = <span class="number">2</span>;</span><br><span class="line">    <span class="comment">//枚举连续数的起始点</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= <span class="built_in">sqrt</span>(n); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> temp = n;</span><br><span class="line">        <span class="type">int</span> j = i;</span><br><span class="line">        <span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (temp % j == <span class="number">0</span>)&#123;</span><br><span class="line">            temp /= j;</span><br><span class="line">            j++;</span><br><span class="line">            count++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (count &gt; ans)&#123;</span><br><span class="line">            ans = count;</span><br><span class="line">            startNum = i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//素数</span></span><br><span class="line">    <span class="keyword">if</span> (ans == <span class="number">0</span>)&#123;</span><br><span class="line">        cout &lt;&lt; <span class="number">1</span> &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; n;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; ans; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (i != ans <span class="number">-1</span>)</span><br><span class="line">                cout &lt;&lt; startNum + i &lt;&lt; <span class="string">&quot;*&quot;</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                cout &lt;&lt; startNum + i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="L1-009-N个数求和"><a href="#L1-009-N个数求和" class="headerlink" title="L1-009 N个数求和"></a>L1-009 N个数求和</h2><h3 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h3><p>本题的要求很简单，就是求N个数字的和。麻烦的是，这些数字是以有理数分子/分母的形式给出的，你输出的和也必须是有理数的形式。</p><p><strong>输入格式：</strong><br>输入第一行给出一个正整数N（≤100）。随后一行按格式a1/b1 a2/b2 …给出N个有理数。题目保证所有分子和分母都在长整型范围内。另外，负数的符号一定出现在分子前面。</p><p><strong>输出格式：</strong><br>输出上述数字和的最简形式 —— 即将结果写成整数部分 分数部分，其中分数部分写成分子/分母，要求分子小于分母，且它们没有公因子。如果结果的整数部分为0，则只输出分数部分。</p><p><strong>输入样例1：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">2/5 4/15 1/30 -2/60 8/3</span><br></pre></td></tr></table></figure><br><strong>输出样例1：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3 1/3</span><br></pre></td></tr></table></figure><br><strong>输入样例2：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">4/3 2/3</span><br></pre></td></tr></table></figure><br><strong>输出样例2：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><br><strong>输入样例3：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">1/3 -1/6 1/8</span><br></pre></td></tr></table></figure><br><strong>输出样例3：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">7/24</span><br></pre></td></tr></table></figure></p><h3 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h3><p><strong>输出时注意分子为0，整数，假分数，真分数</strong><br><strong>每加完一个分数，分子分母要约分，防止爆数据范围</strong><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">gcd</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">while</span> (b != <span class="number">0</span>) &#123;</span><br><span class="line"><span class="type">int</span> c = a % b;</span><br><span class="line">a = b;</span><br><span class="line">b = c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> up = <span class="number">0</span>, down = <span class="number">1</span>;</span><br><span class="line"><span class="type">int</span> n, a, b;</span><br><span class="line"><span class="type">char</span> c;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">while</span> (n--) &#123;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; c &gt;&gt; b;</span><br><span class="line">up = b * up + a * down;</span><br><span class="line">down = down * b;</span><br><span class="line"><span class="type">int</span> d = <span class="built_in">gcd</span>(<span class="built_in">abs</span>(up), <span class="built_in">abs</span>(down));</span><br><span class="line">up /= d;</span><br><span class="line">down /= d;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (up == <span class="number">0</span>)</span><br><span class="line">cout &lt;&lt; <span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (up % down == <span class="number">0</span>)</span><br><span class="line">cout &lt;&lt; up / down;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="type">int</span> z = up / down;</span><br><span class="line"><span class="keyword">if</span> (z)&#123;</span><br><span class="line">cout &lt;&lt; z &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; up - z * down &lt;&lt; <span class="string">&quot;/&quot;</span> &lt;&lt; down;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="L1-020-帅到没朋友"><a href="#L1-020-帅到没朋友" class="headerlink" title="L1-020 帅到没朋友"></a>L1-020 帅到没朋友</h2><h3 id="题目描述-2"><a href="#题目描述-2" class="headerlink" title="题目描述"></a>题目描述</h3><p>当芸芸众生忙着在朋友圈中发照片的时候，总有一些人因为太帅而没有朋友。本题就要求你找出那些帅到没有朋友的人。</p><p><strong>输入格式：</strong><br>输入第一行给出一个正整数N（≤100），是已知朋友圈的个数；随后N行，每行首先给出一个正整数K（≤1000），为朋友圈中的人数，然后列出一个朋友圈内的所有人——为方便起见，每人对应一个ID号，为5位数字（从00000到99999），ID间以空格分隔；之后给出一个正整数M（≤10000），为待查询的人数；随后一行中列出M个待查询的ID，以空格分隔。</p><p>注意：没有朋友的人可以是根本没安装“朋友圈”，<strong>也可以是只有自己一个人在朋友圈的人</strong>。虽然有个别自恋狂会自己把自己反复加进朋友圈，但题目保证所有K超过1的朋友圈里都至少有2个不同的人。</p><p><strong>输出格式：</strong><br>按输入的顺序输出那些帅到没朋友的人。ID间用1个空格分隔，行的首尾不得有多余空格。如果没有人太帅，则输出<code>No one is handsome</code>。</p><p>注意：同一个人可以被查询多次，但只输出一次。</p><p><strong>输入样例1：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">3 11111 22222 55555</span><br><span class="line">2 33333 44444</span><br><span class="line">4 55555 66666 99999 77777</span><br><span class="line">8</span><br><span class="line">55555 44444 10000 88888 22222 11111 23333 88888</span><br></pre></td></tr></table></figure><br><strong>输出样例1：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10000 88888 23333</span><br></pre></td></tr></table></figure><br><strong>输入样例2：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">3 11111 22222 55555</span><br><span class="line">2 33333 44444</span><br><span class="line">4 55555 66666 99999 77777</span><br><span class="line">4</span><br><span class="line">55555 44444 22222 11111</span><br></pre></td></tr></table></figure><br><strong>输出样例2：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">No one is handsome</span><br></pre></td></tr></table></figure></p><h3 id="题解-2"><a href="#题解-2" class="headerlink" title="题解"></a>题解</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">//a数组记录出现次数 b数组记录答案 x为b的下标</span></span><br><span class="line"><span class="type">int</span> a[<span class="number">100005</span>], b[<span class="number">10001</span>], x=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, k, t;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        cin &gt;&gt; k;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> l = <span class="number">0</span>; l &lt; k; l++)&#123;</span><br><span class="line">            cin &gt;&gt; t;</span><br><span class="line">            <span class="keyword">if</span>(k != <span class="number">1</span>)<span class="comment">//排除一个人的pyq</span></span><br><span class="line">a[t]++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        cin &gt;&gt; t;</span><br><span class="line">        <span class="keyword">if</span> (a[t] == <span class="number">0</span>)&#123;</span><br><span class="line">            b[x++] = t;</span><br><span class="line">&#125;</span><br><span class="line">        a[t] = <span class="number">-1</span>;<span class="comment">//表示已查询</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; x; i++)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%05d &quot;</span>, b[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(x == <span class="number">0</span>)&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;No one is handsome&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法练习 </category>
          
          <category> GPLT 一阶题目集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 模拟 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TankWar</title>
      <link href="/2023/01/07/TankWar/"/>
      <url>/2023/01/07/TankWar/</url>
      
        <content type="html"><![CDATA[<h3 id="视频展示"><a href="#视频展示" class="headerlink" title="视频展示"></a>视频展示</h3><iframe src="//player.bilibili.com/player.html?aid=649971654&bvid=BV1Qe4y137vf&cid=953990346&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" height=550 width=700> </iframe><h3 id="类图"><a href="#类图" class="headerlink" title="类图"></a>类图</h3><p><img src="https://s1.ax1x.com/2023/01/07/pSE7Eod.png" alt=""></p><h3 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h3><p><a href="https://gitee.com/sheepFly03/tank-war">TankWar</a></p><h3 id="基本思路"><a href="#基本思路" class="headerlink" title="基本思路"></a>基本思路</h3><ul><li>myPanel作为一个线程每隔30ms完成一系列操作后 repaint一下，如果gameOver线程则退出<ul><li>在run中执行hitEnemy和hitHero方法，遍历所有子弹和坦克，调用hitTank方法，通过alive判断是否要从容器中删除对象。</li><li>hitTank方法，传入一个子弹，一个坦克，根据坦克的不同方向分别判断子弹是否击中，如果击中则相应alive设置为false。</li><li>在run中子弹生成敌方坦克，用一个变量记录时间间隔，还设置了一个变量记录己方发射间隔（30ms自增一次）</li><li>KeyPressed控制己方坦克，末尾调用repaint方法</li><li>paint方法：!gameOver则 drawMyInfo(g); drawHero(g); drawEnemyTank(g);drawBombs(g);  gameOver则showReplay(g); 关闭坦克、子弹线程; 重绘重新绘制子组件; 播放结束bgm</li></ul></li><li><p>每个敌方坦克作为线程，使坦克自动移动、发射，在MyPanel中用Vector储存敌方坦克对象</p><ul><li>敌方坦克碰撞判断：new每个enemy时 将储存所有enemy的Vector(myPanel中)通过EnemTank的set方法传入enemy对象的vector数组，判断时先沿当前坦克方向预处理一段距离，遍历所有坦克，如果发生位置重叠，则发生了碰撞</li><li>在敌方坦克线程中，通过选择语句根据坦克的direction作出不同方向的动作，如果在边界内并且没有发生碰撞则调用Tank中的4个move方法，并在不同的时机发射炮弹；通过循环和Thread.sleep方法可以阻止坦克瞬移，并沿当前方向移动一段距离。若到达边界或发生了碰撞需提前break，然后通过随机函数随机不同的方向。线程结束条件是Tank.alive == false。</li></ul></li><li><p>每个坦克有自己的bullet Vector，每个bullet对象是一个线程，线程中每休眠30ms则根据bullet初始化的方向移动一段距离，直到子弹到达边界或bullet.alive == false线程结束, false的可能性有子弹到达边界、子弹射到坦克。</p></li><li>Tank.Shot方法传入一个子弹Vector容器，负责初始化bullet，向容器中添加子弹，然后开启该子弹的线程。在敌方坦克线程和MyPanel监听到空格中调用</li></ul>]]></content>
      
      
      <categories>
          
          <category> 项目练习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 坦克大战 </tag>
            
            <tag> 多线程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ACWing寒假 4655.重新排序</title>
      <link href="/2023/01/05/%5BACWing%E5%AF%92%E5%81%8709%5D%E9%87%8D%E6%96%B0%E6%8E%92%E5%BA%8F/"/>
      <url>/2023/01/05/%5BACWing%E5%AF%92%E5%81%8709%5D%E9%87%8D%E6%96%B0%E6%8E%92%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">难度：中等</span><br><span class="line">时/空限制：1s / 256MB</span><br><span class="line">来源：第十三届蓝桥杯省赛C++C组</span><br><span class="line">算法标签:</span><br><span class="line">差分 贪心 排序不等式</span><br></pre></td></tr></table></figure><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>给定一个数组 A 和一些查询 $L_i,R_i$，求数组中第 $L_i$ 至第 $R_i$ 个元素之和。</p><p>小蓝觉得这个问题很无聊，于是他想重新排列一下数组，使得最终每个查询结果的和尽可能地大。</p><p>小蓝想知道相比原数组，所有查询结果的总和最多可以增加多少?</p><p><strong>输入格式</strong><br>输入第一行包含一个整数 n。</p><p>第二行包含 n 个整数 $A_1,A_2,⋅⋅⋅,A_n$，相邻两个整数之间用一个空格分隔。</p><p>第三行包含一个整数 m 表示查询的数目。</p><p>接下来 m 行，每行包含两个整数 $L_i、R_i$，相邻两个整数之间用一个空格分隔。</p><p><strong>输出格式</strong><br>输出一行包含一个整数表示答案。</p><p><strong>数据范围</strong><br>对于 30% 的评测用例，$n,m≤50$；<br>对于 50% 的评测用例，$n,m≤500$；<br>对于 70% 的评测用例，$n,m≤5000$；<br>对于所有评测用例，$1≤n,m≤10^5，1≤A_i≤10^6，1≤L_i≤R_i≤n$。</p><p><strong>输入样例：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">1 2 3 4 5</span><br><span class="line">2</span><br><span class="line">1 3</span><br><span class="line">2 5</span><br></pre></td></tr></table></figure><br><strong>输出样例：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure><br><strong>样例解释</strong><br>原来的和为 6+14=20，重新排列为 (1,4,5,2,3) 后和为 10+14=24，增加了 4。</p><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p><strong>贪心思路：</strong><br>样例中两个范围 [1,3] 和 [2,5] ,下标 2，3 出现了两次，即下标为2和3的两个数需要相加两次，要使相加后的数最大，则要使下标为2和3的两个数为数组中最大的两个数。<br>故有了初步思路，遍历每个范围，c数组记录该下标数字被加次数，用sort函数对A数组和计次数组排序，<code>for i -&gt; n &#123; sum += a[i] * c[i] &#125;</code></p><p><strong>初步分析代码如下：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[<span class="number">100010</span>];<span class="comment">//数组A</span></span><br><span class="line"><span class="type">int</span> c[<span class="number">100010</span>];<span class="comment">//涉及到的次数</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x &gt; y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, m;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> preSum = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;m);</span><br><span class="line">    <span class="keyword">while</span> (m--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> l, r;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;l, &amp;r);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = l - <span class="number">1</span>; i &lt; r; i++)&#123;</span><br><span class="line">            c[i]++;</span><br><span class="line">            preSum += a[i];</span><br><span class="line">        &#125;</span><br><span class="line">            </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(a, a + n, cmp);</span><br><span class="line">    <span class="built_in">sort</span>(c, c + n, cmp);</span><br><span class="line"></span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        sum += a[i] * c[i];</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld&quot;</span>, sum - preSum);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>结果：Time Limit Exceeded  通过了 7/10个数据  运行时间： N/A  运行空间： N/A</p></blockquote><p><strong>进一步优化</strong><br>上述while循环中的for循环是不必要的，也是造成超时的关键原因。<br>对于c数组计数我们可以用<strong>差分数组</strong>来进行优化, 而对于第一次求和，我们可以借助<strong>前缀和数组</strong>进行 <code>sum =  s[r] - s[l-1]</code><br><strong>注意</strong>：前缀和数组、sum1、sum2、a数组要开<code>long long</code> ，如果a数组不开longlong那么sum1和sum2要进行强制类型转换。</p><p>代码如下：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">long</span> <span class="type">long</span> a[<span class="number">100010</span>];<span class="comment">//数组A</span></span><br><span class="line"><span class="type">long</span> <span class="type">long</span> s[<span class="number">100010</span>];<span class="comment">//前缀和数组</span></span><br><span class="line"><span class="type">int</span> c[<span class="number">100010</span>];<span class="comment">//差分数组</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>, &amp;a[i]);</span><br><span class="line">        s[i] = s[i - <span class="number">1</span>] + a[i];<span class="comment">//初始化前缀和数组</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;m);</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> sum1 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (m--)&#123;</span><br><span class="line">        <span class="type">int</span> l, r;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;l, &amp;r);</span><br><span class="line">        sum1 += s[r] - s[l<span class="number">-1</span>];</span><br><span class="line">        <span class="comment">//初始化差分数组</span></span><br><span class="line">        c[l]++;</span><br><span class="line">        c[r + <span class="number">1</span>]--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//恢复差分数组</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">        c[i] += c[i - <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">sort</span>(a+<span class="number">1</span>, a+<span class="number">1</span> + n);</span><br><span class="line">    <span class="built_in">sort</span>(c+<span class="number">1</span>, c+<span class="number">1</span> + n);</span><br><span class="line"></span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> sum2 = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//被求和次数少的放小的数</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">        sum2 += a[i] * c[i];</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; sum2 - sum1;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><ul><li>B站相关视频：</li></ul><iframe src="//player.bilibili.com/player.html?aid=542382432&bvid=BV1pi4y1j7si&cid=246393911&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" height=550 width=700> </iframe>]]></content>
      
      
      <categories>
          
          <category> 算法练习 </category>
          
          <category> ACWing </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前缀和 </tag>
            
            <tag> 差分 </tag>
            
            <tag> 贪心 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ACWing寒假 4653.数位排序</title>
      <link href="/2023/01/03/%5BACWing%E5%AF%92%E5%81%8708%5D%E6%95%B0%E4%BD%8D%E6%8E%92%E5%BA%8F/"/>
      <url>/2023/01/03/%5BACWing%E5%AF%92%E5%81%8708%5D%E6%95%B0%E4%BD%8D%E6%8E%92%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">难度：简单</span><br><span class="line">时/空限制：1s / 256MB</span><br><span class="line">来源：第十三届蓝桥杯省赛C++C组</span><br><span class="line">算法标签:</span><br><span class="line">排序 二分</span><br></pre></td></tr></table></figure><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>小蓝对一个数的数位之和很感兴趣，今天他要按照数位之和给数排序。</p><p>当两个数各个数位之和不同时，将数位和较小的排在前面，当数位之和相等时，将数值小的排在前面。</p><p>例如，2022 排在 409 前面，因为 2022 的数位之和是 6，小于 409 的数位之和 13。</p><p>又如，6 排在 2022 前面，因为它们的数位之和相同，而 6 小于 2022。</p><p>给定正整数 n，m，请问对 1 到 n 采用这种方法排序时，排在第 m 个的元素是多少？</p><p><strong>输入格式</strong><br>输入第一行包含一个正整数 n。</p><p>第二行包含一个正整数 m。</p><p><strong>输出格式</strong><br>输出一行包含一个整数，表示答案。</p><p><strong>数据范围</strong><br>对于 30% 的评测用例，$1≤m≤n≤300$<br>对于 50% 的评测用例，$1≤m≤n≤1000$<br>对于所有评测用例，$1≤m≤n≤10^6$</p><p><strong>输入样例：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">13</span><br><span class="line">5</span><br></pre></td></tr></table></figure><br><strong>输出样例：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><br><strong>样例解释</strong><br>$1$ 到 $13$ 的排序为：$1,10,2,11,3,12,4,13,5,6,7,8,9$</p><p>第 $5$ 个数为 $3$。</p><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p>数据范围1e6, 时间复杂度O(nlogn)可以解决，故可以直接用sort改写cmp方法。</p><p><strong>初次尝试：</strong><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> sum_a = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> sum_b = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> t1 = a, t2 = b;</span><br><span class="line">    <span class="keyword">while</span> (t1)&#123;</span><br><span class="line">        sum_a += t1 % <span class="number">10</span>;</span><br><span class="line">        t1 /= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (t2)&#123;</span><br><span class="line">        sum_b += t2 % <span class="number">10</span>;</span><br><span class="line">        t2 /= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (sum_a != sum_b)</span><br><span class="line">        <span class="keyword">return</span> sum_a &lt; sum_b;</span><br><span class="line">    <span class="keyword">return</span> a &lt; b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[<span class="number">1000010</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        a[i] = i + <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">sort</span>(a, a + n, cmp);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, a[m - <span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>结果超时了，原因是将拆分数的循环动作放在了cmp函数里面，导致了很多重复的动作，可以在main函数中先预处理，将拆分和存储起来。</p><p><strong>第二次尝试（结构体储存）：</strong><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span>&#123;</span><br><span class="line">    <span class="type">int</span> x, y;</span><br><span class="line">&#125; a[<span class="number">1000010</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(node a,node b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a.y != b.y) <span class="keyword">return</span> a.y &lt; b.y;</span><br><span class="line">    <span class="keyword">return</span> a.x &lt; b.x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">        a[i].x = i + <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> t = i + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(t)&#123;</span><br><span class="line">            a[i].y += t % <span class="number">10</span>;</span><br><span class="line">            t /= <span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(a, a + n, cmp);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, a[m - <span class="number">1</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 算法练习 </category>
          
          <category> ACWing </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 排序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ACWing寒假 4644.求和</title>
      <link href="/2023/01/02/%5BACWing%E5%AF%92%E5%81%8707%5D%E6%B1%82%E5%92%8C/"/>
      <url>/2023/01/02/%5BACWing%E5%AF%92%E5%81%8707%5D%E6%B1%82%E5%92%8C/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">难度：简单</span><br><span class="line">时/空限制：1s / 256MB</span><br><span class="line">来源：第十三届蓝桥杯省赛C++A/C组 , 第十三届蓝桥杯省赛JAVAA组</span><br><span class="line">算法标签:</span><br><span class="line">推公式 前缀和</span><br></pre></td></tr></table></figure><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>给定 n 个整数 $a_1,a_2,⋅⋅⋅,a_n$，求它们两两相乘再相加的和，即</p><p>$S=a<em>1⋅a_2+a_1⋅a_3+⋅⋅⋅+a_1⋅a_n+a_2⋅a_3+⋅⋅⋅+a</em>{n−2}⋅a<em>{n−1}+a</em>{n−2}⋅a<em>n+a</em>{n−1}⋅a_n$</p><p><strong>输入格式</strong><br>输入的第一行包含一个整数 n。</p><p>第二行包含 n 个整数 a1,a2,⋅⋅⋅,an。</p><p><strong>输出格式</strong><br>输出一个整数 S，表示所求的和。</p><p>请使用合适的数据类型进行运算。</p><p><strong>数据范围</strong><br>对于 30% 的数据，$1≤n≤1000，1≤a_i≤100。$<br>对于所有评测用例，$1≤n≤200000，1≤a_i≤1000。$</p><p><strong>输入样例：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">1 3 6 9</span><br></pre></td></tr></table></figure><br><strong>输出样例：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">117</span><br></pre></td></tr></table></figure></p><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p>数据范围为2e6，暴力两重循环O(n^2)肯定会超时,可对公式进一步解析：</p><p>$S=a<em>1⋅a_2+a_1⋅a_3+⋅⋅⋅+a_1⋅a_n+a_2⋅a_3+⋅⋅⋅+a</em>{n−2}⋅a<em>{n−1}+a</em>{n−2}⋅a<em>n+a</em>{n−1}⋅a<em>n$<br>等价于：<br>$S=a_1⋅(a_2+a_3+⋅⋅⋅+a_n)+⋅⋅⋅+a</em>{n−2}⋅(a<em>{n−1}+a_n)+a</em>{n−1}⋅a<em>n$<br><strong>对于和的部分可以用前缀和解决</strong>，例如：设前缀和数组为S，则 $a_1$ 后面的和则等于 $S[n] - S[1]$ (下标从1开始)；<br>故只需要初始化前缀和数组O(n), 再枚举 $a_1$ 至 $a</em>{n-1}$ O(n) 即可解决问题，时间复杂度：O(n)。</p><p><strong>注意</strong>：前缀和数组和答案需要<code>long long</code>类型</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[<span class="number">200010</span>];</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> preSum[<span class="number">200010</span>];<span class="comment">//前缀和</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">        preSum[i] = a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//求前缀和</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; i++)</span><br><span class="line">        preSum[i] += preSum[i - <span class="number">1</span>];</span><br><span class="line">    <span class="comment">//求结果</span></span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        ans += (a[i] * (preSum[n] - preSum[i]));</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>已AC</p></blockquote><p><strong>进一步优化空间复杂度</strong>：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"><span class="type">int</span> arr[<span class="number">200010</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    LL ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line">        cin&gt;&gt;arr[i];</span><br><span class="line">        ans+=arr[i];</span><br><span class="line">    &#125;</span><br><span class="line">    LL S=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        S+=arr[i]*(ans-arr[i]);</span><br><span class="line">        ans-=arr[i];</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;S&lt;&lt;endl;</span><br><span class="line"> &#125; </span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 算法练习 </category>
          
          <category> ACWing </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前缀和 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ACWing第84场周赛 2022/12/31</title>
      <link href="/2022/12/31/%5BACWing%E7%AC%AC84%E5%9C%BA%E5%91%A8%E8%B5%9B%5D%20%E8%B7%A8%E5%B9%B4%E8%B5%9B/"/>
      <url>/2022/12/31/%5BACWing%E7%AC%AC84%E5%9C%BA%E5%91%A8%E8%B5%9B%5D%20%E8%B7%A8%E5%B9%B4%E8%B5%9B/</url>
      
        <content type="html"><![CDATA[<h2 id="4788-最大数量"><a href="#4788-最大数量" class="headerlink" title="4788. 最大数量"></a>4788. 最大数量</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">难度：简单</span><br><span class="line">时/空限制：1s / 256MB</span><br><span class="line">总通过数：1535</span><br><span class="line">总尝试数：3350</span><br><span class="line">来源：AcWing,第84场周赛</span><br><span class="line">算法标签:</span><br><span class="line">哈希表</span><br></pre></td></tr></table></figure><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>某商场在一天中一共来了 n 个客人。</p><p>每个客人进入商场的具体时刻（精确到分钟）已知。</p><p>请你计算并输出在同一时刻（精确到分钟）进入商场的最大客人数量。</p><p><strong>输入格式</strong><br>第一行包含整数 n。</p><p>接下来 n 行，每行包含两个整数 h,m，表示一个客人在 h 时 m 分进入商场。</p><p>所有时间都按照时间先后顺序给出。</p><p>时间采用 24 小时制。</p><p><strong>输出格式</strong><br>一个整数，表示在同一时刻（精确到分钟）进入商场的最大客人数量。</p><p><strong>数据范围</strong><br>前 $5$ 个测试点满足 $1≤n≤10。$<br>所有测试点满足 $1≤n≤10^5，0≤h_i≤23，0≤m_i≤59。$</p><p><strong>输入样例1：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">8 0</span><br><span class="line">8 10</span><br><span class="line">8 10</span><br><span class="line">8 45</span><br></pre></td></tr></table></figure><br><strong>输出样例1：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><br><strong>输入样例2：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">0 12</span><br><span class="line">10 11</span><br><span class="line">22 22</span><br></pre></td></tr></table></figure><br><strong>输出样例2：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure></p><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[<span class="number">1500</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, res = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> h, m;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;h, &amp;m);</span><br><span class="line">        res = <span class="built_in">max</span>(res, ++a[h * <span class="number">60</span> + m]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, res);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4789-前缀和序列"><a href="#4789-前缀和序列" class="headerlink" title="4789. 前缀和序列"></a>4789. 前缀和序列</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">难度：中等</span><br><span class="line">时/空限制：1s / 256MB</span><br><span class="line">总通过数：1351</span><br><span class="line">总尝试数：3481</span><br><span class="line">来源：AcWing,第84场周赛</span><br><span class="line">算法标签:</span><br><span class="line">前缀和</span><br></pre></td></tr></table></figure><h3 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h3><p>给定一个长度为 n 的正整数序列 a1,a2,…,an。</p><p>如果将该序列从小到大排序，则可以得到另一个长度为 n 的正整数序列 b1,b2,…,bn。</p><p>现在，请你回答 m 个询问，询问共分为以下两种：</p><ul><li><code>1 l r</code>，请你计算并输出 $ \sum_{i=l}^{r} a_i $</li><li><code>2 l r</code>，请你计算并输出 $ \sum_{i=l}^{r} b_i $</li></ul><p><strong>输入格式</strong><br>第一行包含整数 n。</p><p>第二行包含 n 个正整数 a1,a2,…,an。</p><p>第三行包含整数 m。</p><p>接下来 m 行，每行包含一个询问，格式如题面描述。</p><p><strong>输出格式</strong><br>共 m 行，每个询问输出一行答案。</p><p><strong>数据范围</strong><br>前 $3$ 个测试点满足 $1≤n,m≤10$<br>所有测试点满足 $1≤n,m≤10^5，1≤a_i≤10^9，1≤l≤r≤n$</p><p><strong>输入样例1：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">6</span><br><span class="line">6 4 2 7 2 7</span><br><span class="line">3</span><br><span class="line">2 3 6</span><br><span class="line">1 3 4</span><br><span class="line">1 1 6</span><br></pre></td></tr></table></figure><br><strong>输出样例1：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">24</span><br><span class="line">9</span><br><span class="line">28</span><br></pre></td></tr></table></figure><br><strong>输入样例2：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">5 5 2 3</span><br><span class="line">10</span><br><span class="line">1 2 4</span><br><span class="line">2 1 4</span><br><span class="line">1 1 1</span><br><span class="line">2 1 4</span><br><span class="line">2 1 2</span><br><span class="line">1 1 1</span><br><span class="line">1 3 3</span><br><span class="line">1 1 3</span><br><span class="line">1 4 4</span><br><span class="line">1 2 2</span><br></pre></td></tr></table></figure><br><strong>输出样例2：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">10</span><br><span class="line">15</span><br><span class="line">5</span><br><span class="line">15</span><br><span class="line">5</span><br><span class="line">5</span><br><span class="line">2</span><br><span class="line">12</span><br><span class="line">3</span><br><span class="line">5</span><br></pre></td></tr></table></figure><br><strong>输入样例3：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">2 2 3 6</span><br><span class="line">9</span><br><span class="line">2 2 3</span><br><span class="line">1 1 3</span><br><span class="line">2 2 3</span><br><span class="line">2 2 3</span><br><span class="line">2 2 2</span><br><span class="line">1 1 3</span><br><span class="line">1 1 3</span><br><span class="line">2 1 4</span><br><span class="line">1 1 2</span><br></pre></td></tr></table></figure><br><strong>输出样例3：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">7</span><br><span class="line">5</span><br><span class="line">5</span><br><span class="line">2</span><br><span class="line">7</span><br><span class="line">7</span><br><span class="line">13</span><br><span class="line">4</span><br></pre></td></tr></table></figure></p><h3 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line"><span class="type">int</span> a[N], b[N];</span><br><span class="line">ll s1[N], s2[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line">        b[i] = a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span> (b, b + n);</span><br><span class="line">    <span class="comment">//前缀和初始化</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++)</span><br><span class="line">        s1[i] = s1[i - <span class="number">1</span>] + a[i]; </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++)</span><br><span class="line">        s2[i] = s2[i - <span class="number">1</span>] + b[i];</span><br><span class="line">        </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;m);</span><br><span class="line">    <span class="keyword">while</span> (m--) &#123;</span><br><span class="line">        <span class="type">int</span> op, l, r;</span><br><span class="line">        cin &gt;&gt; op &gt;&gt; l &gt;&gt; r;</span><br><span class="line">        <span class="keyword">if</span> (op == <span class="number">1</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, s1[r - <span class="number">1</span>] - s1[l - <span class="number">2</span>]);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, s2[r - <span class="number">1</span>] - s2[l - <span class="number">2</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4790-买可乐"><a href="#4790-买可乐" class="headerlink" title="4790. 买可乐"></a>4790. 买可乐</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">难度：中等</span><br><span class="line">时/空限制：1s / 256MB</span><br><span class="line">总通过数：1263</span><br><span class="line">总尝试数：3117</span><br><span class="line">来源：AcWing,第84场周赛</span><br><span class="line">算法标签:</span><br><span class="line">枚举 贪心</span><br></pre></td></tr></table></figure><h3 id="题目描述-2"><a href="#题目描述-2" class="headerlink" title="题目描述"></a>题目描述</h3><p>某商店目前库存可乐数量为 $k$ 瓶。</p><p>可乐的进货价格如下：</p><ul><li>整箱：<code>c</code> 元/箱。每箱有 <code>n</code> 瓶。</li><li>单瓶：<code>d</code> 元/瓶。</li></ul><p>请问，为了使得库存可乐数量不低于 $n×m$ 瓶，该商店至少需要花费多少元钱来购进可乐。</p><p>显然，当 $k≥n×m$ 时，无需购进可乐。</p><p><strong>输入格式</strong><br>第一行包含两个整数 c,d。</p><p>第二行包含两个整数 n,m。</p><p>第三行包含整数 k。</p><p><strong>输出格式</strong><br>一个整数，表示最少花费的金额。</p><p><strong>数据范围</strong><br>前 $4$ 个测试点满足 $1≤c,d,n,m,k≤10$。<br>所有测试点满足 $1≤c,d,n,m,k≤100$。</p><p><strong>输入样例1：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1 10</span><br><span class="line">7 2</span><br><span class="line">1</span><br></pre></td></tr></table></figure><br><strong>输出样例1：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><br><strong>输入样例2：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">2 2</span><br><span class="line">2 1</span><br><span class="line">2</span><br></pre></td></tr></table></figure><br><strong>输出样例2：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0</span><br></pre></td></tr></table></figure></p><h3 id="题解-2"><a href="#题解-2" class="headerlink" title="题解"></a>题解</h3><p><strong>注意买整箱不一定比单买划算（易忽视）</strong><br><strong><code>res = min(c * box, d * box * n)</code>表示买整箱便宜还是单买便宜</strong><br><strong><code>res = min(res + c, res + bottle * d)</code>表示剩余的可乐（少于n瓶）中，买一箱（n瓶）还是单买剩余的可乐划算</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> c, d;<span class="comment">//c元/箱(n瓶) d元/瓶</span></span><br><span class="line">    cin &gt;&gt; c &gt;&gt; d;</span><br><span class="line">    <span class="type">int</span> n, m;<span class="comment">//库存需 &gt;= n*m</span></span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="type">int</span> k;<span class="comment">//库存</span></span><br><span class="line">    cin &gt;&gt; k;</span><br><span class="line">    <span class="keyword">if</span> (k &gt;= n * m)</span><br><span class="line">        cout &lt;&lt; <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="type">int</span> box = (n * m - k) / n;</span><br><span class="line">        <span class="type">int</span> bottle = (n * m - k) % n;</span><br><span class="line">        <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">        res = <span class="built_in">min</span>(c * box, d * box * n);</span><br><span class="line">        res = <span class="built_in">min</span>(res + c, res + bottle * d);</span><br><span class="line">        cout &lt;&lt; res;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法练习 </category>
          
          <category> ACWing </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前缀和 </tag>
            
            <tag> 贪心 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ACWing寒假 4645.选数异或</title>
      <link href="/2022/12/31/%5BACWing%E5%AF%92%E5%81%8706%5D%E9%80%89%E6%95%B0%E5%BC%82%E6%88%96/"/>
      <url>/2022/12/31/%5BACWing%E5%AF%92%E5%81%8706%5D%E9%80%89%E6%95%B0%E5%BC%82%E6%88%96/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">难度：中等</span><br><span class="line">时/空限制：1s / 256MB</span><br><span class="line">来源：第十三届蓝桥杯省赛C++A/C/研究生组</span><br><span class="line">算法标签:</span><br><span class="line">None</span><br></pre></td></tr></table></figure><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>给定一个长度为 n 的数列 A1,A2,⋅⋅⋅,An 和一个非负整数 x，给定 m 次查询，每次询问能否从某个区间 [ l,r ] 中选择两个数使得他们的异或等于 x。</p><p><strong>输入格式</strong><br>输入的第一行包含三个整数 n, m, x。</p><p>第二行包含 n 个整数 A1,A2,⋅⋅⋅,An。</p><p>接下来 m 行，每行包含两个整数 $l_i,r_i$ 表示询问区间 $[l_i,r_i]$。</p><p><strong>输出格式</strong><br>对于每个询问，如果该区间内存在两个数的异或为 x 则输出 <code>yes</code>，否则输出 <code>no</code>。</p><p><strong>数据范围</strong><br>对于 20% 的评测用例，$1≤n,m≤100$；<br>对于 40% 的评测用例，$1≤n,m≤1000$；<br>对于所有评测用例，$1≤n,m≤100000，0≤x&lt;2^{20}，1≤l_i≤r_i≤n，0≤A_i&lt;2^{20}$。</p><p><strong>输入样例：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">4 4 1</span><br><span class="line">1 2 3 4</span><br><span class="line">1 4</span><br><span class="line">1 2</span><br><span class="line">2 3</span><br><span class="line">3 3</span><br></pre></td></tr></table></figure><br><strong>输出样例：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yes</span><br><span class="line">no</span><br><span class="line">yes</span><br><span class="line">no</span><br></pre></td></tr></table></figure><br><strong>样例解释</strong><br>显然整个数列中只有 2,3 的异或为 1。</p><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p>暴力法：<br>Time Limit Exceeded  通过了 6/10个数据  运行时间：N/A  运行空间: N/A<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[<span class="number">100005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = l<span class="number">-1</span>; i &lt; r; i++)&#123;</span><br><span class="line">        <span class="type">int</span> A = a[i];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = l<span class="number">-1</span>; i != j &amp;&amp; j &lt; r; j++)&#123;</span><br><span class="line">            <span class="type">int</span> B = a[j];</span><br><span class="line">            <span class="keyword">if</span> ((A ^ B) == x) </span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, m, x;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m &gt;&gt; x;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) </span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line">    <span class="keyword">while</span> (m--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> l, r;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;l, &amp;r);</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">check</span>(l, r, x)) </span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;yes\n&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;no\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>动态规划：</strong><br>一条异或的性质：如果存在<code>a^b=x</code>，那么一定满足<code>a^x=b</code>，<code>b^x=a</code>。</p><p>对此，我们可以处理得到数组中所有符合的数对 $(a, b)$，其中 $a$ 是数组中靠左的数，$b$ 是靠右边的。我们可以枚举 $b$ (其中 $b &lt;= r$ ), 然后判断在 $b$ 前面是否出现过数 $a$ ，这一步我们可以使用哈希表(值初始化为0)记录维护每个数对左端的位置，键表示b，值表示a的位置，如果值不为0则说明找到一对符合的数对。</p><p>我们定义<code>dp[i]</code>为前<code>i</code>个数的所有数对中<code>a</code>的最大下标<br>这样我们对于每个查询<code>[l,r]</code>，只需要去判断<code>dp[r] &gt;= l</code>即可，符合则输出<code>yes</code>，否则输出<code>no</code>。</p><p>对于当前的值<code>v</code>,下标为<code>i</code>。如果哈希表中不存在数<code>x^v</code>，则<code>dp[i] = dp[i-1]</code>，如果存在则为<code>dp[i] = max(dp[i−1], m[vˆx])</code></p><blockquote><p><a href="https://www.acwing.com/video/4586/">视频讲解</a></p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"><span class="type">int</span> dp[N];</span><br><span class="line">map&lt;<span class="type">int</span>, <span class="type">int</span>&gt; mp;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, m, x, a;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m &gt;&gt; x;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        cin &gt;&gt; a;</span><br><span class="line">        dp[i] = <span class="built_in">max</span>(dp[i - <span class="number">1</span>], mp[a ^ x]);</span><br><span class="line">        mp[a] = i;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (m--) &#123;</span><br><span class="line">        <span class="type">int</span> l, r;</span><br><span class="line">        cin &gt;&gt; l &gt;&gt; r;</span><br><span class="line">        cout &lt;&lt; (dp[r] &gt;= l ? <span class="string">&quot;yes&quot;</span> : <span class="string">&quot;no&quot;</span>) &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法练习 </category>
          
          <category> ACWing </category>
          
      </categories>
      
      
        <tags>
            
            <tag> dp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ACWing寒假 4818.奶牛大学</title>
      <link href="/2022/12/30/%5BACWing%E5%AF%92%E5%81%8705%5D%E5%A5%B6%E7%89%9B%E5%A4%A7%E5%AD%A6/"/>
      <url>/2022/12/30/%5BACWing%E5%AF%92%E5%81%8705%5D%E5%A5%B6%E7%89%9B%E5%A4%A7%E5%AD%A6/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">难度：简单</span><br><span class="line">时/空限制：1s / 64MB</span><br><span class="line">来源：USACO 2022 December Contest Bronze</span><br><span class="line">算法标签:</span><br><span class="line">排序 枚举</span><br></pre></td></tr></table></figure><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>Farmer John 计划为奶牛们新开办一所大学！</p><p>有 N 头奶牛可能会入学。</p><p>每头奶牛最多愿意支付 $c_i$ 的学费。</p><p>Farmer John 可以设定所有奶牛入学需要支付的学费。</p><p>如果这笔学费大于一头奶牛愿意支付的最高金额，那么这头奶牛就不会入学。</p><p>Farmer John 想赚尽可能多的钱，从而可以给他的讲师提供一笔可观的工资。</p><p>请求出他能赚到的钱的数量，以及此时应当收取多少学费。</p><p>输入格式<br>输入的第一行包含 N。</p><p>第二行包含 N 个整数 c1,c2,…,cN，其中 ci 是奶牛 i 愿意支付的最高学费金额。</p><p>输出格式<br>输出 Farmer John 可以赚到的最大金额以及最优情况下他应该收取的学费。如果有多个解，输出收取学费最小的解。</p><p>注意这个问题涉及到的整数可能需要使用 64 位整数型（例如，Java 中的 “long”，C/C++ 中的 “long long”）。</p><p><strong>数据范围</strong><br>$1≤N≤10^5,$<br>$1≤c_i≤10^6$</p><p><strong>输入样例：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">1 6 4 6</span><br></pre></td></tr></table></figure><br><strong>输出样例：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">12 4</span><br></pre></td></tr></table></figure><br><strong>样例解释</strong><br>如果 Farmer John 收费 4，那么 3 头奶牛将会入学，从而使他赚取 3×4=12 的金额。</p><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p>[O(n^2)] 直接暴力枚举fee再遍历数组累加满足要求的数据会超时<br>[O(nlogn)]  可以先排序，遍历i枚举排序好的数组(fee一定为数组内的元素), incone = fee * (n - i)</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> c[<span class="number">100005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;c[i]);</span><br><span class="line">    <span class="built_in">sort</span>(c, c + n);</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> incone = <span class="number">0</span>;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> BestFee = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">long</span> <span class="type">long</span> fee = c[i];</span><br><span class="line">        <span class="comment">//收入(取c[i]作为fee，则有n-i头奶牛愿意支付fee)</span></span><br><span class="line">        <span class="keyword">if</span> (fee * (n - i) &gt; incone)&#123;</span><br><span class="line">            incone = fee * (n - i);<span class="comment">//更新收入</span></span><br><span class="line">            BestFee = fee;<span class="comment">//更新最优费用</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld %lld&quot;</span>, incone, BestFee);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法练习 </category>
          
          <category> ACWing </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 枚举 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ACWing寒假 4366.上课睡觉（石堆）</title>
      <link href="/2022/12/28/%5BACWing%E5%AF%92%E5%81%8703%5D%E4%B8%8A%E8%AF%BE%E7%9D%A1%E8%A7%89/"/>
      <url>/2022/12/28/%5BACWing%E5%AF%92%E5%81%8703%5D%E4%B8%8A%E8%AF%BE%E7%9D%A1%E8%A7%89/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">难度：中等</span><br><span class="line">时/空限制：1s / 64MB</span><br><span class="line">来源：USACO 2022 February Contest Bronze</span><br><span class="line">算法标签:</span><br><span class="line">None</span><br></pre></td></tr></table></figure><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>有 N 堆石子，每堆的石子数量分别为 a1,a2,…,aN。</p><p>你可以对石子堆进行合并操作，将两个相邻的石子堆合并为一个石子堆，例如，如果 a=[1,2,3,4,5]，合并第 2,3 堆石子，则石子堆集合变为 a=[1,5,4,5]。</p><p>我们希望通过尽可能少的操作，使得石子堆集合中的每堆石子的数量都相同。</p><p>请你输出所需的最少操作次数。</p><p>本题一定有解，因为可以将所有石子堆合并为一堆。</p><p><strong>输入格式</strong><br>第一行包含整数 T，表示共有 T 组测试数据。</p><p>每组数据第一行包含整数 N。</p><p>第二行包含 N 个整数 a1,a2,…,aN。</p><p><strong>输出格式</strong><br>每组数据输出一行结果。</p><p><strong>数据范围</strong><br>$1≤T≤10,$<br>$1≤N≤10^5,$<br>$0≤a<em>i≤10^6,$<br>$\sum</em>{i=1}^{n}a_i≤a_i≤10^6,$<br>每个输入所有 N 之和不超过 105。</p><p><strong>输入样例：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">6</span><br><span class="line">1 2 3 1 1 1</span><br><span class="line">3</span><br><span class="line">2 2 3</span><br><span class="line">5</span><br><span class="line">0 0 0 0 0</span><br></pre></td></tr></table></figure><br><strong>输出样例：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">2</span><br><span class="line">0</span><br></pre></td></tr></table></figure><br><strong>样例解释</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">第一组数据，只需要用 3 个操作来完成：</span><br><span class="line"></span><br><span class="line">   1 2 3 1 1 1</span><br><span class="line">-&gt; 3 3 1 1 1</span><br><span class="line">-&gt; 3 3 2 1</span><br><span class="line">-&gt; 3 3 3</span><br><span class="line">第二组数据，只需要用 2 个操作来完成：</span><br><span class="line"></span><br><span class="line">   2 2 3</span><br><span class="line">-&gt; 2 5</span><br><span class="line">-&gt; 7</span><br><span class="line">第三组数据，我们什么都不需要做。</span><br></pre></td></tr></table></figure></p><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p>假设初始堆数为N, 最终堆数为x, 每次合并石子，石子堆的个数就会 -1<br>最终的每个石子堆有 $y=∑ai/x$ 个石子<br>也就是说 $y$ 是 $∑ai$ 的因子，且有 $y⋅x=∑ai$<br>对于一个整数，它的因子是有限的<br>所以，我们可以枚举 $y$，然后检查 $y$ 是否可以作为最终的石子数量。如果可以的话，找到最小的 $y$，就能得到最小的 $x$</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100005</span>;</span><br><span class="line"><span class="type">int</span> t, n, x;<span class="comment">//n为初始堆数，x为变化后的堆数</span></span><br><span class="line"><span class="type">int</span> a[N];<span class="comment">//初始石堆</span></span><br><span class="line">vector&lt;<span class="type">int</span>&gt; d;<span class="comment">//sum的因子</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//是否有解</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">int</span> y)</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> s = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        s += a[i];</span><br><span class="line">        <span class="keyword">if</span> (s &gt; y)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">if</span> (s == y)</span><br><span class="line">            s = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        sum += a[i];</span><br><span class="line">    <span class="comment">//枚举因子</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> y = <span class="number">1</span>; y &lt;= sum; y++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (sum % y == <span class="number">0</span> &amp;&amp; <span class="built_in">check</span>(y))&#123;</span><br><span class="line">            x = sum / y;</span><br><span class="line">            <span class="keyword">return</span> n - x;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;t);</span><br><span class="line">    <span class="keyword">while</span> (t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">        x = n;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">solve</span>());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法练习 </category>
          
          <category> ACWing </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 思维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ACWing寒假 valueless合集</title>
      <link href="/2022/12/27/%5BACWing%E5%AF%92%E5%81%8702%5D%E7%AE%80%E5%8D%95%E5%90%88%E9%9B%86/"/>
      <url>/2022/12/27/%5BACWing%E5%AF%92%E5%81%8702%5D%E7%AE%80%E5%8D%95%E5%90%88%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<h2 id="统计次数"><a href="#统计次数" class="headerlink" title="统计次数"></a>统计次数</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">难度：简单</span><br><span class="line">时/空限制：1s / 64MB</span><br><span class="line">来源：清华大学考研机试题</span><br><span class="line">算法标签:</span><br><span class="line">None</span><br></pre></td></tr></table></figure><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>给定两个正整数 n 和 k，求从 1 到 n 这 n 个正整数的十进制表示中 k 出现的次数。</p><p>输入格式<br>共一行，包含两个整数 n 和 k。</p><p>输出格式<br>输出一个整数，表示答案。</p><p>数据范围<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1≤n≤10^6,</span><br><span class="line">1≤k≤9</span><br></pre></td></tr></table></figure><br>输入样例：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">12 1</span><br></pre></td></tr></table></figure><br>输出样例：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure><br>样例解释<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">从 1 到 12 这些整数中包含 1 的数字有 1,10,11,12，一共出现了 5 次 1。</span><br></pre></td></tr></table></figure></p><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n, k;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; k;</span><br><span class="line">    <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> t = i;</span><br><span class="line">        <span class="keyword">while</span> (t &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (t % <span class="number">10</span> == k) ans++;</span><br><span class="line">            t /= <span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="学分绩点"><a href="#学分绩点" class="headerlink" title="学分绩点"></a>学分绩点</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">难度：简单</span><br><span class="line">时/空限制：1s / 64MB</span><br><span class="line">来源：北京大学考研机试题</span><br><span class="line">算法标签:</span><br><span class="line">None</span><br></pre></td></tr></table></figure><h3 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h3><p>北京大学对本科生的成绩施行平均学分绩点制（GPA）。</p><p>既将学生的实际考分根据不同的学科的不同学分按一定的公式进行计算。</p><p>公式如下：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">实际成绩     绩点 </span><br><span class="line">90——100     4.0 </span><br><span class="line">85——89      3.7 </span><br><span class="line">82——84      3.3 </span><br><span class="line">78——81      3.0 </span><br><span class="line">75——77      2.7 </span><br><span class="line">72——74      2.3 </span><br><span class="line">68——71      2.0 </span><br><span class="line">64——67      1.5 </span><br><span class="line">60——63      1.0 </span><br><span class="line">60以下        0</span><br></pre></td></tr></table></figure><br>一门课程的学分绩点 = 该课绩点 × 该课学分</p><p>总评绩点 = 所有学科学分绩点之和 / 所有课程学分之和</p><p>现要求你编写程序求出某人 A 的总评绩点（GPA）。</p><p><strong>输入格式</strong><br>第一行，总的课程数 n；</p><p>第二行，相应课程的学分（两个学分间用空格隔开）；</p><p>第三行，对应课程的实际得分；</p><p>此处输入的所有数字均为整数。</p><p><strong>输出格式</strong><br>输出有一行，总评绩点，精确到小数点后 2 位小数。</p><p><strong>数据范围</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1 ≤ n ≤ 10,</span><br><span class="line">学分取值范围 [1,10],</span><br><span class="line">课程得分范围 [0,100]。</span><br></pre></td></tr></table></figure></p><p><strong>输入样例：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">4 3 4 2 3</span><br><span class="line">91 88 72 69 56</span><br></pre></td></tr></table></figure><br><strong>输出样例：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2.52</span><br></pre></td></tr></table></figure></p><h3 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Course</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">float</span> credit;</span><br><span class="line">    <span class="type">float</span> grade;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">float</span> <span class="title">GetPoint</span><span class="params">(<span class="type">float</span> grade)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">double</span> point;</span><br><span class="line">    <span class="keyword">if</span> (grade &gt;= <span class="number">90</span>) &#123;</span><br><span class="line">        point = <span class="number">4.0</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (grade &gt;= <span class="number">85</span>) &#123;</span><br><span class="line">        point = <span class="number">3.7</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (grade &gt;= <span class="number">82</span>) &#123;</span><br><span class="line">        point = <span class="number">3.3</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (grade &gt;= <span class="number">78</span>) &#123;</span><br><span class="line">        point = <span class="number">3.0</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (grade &gt;= <span class="number">75</span>) &#123;</span><br><span class="line">        point = <span class="number">2.7</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (grade &gt;= <span class="number">72</span>) &#123;</span><br><span class="line">        point = <span class="number">2.3</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (grade &gt;= <span class="number">68</span>) &#123;</span><br><span class="line">        point = <span class="number">2.0</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (grade &gt;= <span class="number">64</span>) &#123;</span><br><span class="line">        point = <span class="number">1.5</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (grade &gt;= <span class="number">60</span>) &#123;</span><br><span class="line">        point = <span class="number">1.0</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        point = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> point;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="type">float</span> CreditSum = <span class="number">0</span>;</span><br><span class="line">    <span class="type">float</span> CreditPointSum = <span class="number">0</span>;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    Course *a = <span class="keyword">new</span> Course[n];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">        cin &gt;&gt; a[i].credit;</span><br><span class="line">        CreditSum += a[i].credit;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">        cin &gt;&gt; a[i].grade;</span><br><span class="line">        CreditPointSum += <span class="built_in">GetPoint</span>(a[i].grade) * a[i].credit;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">float</span> GPA = CreditPointSum / CreditSum;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.2f&quot;</span>, GPA);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法练习 </category>
          
          <category> ACWing </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>基于哈夫曼编码实现对文本文件的压缩与解压缩</title>
      <link href="/2022/12/27/%E5%93%88%E5%A4%AB%E6%9B%BC%E7%BC%96%E7%A0%81/"/>
      <url>/2022/12/27/%E5%93%88%E5%A4%AB%E6%9B%BC%E7%BC%96%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<blockquote><p>大一下小学期写的程序，可支持ASCII字符文本文件的压缩与解压缩。</p></blockquote><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><ol><li>扫描待压缩的文件，统计字符出现的频次，构造出哈夫曼树，得到叶子结点的编码。</li><li><p>压缩过程：</p><ul><li>读取原文件字符构建哈夫曼树，遍历哈夫曼树找到对应的叶子结点，将字符转换为哈夫曼编码用string储存；</li><li>将头信息（编码末尾添0的数量、字符及对应频次）写入压缩文件，用于解压时重构哈夫曼树。</li><li>将string储存的二进制码（哈夫曼编码）以八位一组的等长编码转成字符写入压缩文件，得到压缩效果。（最后一组可能不足8位需要添0）</li></ul></li><li><p>解压缩过程</p><ul><li>读取压缩文件的头信息重构哈夫曼树</li><li>将字符按8位等长编码的形式解码，用string储存得到的二进制码（即哈夫曼编码）</li><li>将哈夫曼编码通过哈夫曼树解码成原字符</li><li>将解码出的字符写入解压缩的文件</li></ul></li></ol><h3 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h3><p><strong>Scanner.h</strong><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">//该节点需要链表转哈夫曼树</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Node</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> c;<span class="comment">//该字符</span></span><br><span class="line"><span class="type">int</span> rate;<span class="comment">//该字符出现频次</span></span><br><span class="line">string coding;<span class="comment">//哈夫曼编码</span></span><br><span class="line">Node* Next;<span class="comment">//连接下一个结点</span></span><br><span class="line">Node* parent;<span class="comment">//父指针</span></span><br><span class="line">Node* left;<span class="comment">//左指针</span></span><br><span class="line">Node* right;<span class="comment">//右指针</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Scanner</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">string text;</span><br><span class="line">ifstream in;<span class="comment">//创建流对象 写入文件</span></span><br><span class="line">string filename;<span class="comment">//文件名</span></span><br><span class="line">Node* Character;<span class="comment">//字符根结点</span></span><br><span class="line"><span class="type">int</span> num;<span class="comment">//记录读取的字符数量</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">Scanner</span>() &#123; num = <span class="number">0</span>; &#125;</span><br><span class="line"><span class="comment">//读取文件（字符频率）</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">ReadFile</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;&gt;请输入文件名：&quot;</span>;</span><br><span class="line">cin &gt;&gt; filename;</span><br><span class="line">in.<span class="built_in">open</span>(filename);<span class="comment">//打开文件</span></span><br><span class="line"><span class="keyword">while</span> (!in)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;&gt;读取错误，请检查文件名后重新输入：&quot;</span>;</span><br><span class="line">cin &gt;&gt; filename;</span><br><span class="line">in.<span class="built_in">open</span>(filename);</span><br><span class="line">&#125;</span><br><span class="line">Character = <span class="keyword">new</span> Node;<span class="comment">//字符结点</span></span><br><span class="line">Node* p;</span><br><span class="line">Node* temp_root;<span class="comment">//用于定位</span></span><br><span class="line"><span class="type">char</span> temp;<span class="comment">//暂时储存读入的一个字符</span></span><br><span class="line">p = temp_root = Character;</span><br><span class="line"><span class="comment">//读文件</span></span><br><span class="line"><span class="keyword">while</span> (!in.<span class="built_in">eof</span>()) </span><br><span class="line">&#123;</span><br><span class="line">in.<span class="built_in">read</span>(&amp;temp, <span class="number">1</span>);<span class="comment">//读一个字符存入temp</span></span><br><span class="line"><span class="keyword">if</span> (in.<span class="built_in">eof</span>())</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">num++;</span><br><span class="line"><span class="keyword">if</span> (num == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">Character-&gt;c = temp;</span><br><span class="line">Character-&gt;rate = <span class="number">1</span>;</span><br><span class="line">Character-&gt;Next = Character-&gt;left = Character-&gt;right = Character-&gt;parent = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//相同字符则在IsNew函数中执行rate++</span></span><br><span class="line"><span class="comment">//新字符则进行以下操作</span></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">IsNew</span>(temp))</span><br><span class="line">&#123;</span><br><span class="line">p = <span class="keyword">new</span> Node;</span><br><span class="line">p-&gt;c = temp;</span><br><span class="line">p-&gt;rate = <span class="number">1</span>;</span><br><span class="line">p-&gt;left = p-&gt;right = p-&gt;parent = <span class="literal">NULL</span>;</span><br><span class="line">temp_root-&gt;Next = p;</span><br><span class="line">temp_root = temp_root-&gt;Next;</span><br><span class="line">temp_root-&gt;Next = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">in.<span class="built_in">close</span>();<span class="comment">//关闭文件</span></span><br><span class="line"><span class="built_in">Sort</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;                 文件已读入&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (Node* temp = Character; temp != <span class="literal">NULL</span>; temp = temp-&gt;Next)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//换行 回车</span></span><br><span class="line"><span class="keyword">if</span> (temp-&gt;c == <span class="number">10</span> || temp-&gt;c == <span class="number">13</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;&gt; &quot;</span> &lt;&lt; <span class="string">&quot;\\n &quot;</span>;</span><br><span class="line">cout &lt;&lt; temp-&gt;rate;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//空格</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (temp-&gt;c == <span class="number">32</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;&gt; &quot;</span> &lt;&lt; <span class="string">&quot;__ &quot;</span>;</span><br><span class="line">cout &lt;&lt; temp-&gt;rate;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//Tab</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (temp-&gt;c == <span class="number">9</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;&gt;&quot;</span> &lt;&lt; <span class="string">&quot;Tab &quot;</span>;</span><br><span class="line">cout &lt;&lt; temp-&gt;rate;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;&gt; &quot;</span> &lt;&lt; temp-&gt;c &lt;&lt; <span class="string">&quot;  &quot;</span>;</span><br><span class="line">cout &lt;&lt; temp-&gt;rate;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;字符数:&quot;</span> &lt;&lt; num &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;ps:\&quot;__\&quot;表示空格 \&quot;\\n表示换行or回车\&quot;&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//频率进行选择排序</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Sort</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Node* temp;</span><br><span class="line"><span class="type">int</span> R;<span class="comment">//rate</span></span><br><span class="line"><span class="type">char</span> Ch;<span class="comment">//字符</span></span><br><span class="line"><span class="keyword">for</span> (temp = Character; temp-&gt;Next != <span class="literal">NULL</span>; temp = temp-&gt;Next)</span><br><span class="line">&#123;</span><br><span class="line">Node* temp1 = temp;</span><br><span class="line">Node* temp2 = temp-&gt;Next;</span><br><span class="line"><span class="keyword">while</span> (temp2 != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (temp2-&gt;rate &lt; temp1-&gt;rate)</span><br><span class="line">temp1 = temp2;<span class="comment">//temp1指向当前最小结点</span></span><br><span class="line">temp2 = temp2-&gt;Next;<span class="comment">//temp2找下一个</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//将当前循环得到的最小结点与temp交换</span></span><br><span class="line"><span class="keyword">if</span> (temp1 != temp)</span><br><span class="line">&#123;</span><br><span class="line">Ch = temp1-&gt;c;</span><br><span class="line">R = temp1-&gt;rate;</span><br><span class="line">temp1-&gt;c = temp-&gt;c;</span><br><span class="line">temp-&gt;c = Ch;</span><br><span class="line">temp1-&gt;rate = temp-&gt;rate;</span><br><span class="line">temp-&gt;rate = R;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断该字符是否新出现</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">IsNew</span><span class="params">(<span class="type">char</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Node* temp;</span><br><span class="line"><span class="keyword">for</span> (temp= Character; temp!=<span class="literal">NULL</span>; temp=temp-&gt;Next)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (temp-&gt;c == c)</span><br><span class="line">&#123;</span><br><span class="line">temp-&gt;rate++;<span class="comment">//相同字符则rate++</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p><strong>huffman.h</strong><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;scanner.h&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">HuffmanComress</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Menu</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;1. 选择打开文件并对其进行压缩；&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;2. 选择压缩文件并解压成源文件；&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;3. 退出程序；&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;&gt;请选择操作(序号)：&quot;</span>;</span><br><span class="line"><span class="type">int</span> Select;</span><br><span class="line">cin &gt;&gt; Select;</span><br><span class="line"><span class="keyword">switch</span> (Select)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line"><span class="built_in">ToCompressFile</span>();</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line"><span class="built_in">ToSourceFile</span>();</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;输入错误!&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//--------------压缩源文件-----------------</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">ToCompressFile</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">PreWork</span>();<span class="comment">//准备工作</span></span><br><span class="line"><span class="comment">/*--------------------------</span></span><br><span class="line"><span class="comment">源文件-&gt;哈夫曼编码文件</span></span><br><span class="line"><span class="comment">---------------------------*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;&gt;请输入压缩后文件的文件名：&quot;</span>;</span><br><span class="line">cin &gt;&gt; compressFile;</span><br><span class="line">in.<span class="built_in">open</span>(source, ios::in);</span><br><span class="line">out.<span class="built_in">open</span>(compressFile, ios::binary);</span><br><span class="line"><span class="comment">//读取源文件的字符</span></span><br><span class="line"><span class="keyword">while</span> (!in.<span class="built_in">eof</span>())</span><br><span class="line">&#123;</span><br><span class="line">string s;</span><br><span class="line"><span class="type">char</span> temp;<span class="comment">//存放读取的字符</span></span><br><span class="line">in.<span class="built_in">get</span>(temp);<span class="comment">//每次读一个字符</span></span><br><span class="line"><span class="keyword">if</span> (in.<span class="built_in">eof</span>())</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="built_in">CharToHuffCode</span>(temp, BinTree, s);</span><br><span class="line">out &lt;&lt; s;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//关闭文件</span></span><br><span class="line">out.<span class="built_in">close</span>();</span><br><span class="line">in.<span class="built_in">close</span>();</span><br><span class="line"><span class="comment">/*--------------------------</span></span><br><span class="line"><span class="comment">哈夫曼编码文件-&gt;压缩文件</span></span><br><span class="line"><span class="comment">---------------------------*/</span></span><br><span class="line">in.<span class="built_in">open</span>(compressFile, ios::in);</span><br><span class="line">string s;</span><br><span class="line">in&gt;&gt;s;<span class="comment">//读取哈夫曼编码</span></span><br><span class="line">in.<span class="built_in">close</span>();</span><br><span class="line">out.<span class="built_in">open</span>(compressFile, ios::out);</span><br><span class="line"><span class="comment">//将字符及频率写在压缩文件头部，用于重构哈夫曼树</span></span><br><span class="line"><span class="built_in">SaveHeadInformation</span>();</span><br><span class="line"><span class="comment">//8位一组转为char</span></span><br><span class="line">string s_temp;</span><br><span class="line"><span class="type">int</span> num_i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; s[i] != <span class="string">&#x27;\0&#x27;</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">s_temp += s[i];</span><br><span class="line"><span class="keyword">if</span> ((i+<span class="number">1</span>) % <span class="number">8</span> == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> c;</span><br><span class="line"><span class="built_in">BinaryToChar</span>(s_temp, c);</span><br><span class="line">out &lt;&lt; c;</span><br><span class="line">s_temp = <span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">num_i = i + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//不足8位</span></span><br><span class="line"><span class="keyword">if</span> (num_i % <span class="number">8</span> &gt; <span class="number">0</span>) </span><br><span class="line">&#123;</span><br><span class="line">zeroNum = <span class="number">8</span> - (num_i % <span class="number">8</span>);</span><br><span class="line"><span class="type">char</span> c;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; zeroNum; i++)</span><br><span class="line">&#123;</span><br><span class="line">s_temp.<span class="built_in">push_back</span>(<span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">BinaryToChar</span>(s_temp, c);</span><br><span class="line">out &lt;&lt; c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//将zeroNum保存到文件头部</span></span><br><span class="line">out.<span class="built_in">seekp</span>(<span class="number">0</span>, ios::beg);</span><br><span class="line">out &lt;&lt; zeroNum;</span><br><span class="line">out.<span class="built_in">close</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;                压缩完成。&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//---------------------解压缩----------------------</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">ToSourceFile</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;&gt;请输入需要解压的文件名：&quot;</span>;</span><br><span class="line">cin &gt;&gt;compressFile;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;&gt;请输入解压后的文件名：&quot;</span>;</span><br><span class="line">cin &gt;&gt; decompressFile;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line"><span class="comment">//需解压的文件 ios::binary确保读到文件尾</span></span><br><span class="line">in.<span class="built_in">open</span>(compressFile, ios::binary);</span><br><span class="line"><span class="comment">//解压后的文件</span></span><br><span class="line">out.<span class="built_in">open</span>(decompressFile, ios::out);</span><br><span class="line"><span class="type">char</span> c;<span class="comment">//存放编码对应的字符</span></span><br><span class="line"><span class="type">int</span> flag = <span class="number">0</span>;<span class="comment">//判断是否能找到对应字符</span></span><br><span class="line">string s;<span class="comment">//储存解码出的哈夫曼编码</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t解压中...&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="comment">//---------读取文件头信息 ------------</span></span><br><span class="line"><span class="built_in">ReadHeadInformation</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">/*-----------------------------------</span></span><br><span class="line"><span class="comment"> 将压缩文件解码成哈夫曼编码</span></span><br><span class="line"><span class="comment">-----------------------------------*/</span></span><br><span class="line"><span class="keyword">while</span> (!in.<span class="built_in">eof</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> tempc;</span><br><span class="line"></span><br><span class="line">in.<span class="built_in">get</span>(tempc);</span><br><span class="line"><span class="keyword">if</span> (in.<span class="built_in">eof</span>())</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="type">char</span> end_ch = in.<span class="built_in">peek</span>();<span class="comment">//观测</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  对压缩文件最后一个字符做特殊处理</span></span><br><span class="line"><span class="comment">  之前将huff编码转为字符时 编码不满8位做了添0处理</span></span><br><span class="line"><span class="comment">  现在需要将添加的0删去</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">if</span> (end_ch == EOF)</span><br><span class="line">&#123;</span><br><span class="line">string temps;</span><br><span class="line"><span class="built_in">CharToBinary</span>(tempc, temps);</span><br><span class="line"><span class="comment">//不添加多余的0</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">8</span> - zeroNum; i++)</span><br><span class="line">&#123;</span><br><span class="line">s.<span class="built_in">push_back</span>(temps[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">CharToBinary</span>(tempc, s);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*-----------------------------------</span></span><br><span class="line"><span class="comment"> 将哈夫曼编码进行解码</span></span><br><span class="line"><span class="comment">-----------------------------------*/</span></span><br><span class="line">string temp_s;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; s[i] != <span class="string">&#x27;\0&#x27;</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">temp_s += s[i];</span><br><span class="line"><span class="built_in">FindChar</span>(c, BinTree, temp_s, flag);</span><br><span class="line"><span class="comment">//找到了对应字符</span></span><br><span class="line"><span class="keyword">if</span> (flag)</span><br><span class="line">&#123;</span><br><span class="line">temp_s = <span class="string">&quot;&quot;</span>;</span><br><span class="line">out &lt;&lt; c;</span><br><span class="line">flag = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">out.<span class="built_in">close</span>();</span><br><span class="line">in.<span class="built_in">close</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;                   解压完成。&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">ifstream in;<span class="comment">//创建流对象</span></span><br><span class="line">ofstream out;<span class="comment">//创建流对象</span></span><br><span class="line">string source;<span class="comment">//源文件</span></span><br><span class="line">string compressFile;<span class="comment">//压缩后的文件</span></span><br><span class="line">string decompressFile;<span class="comment">//解压后的文件</span></span><br><span class="line">Node* BinTree;<span class="comment">//根结点 字符链表-&gt;哈夫曼树</span></span><br><span class="line"><span class="type">int</span> charLength = <span class="number">0</span>;<span class="comment">//字符长度</span></span><br><span class="line"><span class="type">int</span> zeroNum = <span class="number">0</span>;<span class="comment">//huff编码补0的个数</span></span><br><span class="line">Scanner scan;</span><br><span class="line"></span><br><span class="line"><span class="comment">//-------------将字符转为哈夫曼编码-------------------</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CharToHuffCode</span><span class="params">(<span class="type">char</span> c, Node* p, string&amp; s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//遍历左右子树直到找到对应叶子</span></span><br><span class="line"><span class="keyword">if</span> (p != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (p-&gt;c == c)</span><br><span class="line">&#123;</span><br><span class="line">s = p-&gt;coding;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">CharToHuffCode</span>(c, p-&gt;left, s);</span><br><span class="line"><span class="built_in">CharToHuffCode</span>(c, p-&gt;right, s);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//-----------将八位二进制码转为字符--------------</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">BinaryToChar</span><span class="params">(string s, <span class="type">char</span>&amp; c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">c = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> m = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">7</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">&#123;</span><br><span class="line">c = (<span class="type">char</span>)(c + (s[i] - <span class="string">&#x27;0&#x27;</span>) * m);</span><br><span class="line">m *= <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//-------------将字符转为二进制码------------------妙啊</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CharToBinary</span><span class="params">(<span class="type">char</span> c, string&amp; s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> k = <span class="number">0x80</span>;<span class="comment">//二进制1000,0000</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++, k &gt;&gt;= <span class="number">1</span>)<span class="comment">//右移后赋值</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (c &amp; k)<span class="comment">//按位与</span></span><br><span class="line">s = s + <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">s = s + <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//----------将扫描文件中排好序的链表复制过来BinTree------------</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Copy</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Node* temp;</span><br><span class="line">BinTree = <span class="keyword">new</span> Node;</span><br><span class="line">Node* p = BinTree;</span><br><span class="line">Node* q;</span><br><span class="line"><span class="keyword">for</span> (temp = scan.Character; temp != <span class="literal">NULL</span>; temp = temp-&gt;Next)</span><br><span class="line">&#123;</span><br><span class="line">q = <span class="keyword">new</span> Node;</span><br><span class="line">q-&gt;c = temp-&gt;c;</span><br><span class="line">q-&gt;rate = temp-&gt;rate;</span><br><span class="line">q-&gt;left = q-&gt;right = q-&gt;parent = q-&gt;Next = <span class="literal">NULL</span>;</span><br><span class="line">p-&gt;Next = q;</span><br><span class="line">p = p-&gt;Next;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//----------将新节点插入BinTree字符结点链表合适位置------------</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">InsertNewNode</span><span class="params">(Node* p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Node* temp;</span><br><span class="line">Node* front = BinTree;</span><br><span class="line"><span class="comment">//当新节点rate最小 插入表头</span></span><br><span class="line"><span class="keyword">if</span> (p-&gt;rate &lt;= front-&gt;rate)</span><br><span class="line">&#123;</span><br><span class="line">p-&gt;Next = BinTree;</span><br><span class="line">BinTree = p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (temp = BinTree-&gt;Next; temp != <span class="literal">NULL</span>; temp = temp-&gt;Next, front = front-&gt;Next)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (p-&gt;rate &lt;= temp-&gt;rate)</span><br><span class="line">&#123;</span><br><span class="line">front-&gt;Next = p;</span><br><span class="line">p-&gt;Next = temp;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//新节点最大</span></span><br><span class="line"><span class="keyword">if</span> (temp == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">front-&gt;Next = p;</span><br><span class="line">p-&gt;Next = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//-------------------创建哈夫曼树----------------------</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CreateHuffmanTree</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Node* p = <span class="literal">NULL</span>;</span><br><span class="line">BinTree = BinTree-&gt;Next;</span><br><span class="line"><span class="keyword">while</span> (BinTree != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//两两一对合并</span></span><br><span class="line">p = <span class="keyword">new</span> Node;</span><br><span class="line">p-&gt;left = BinTree;</span><br><span class="line">BinTree-&gt;coding = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">BinTree-&gt;parent = p;</span><br><span class="line">BinTree = BinTree-&gt;Next;</span><br><span class="line">p-&gt;right = BinTree;</span><br><span class="line">BinTree-&gt;coding = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">BinTree-&gt;parent = p;</span><br><span class="line">p-&gt;rate = p-&gt;left-&gt;rate + p-&gt;right-&gt;rate;</span><br><span class="line">BinTree = BinTree-&gt;Next;</span><br><span class="line"><span class="built_in">InsertNewNode</span>(p);<span class="comment">//将合并的结点插入合适的位置</span></span><br><span class="line"><span class="comment">//只剩下两个节点的时候</span></span><br><span class="line"><span class="keyword">if</span> (BinTree-&gt;Next-&gt;Next == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">p = <span class="keyword">new</span> Node;</span><br><span class="line">p-&gt;left = BinTree;</span><br><span class="line">BinTree-&gt;coding = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">BinTree-&gt;parent = p;</span><br><span class="line">BinTree = BinTree-&gt;Next;</span><br><span class="line">p-&gt;right = BinTree;</span><br><span class="line">BinTree-&gt;coding = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">BinTree-&gt;parent = p;</span><br><span class="line">p-&gt;rate = p-&gt;left-&gt;rate + p-&gt;right-&gt;rate;</span><br><span class="line">BinTree = p;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//----------------完善哈夫曼树叶子结点的编码-----------------</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">GetCode</span><span class="params">(Node* p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (p != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//p不是根结点</span></span><br><span class="line"><span class="keyword">if</span> (p != BinTree)</span><br><span class="line">&#123;</span><br><span class="line">p-&gt;coding = p-&gt;parent-&gt;coding + p-&gt;coding;<span class="comment">//父编码加上自己的编码</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (p-&gt;left == <span class="literal">NULL</span> &amp;&amp; p-&gt;right == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//遍历左右子树</span></span><br><span class="line"><span class="built_in">GetCode</span>(p-&gt;left);</span><br><span class="line"><span class="built_in">GetCode</span>(p-&gt;right);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//------------------------压缩前的准备工作---------------------------</span></span><br><span class="line"><span class="comment">//读取文件 统计频率 将读取的链表信息拷贝至BinTree 创建哈夫曼树(BinTree) 得到哈夫曼编码</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">PreWork</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">scan.<span class="built_in">ReadFile</span>();</span><br><span class="line"><span class="built_in">Copy</span>();</span><br><span class="line">source = scan.filename;</span><br><span class="line">charLength = scan.num;</span><br><span class="line"><span class="comment">//创建哈夫曼树</span></span><br><span class="line"><span class="built_in">CreateHuffmanTree</span>();</span><br><span class="line">BinTree-&gt;coding = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="comment">//Node* temp = BinTree;</span></span><br><span class="line"><span class="comment">//得到哈夫曼树产生的编码</span></span><br><span class="line"><span class="built_in">GetCode</span>(BinTree);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//-------------------保存用于重构哈夫曼树的头信息------------------------</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">SaveHeadInformation</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">out &lt;&lt; <span class="string">&quot;  &quot;</span>;</span><br><span class="line">Node* temp;</span><br><span class="line"><span class="keyword">for</span> (temp = scan.Character; temp != <span class="literal">NULL</span>; temp = temp-&gt;Next)</span><br><span class="line">&#123;</span><br><span class="line">out &lt;&lt; temp-&gt;c &lt;&lt; temp-&gt;rate&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">out &lt;&lt; <span class="string">&quot;\\&quot;</span>;<span class="comment">//头信息结束的标志</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//-------------------读取头信息并重构哈夫曼树------------------------</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">ReadHeadInformation</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">in &gt;&gt; zeroNum;</span><br><span class="line"><span class="type">char</span> pass;</span><br><span class="line">in.<span class="built_in">get</span>(pass);<span class="comment">//消除空格影响</span></span><br><span class="line"><span class="type">char</span> ch;</span><br><span class="line">in.<span class="built_in">get</span>(ch);</span><br><span class="line">BinTree = <span class="keyword">new</span> Node;</span><br><span class="line">Node* temp = BinTree;</span><br><span class="line"><span class="keyword">while</span> (ch!=<span class="string">&#x27;\\&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">Node* q = <span class="keyword">new</span> Node;</span><br><span class="line">q-&gt;c = ch;</span><br><span class="line">in &gt;&gt; q-&gt;rate;</span><br><span class="line">q-&gt;left = q-&gt;right = q-&gt;parent = q-&gt;Next = <span class="literal">NULL</span>;</span><br><span class="line">temp-&gt;Next = q;</span><br><span class="line">temp = temp-&gt;Next;</span><br><span class="line">in.<span class="built_in">get</span>(pass);<span class="comment">//消除空格影响</span></span><br><span class="line">in.<span class="built_in">get</span>(ch);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//创建哈夫曼树</span></span><br><span class="line"><span class="built_in">CreateHuffmanTree</span>();</span><br><span class="line">BinTree-&gt;coding = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="comment">//得到哈夫曼树叶子结点的编码</span></span><br><span class="line"><span class="built_in">GetCode</span>(BinTree);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//------------------在哈夫曼树中找到字符 ？？？---------------------</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">FindChar</span><span class="params">(<span class="type">char</span>&amp; c, Node* p, string s, <span class="type">int</span>&amp; flag)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//字符串为空 表示该字符串已读完</span></span><br><span class="line"><span class="keyword">if</span> (s.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//判断是不是叶子结点</span></span><br><span class="line"><span class="keyword">if</span> ((p-&gt;left == <span class="literal">NULL</span>) &amp;&amp; (p-&gt;right == <span class="literal">NULL</span>))</span><br><span class="line">&#123;</span><br><span class="line">c = p-&gt;c;</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//不是叶子结点 说明这个子串不是对应某个字符的前缀码</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">flag = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (s[<span class="number">0</span>] == <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//删除字符串中的第一个元素 表示该元素已读</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; s.<span class="built_in">size</span>(); i++)</span><br><span class="line">s[i - <span class="number">1</span>] = s[i];</span><br><span class="line">s.<span class="built_in">pop_back</span>();</span><br><span class="line"><span class="comment">//左子树</span></span><br><span class="line"><span class="built_in">FindChar</span>(c, p-&gt;left, s, flag);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span><span class="comment">// s[0]==&#x27;1&#x27;</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//删除字符串中的第一个元素 表示该元素已读</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; s.<span class="built_in">size</span>(); i++)</span><br><span class="line">s[i - <span class="number">1</span>] = s[i];</span><br><span class="line">s.<span class="built_in">pop_back</span>();</span><br><span class="line"><span class="comment">//右子树</span></span><br><span class="line"><span class="built_in">FindChar</span>(c, p-&gt;right, s, flag);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p><strong>main.cpp</strong><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;huffman.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;scanner.h&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">HuffmanComress h;</span><br><span class="line">h.<span class="built_in">Menu</span>();</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 项目练习 </category>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 压缩算法 </tag>
            
            <tag> huffman </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ACWing寒假 4261.孤独的照片</title>
      <link href="/2022/12/26/%5BACWing%E5%AF%92%E5%81%8701%5D%E5%AD%A4%E7%8B%AC%E7%9A%84%E7%85%A7%E7%89%87/"/>
      <url>/2022/12/26/%5BACWing%E5%AF%92%E5%81%8701%5D%E5%AD%A4%E7%8B%AC%E7%9A%84%E7%85%A7%E7%89%87/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">难度：中等</span><br><span class="line">时/空限制：1s / 64MB</span><br><span class="line">总通过数：3070</span><br><span class="line">总尝试数：9311</span><br><span class="line">来源：USACO 2021 December Contest Bronze</span><br><span class="line">算法标签:</span><br><span class="line">枚举 乘法原理</span><br></pre></td></tr></table></figure><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>Farmer John 最近购入了 N 头新的奶牛，每头奶牛的品种是更赛牛（Guernsey）或荷斯坦牛（Holstein）之一。</p><p>奶牛目前排成一排，Farmer John 想要为每个连续不少于三头奶牛的序列拍摄一张照片。</p><p>然而，他不想拍摄这样的照片，其中只有一头牛的品种是更赛牛，或者只有一头牛的品种是荷斯坦牛——他认为这头奇特的牛会感到孤立和不自然。</p><p>在为每个连续不少于三头奶牛的序列拍摄了一张照片后，他把所有「孤独的」照片，即其中只有一头更赛牛或荷斯坦奶牛的照片，都扔掉了。</p><p>给定奶牛的排列方式，请帮助 Farmer John 求出他会扔掉多少张孤独的照片。</p><p>如果两张照片以不同位置的奶牛开始或结束，则认为它们是不同的。</p><p><strong>输入格式</strong><br>输入的第一行包含 N。</p><p>输入的第二行包含一个长为 N 的字符串。如果队伍中的第 i 头奶牛是更赛牛，则字符串的第 i 个字符为 <strong>G</strong>。否则，第 i 头奶牛是荷斯坦牛，该字符为 <strong>H</strong>。</p><p><strong>输出格式</strong><br>输出 Farmer John 会扔掉的孤独的照片数量。</p><p><strong>数据范围</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3≤N≤5×10^5</span><br></pre></td></tr></table></figure><br><strong>输入样例：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">GHGHG</span><br></pre></td></tr></table></figure><br><strong>输出样例：</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><br><strong>样例解释</strong><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">这个例子中的每一个长为 3 的子串均恰好包含一头更赛牛或荷斯坦牛——所以这些子串表示孤独的照片，并会被 Farmer John 扔掉。</span><br><span class="line"></span><br><span class="line">所有更长的子串（GHGH、HGHG 和 GHGHG）都可以被接受。</span><br></pre></td></tr></table></figure></p><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p><strong>暴力解法超时(10e5)：</strong><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">Alone</span><span class="params">(string t)</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> countG = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> countH = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; t.<span class="built_in">length</span>(); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (t[i] == <span class="string">&#x27;G&#x27;</span>)</span><br><span class="line">            countG++;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (t[i] == <span class="string">&#x27;H&#x27;</span>)</span><br><span class="line">            countH++;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (countG &gt;= <span class="number">2</span> &amp;&amp; countH &gt;= <span class="number">2</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ((countG == <span class="number">0</span> &amp;&amp; countH &gt;= <span class="number">2</span>) || (countG &gt;= <span class="number">2</span> &amp;&amp; countH == <span class="number">0</span>))</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    string s;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    cin &gt;&gt; s;</span><br><span class="line">    <span class="type">int</span> len;</span><br><span class="line">    <span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= n<span class="number">-3</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        len = <span class="number">3</span>;</span><br><span class="line">        <span class="keyword">while</span> (i + len - <span class="number">1</span> &lt; n)</span><br><span class="line">        &#123;</span><br><span class="line">            string temp = s.<span class="built_in">substr</span>(i, len);</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">Alone</span>(temp))</span><br><span class="line">                count++;</span><br><span class="line">            len++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; count;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>排列组合解法思路O(n):</strong></p><ul><li>枚举孤独牛出现的位置，假设孤独的牛是G种 </li><li>此时有三种情况：<ol><li>G出现在中间位置，左右两边都是H牛</li><li>G出现在左端点，右边至少两只H牛</li><li>G出现在右端点，左边至少两只H牛<br><img src="https://s1.ax1x.com/2022/12/27/zxjkDI.png" alt=""></li></ol></li><li>如上图，假设G左边有连续L个H牛，右边有连续R个H牛。则<strong>情况1:</strong> G点左侧可以有1~L头H牛，右侧可以有1~R头H牛，共<strong>L*R</strong>种情况；<strong>情况2:</strong> G在左端点，故G右侧即R中要取<strong>2头以上连续的H牛</strong>，故有<strong>R-1</strong>种情况；<strong>情况3</strong>同理<strong>L-1</strong>种情况。</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">500010</span>;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">char</span> str[N];</span><br><span class="line"><span class="type">int</span> l[N], r[N];<span class="comment">//分别表示左边，右边有多少个连续非孤独牛</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    cin &gt;&gt; str;</span><br><span class="line">    <span class="comment">//求l[i]</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>, Hnum = <span class="number">0</span>, Gnum = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (str[i] == <span class="string">&#x27;G&#x27;</span>)&#123;</span><br><span class="line">            l[i] = Hnum;<span class="comment">//h牛的数量</span></span><br><span class="line">            Hnum = <span class="number">0</span>;</span><br><span class="line">            Gnum++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            l[i] = Gnum;<span class="comment">//g牛的数量</span></span><br><span class="line">            Gnum = <span class="number">0</span>;</span><br><span class="line">            Hnum++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//求r[i]</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = n - <span class="number">1</span>, Hnum = <span class="number">0</span>, Gnum = <span class="number">0</span>; i &gt;= <span class="number">0</span>; i--)&#123;</span><br><span class="line">        <span class="keyword">if</span> (str[i] == <span class="string">&#x27;G&#x27;</span>)&#123;</span><br><span class="line">            r[i] = Hnum;<span class="comment">//h牛的数量</span></span><br><span class="line">            Hnum = <span class="number">0</span>;</span><br><span class="line">            Gnum++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            r[i] = Gnum;<span class="comment">//g牛的数量</span></span><br><span class="line">            Gnum = <span class="number">0</span>;</span><br><span class="line">            Hnum++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    LL count = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//遍历孤独牛的位置</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">        <span class="comment">//三种情况</span></span><br><span class="line">        count += (LL)l[i] * r[i] + <span class="built_in">max</span>(l[i] - <span class="number">1</span>, <span class="number">0</span>) + <span class="built_in">max</span>(r[i] - <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; count;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://www.acwing.com/video/4574/">视频讲解</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 算法练习 </category>
          
          <category> ACWing </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 思维 </tag>
            
            <tag> 排列组合 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>八皇后问题回溯法-作业</title>
      <link href="/2022/12/21/8%E7%9A%87%E5%90%8E%E5%9B%9E%E6%BA%AF%E6%B3%95/"/>
      <url>/2022/12/21/8%E7%9A%87%E5%90%8E%E5%9B%9E%E6%BA%AF%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h3 id="回溯算法——八皇后问题"><a href="#回溯算法——八皇后问题" class="headerlink" title="回溯算法——八皇后问题"></a>回溯算法——八皇后问题</h3><h4 id="（1）问题描述"><a href="#（1）问题描述" class="headerlink" title="（1）问题描述"></a>（1）问题描述</h4><p>在8×8格的国际象棋上摆放8个皇后，使其不能互相攻击，即任意两个皇后都不能处于同一行、同一列或同一斜线上，问有多少种摆法。<br><img src="https://s1.ax1x.com/2022/12/24/zvp8A0.png" alt=""></p><h4 id="（2）问题分析"><a href="#（2）问题分析" class="headerlink" title="（2）问题分析"></a>（2）问题分析</h4><p>在解决八皇后问题时，如果采用穷举法，即八层循环遍历，则需要列举8^8种情形，浪费了太多的计算资源在各种无用功上面。<br>8皇后问题可抽象为n皇后问题，即在n×n格的国际象棋上摆放n个皇后，使其不能互相攻击，问有多少种摆法。<br>为了使问题简化，以下以4皇后为例进行分析：</p><p>若4皇后问题采用穷举法，则需要列举4^4种情况。然而，如下图所示，当第一个皇后位于第一列，第二个皇后位于第三列时，第三行的皇后若放置于第一列则与第一个皇后同列冲突，放置于第二、四列则与第二个皇后斜线上冲突，放置于第三列则与第二个皇后同列冲突，故此时第三个皇后无正确放法。此时则无需继续向下一层枚举。处理方法可用回溯法进行优化，即撤销上一行的枚举情况，将第二行的皇后放置第四列继续枚举。<br> <img src="https://s1.ax1x.com/2022/12/24/zvpUc4.png" alt=""></p><h4 id="（3）算法描述"><a href="#（3）算法描述" class="headerlink" title="（3）算法描述"></a>（3）算法描述</h4><p>回溯法介绍：回溯法又称试探法，其处理思想类似于枚举搜索，我们枚举出每一种情况，然后在根据条件进行筛选，找到满足期望的值。回溯算法的基本思想是从一条路往前走，能进则进，不能进则退回，换另一条路进行尝试。<br>利用回溯法解决八皇后问题的步骤如下：</p><ol><li>设一维数组 x[]，下标代表第几行，值代表该行中皇后的位置。设一变量k，代表此时在下第几行；</li><li>设一个判断是否符合条件（不同列，不同对角线）的函数，不符合条件的直接跳过，即缩小解空间；</li><li>利用for循环，将符合条件的可行解放入数组x中，当数组x填满后，此时一种方案结束。</li><li>利用递归实现回溯，直到所有可行方案输出，结束。</li></ol><p><strong>判断当前皇后位置是否符合条件（不同行、列，不同对角线）的方法：</strong><br>程序中设置每行放置一个皇后，故可以保证每个皇后不同行；判断当前行皇后的列位置与之前所有行的皇后列位置是否存在相同，若相同则不符合条件；对角线已知斜率为1或-1，故满足规律：当前行皇后与之前所有行皇后的位置依次进行比较，若二者列之差的绝对值与行之差的绝对值相同，则不符合条件。<br>以下为回溯法解决4皇后问题的部分演示：<br><img src="https://s1.ax1x.com/2022/12/24/zvprAx.png" alt=""></p><h4 id="（4）算法实现"><a href="#（4）算法实现" class="headerlink" title="（4）算法实现"></a>（4）算法实现</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Queen</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        eightQueen(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="type">int</span> []Queen=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">8</span>];</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> count=<span class="number">0</span>;</span><br><span class="line">    <span class="comment">//递归</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">eightQueen</span><span class="params">(<span class="type">int</span> row)</span>&#123; </span><br><span class="line">        <span class="keyword">if</span> (row == <span class="number">8</span>)&#123;<span class="comment">//一组解</span></span><br><span class="line">            count++;</span><br><span class="line">            printQueens(Queen);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">column</span> <span class="operator">=</span> <span class="number">0</span>; column &lt; <span class="number">8</span>; column++) &#123;</span><br><span class="line">           <span class="keyword">if</span> (judge(row,column))&#123;</span><br><span class="line">               Queen[row] = column;</span><br><span class="line">               eightQueen(row+<span class="number">1</span>);</span><br><span class="line">           &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">judge</span><span class="params">(<span class="type">int</span> row, <span class="type">int</span> column)</span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> row-<span class="number">1</span>; i &gt;= <span class="number">0</span>; --i) &#123;</span><br><span class="line">            <span class="keyword">if</span> (Queen[i] == column)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;<span class="comment">//垂直方向是否有皇后</span></span><br><span class="line">            <span class="keyword">if</span> (Math.abs(row - i) == Math.abs(column - Queen[i])) </span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;<span class="comment">//对角线是否有皇后</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printQueens</span><span class="params">(<span class="type">int</span> []Queen)</span>&#123;</span><br><span class="line">    System.out.println(count+<span class="string">&quot;:&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">row</span> <span class="operator">=</span> <span class="number">0</span>; row &lt; <span class="number">8</span>; row++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">column</span> <span class="operator">=</span> <span class="number">0</span>; column &lt; <span class="number">8</span>; column++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (Queen[row] == column) </span><br><span class="line">                System.out.print(<span class="string">&quot; Q &quot;</span>);</span><br><span class="line">                <span class="keyword">else</span> </span><br><span class="line">                System.out.print(<span class="string">&quot; * &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法练习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 回溯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>可视化表达式计算器</title>
      <link href="/2022/12/18/%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%AE%A1%E7%AE%97%E5%99%A8/"/>
      <url>/2022/12/18/%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%AE%A1%E7%AE%97%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<blockquote><p>功能：基本的加减乘除运算，正弦余弦运算，取模运算，指数运算，表达式优先级处理<br>（表达式中可包含负数）</p></blockquote><hr><h2 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h2><p><img src="https://s1.ax1x.com/2022/12/18/zqEcCT.png" alt=""></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="Calculate"><a href="#Calculate" class="headerlink" title="Calculate"></a>Calculate</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.calculator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.math.BigDecimal;</span><br><span class="line"><span class="keyword">import</span> java.util.LinkedList;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Calculate</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">evaluationExpression</span><span class="params">(String expression)</span> &#123;</span><br><span class="line">        <span class="comment">//符号栈</span></span><br><span class="line">        LinkedList&lt;Character&gt; stackOptr = <span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;&gt;();</span><br><span class="line">        <span class="comment">//数字栈</span></span><br><span class="line">        LinkedList&lt;Double&gt; stackOpnd = <span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;&gt;();</span><br><span class="line">        <span class="comment">//标记Optr栈底</span></span><br><span class="line">        stackOptr.addFirst(<span class="string">&#x27;@&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (i &lt; expression.length()) &#123;</span><br><span class="line">            <span class="comment">//数字</span></span><br><span class="line">            <span class="keyword">if</span> ((expression.charAt(i) &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; expression.charAt(i) &lt;= <span class="string">&#x27;9&#x27;</span>) || expression.charAt(i) == <span class="string">&#x27;-&#x27;</span>) &#123;</span><br><span class="line">                <span class="type">boolean</span> <span class="variable">belowZero</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">                <span class="comment">//负数</span></span><br><span class="line">                <span class="keyword">if</span> (expression.charAt(i) == <span class="string">&#x27;-&#x27;</span>) &#123;</span><br><span class="line">                    belowZero = <span class="literal">true</span>;</span><br><span class="line">                    <span class="comment">//在负数前面加上&#x27;+&#x27;</span></span><br><span class="line">                    <span class="keyword">if</span> (i &gt; <span class="number">0</span> &amp;&amp; expression.charAt(i-<span class="number">1</span>) &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; expression.charAt(i-<span class="number">1</span>) &lt;= <span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">                        stackOptr.addFirst(<span class="string">&#x27;+&#x27;</span>);</span><br><span class="line">                    i++;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//完整的数</span></span><br><span class="line">                <span class="type">double</span> number;</span><br><span class="line">                <span class="comment">//整数部分和小数部分</span></span><br><span class="line">                <span class="type">double</span> <span class="variable">integerPart</span> <span class="operator">=</span> <span class="number">0</span>, decimalPart = <span class="number">0</span>;</span><br><span class="line">                <span class="comment">//小数点标记 区分整数和小数部分</span></span><br><span class="line">                <span class="type">boolean</span> <span class="variable">beforeDecimalPoint</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">                <span class="type">int</span> <span class="variable">decimalRank</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">while</span> ((expression.charAt(i) &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; expression.charAt(i) &lt;= <span class="string">&#x27;9&#x27;</span>) || expression.charAt(i) == <span class="string">&#x27;.&#x27;</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="string">&#x27;.&#x27;</span> == expression.charAt(i)) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (beforeDecimalPoint) &#123;</span><br><span class="line">                            beforeDecimalPoint = <span class="literal">false</span>;</span><br><span class="line">                            i++;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (beforeDecimalPoint) &#123;</span><br><span class="line">                        integerPart = integerPart * <span class="number">10</span> + (expression.charAt(i) - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        decimalPart = decimalPart + (<span class="type">double</span>) (expression.charAt(i) - <span class="string">&#x27;0&#x27;</span>) / decimalRank;</span><br><span class="line">                        decimalRank *= <span class="number">10</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    i++;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//整数部分 + 小数部分</span></span><br><span class="line">                number = integerPart + decimalPart;</span><br><span class="line">                <span class="keyword">if</span> (belowZero)</span><br><span class="line">                    number = -number;</span><br><span class="line">                <span class="comment">//进数字栈</span></span><br><span class="line">                stackOpnd.addFirst(number);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//符号</span></span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">//处理符号栈</span></span><br><span class="line">                <span class="keyword">switch</span> (Priority(stackOptr.getFirst(), expression.charAt(i))) &#123;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">&#x27;&lt;&#x27;</span>:</span><br><span class="line">                        stackOptr.addFirst(expression.charAt(i));</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">&#x27;=&#x27;</span>:</span><br><span class="line">                        stackOptr.removeFirst();</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">&#x27;&gt;&#x27;</span>:</span><br><span class="line">                        <span class="comment">//cos</span></span><br><span class="line">                        <span class="keyword">if</span> (<span class="string">&#x27;c&#x27;</span> == stackOptr.getFirst()) &#123;</span><br><span class="line">                            <span class="type">double</span> <span class="variable">a</span> <span class="operator">=</span> stackOpnd.removeFirst();</span><br><span class="line">                            stackOpnd.addFirst(Math.cos(a));</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="comment">//sin</span></span><br><span class="line">                        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&#x27;s&#x27;</span> == stackOptr.getFirst()) &#123;</span><br><span class="line">                            <span class="type">double</span> <span class="variable">a</span> <span class="operator">=</span> stackOpnd.removeFirst();</span><br><span class="line">                            stackOpnd.addFirst(Math.sin(a));</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="comment">//a _ b</span></span><br><span class="line">                        <span class="keyword">else</span> &#123;</span><br><span class="line">                            <span class="type">double</span> <span class="variable">a</span> <span class="operator">=</span> stackOpnd.removeFirst();</span><br><span class="line">                            <span class="type">double</span> <span class="variable">b</span> <span class="operator">=</span> stackOpnd.removeFirst();</span><br><span class="line">                            stackOpnd.addFirst(operate(a, stackOptr.getFirst(), b));</span><br><span class="line">                        &#125;</span><br><span class="line">                        i--;</span><br><span class="line">                        stackOptr.removeFirst();</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (<span class="string">&#x27;s&#x27;</span> == expression.charAt(i) || <span class="string">&#x27;c&#x27;</span> == expression.charAt(i) || <span class="string">&#x27;m&#x27;</span> == expression.charAt(i)) &#123;</span><br><span class="line">                    i += <span class="number">3</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    i++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> String.valueOf(stackOpnd.getFirst());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">char</span> <span class="title function_">Priority</span><span class="params">(<span class="type">char</span> ch1, <span class="type">char</span> ch2)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">0</span>, b = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">switch</span> (ch1) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;+&#x27;</span>:</span><br><span class="line">                a = <span class="number">5</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;*&#x27;</span>:</span><br><span class="line">                a = <span class="number">15</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;/&#x27;</span>:</span><br><span class="line">                a = <span class="number">15</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;m&#x27;</span>:<span class="comment">//mod</span></span><br><span class="line">                a = <span class="number">15</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;(&#x27;</span>:</span><br><span class="line">                a = <span class="number">2</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;)&#x27;</span>:</span><br><span class="line">                a = <span class="number">25</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;^&#x27;</span>:</span><br><span class="line">                a = <span class="number">20</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;s&#x27;</span>:<span class="comment">//sin</span></span><br><span class="line">                a = <span class="number">20</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;c&#x27;</span>:<span class="comment">//cos</span></span><br><span class="line">                a = <span class="number">20</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;@&#x27;</span>:</span><br><span class="line">                a = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line"></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (ch2) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;+&#x27;</span>:</span><br><span class="line">                b = <span class="number">3</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;*&#x27;</span>:</span><br><span class="line">                b = <span class="number">10</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;/&#x27;</span>:</span><br><span class="line">                b = <span class="number">10</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;m&#x27;</span>:<span class="comment">//mod</span></span><br><span class="line">                b = <span class="number">10</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;(&#x27;</span>:</span><br><span class="line">                b = <span class="number">22</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;)&#x27;</span>:</span><br><span class="line">                b = <span class="number">2</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;^&#x27;</span>:</span><br><span class="line">                b = <span class="number">19</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;s&#x27;</span>:</span><br><span class="line">                b = <span class="number">19</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;c&#x27;</span>:</span><br><span class="line">                b = <span class="number">19</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;@&#x27;</span>:</span><br><span class="line">                b = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line"></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (a &gt; b)</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;&gt;&#x27;</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (a == b)</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;=&#x27;</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;&lt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">double</span> <span class="title function_">operate</span><span class="params">(<span class="type">double</span> a, <span class="type">char</span> optr, <span class="type">double</span> b)</span> &#123;</span><br><span class="line">        <span class="comment">//b是先进栈的数</span></span><br><span class="line">        <span class="type">BigDecimal</span> <span class="variable">aa</span> <span class="operator">=</span> BigDecimal.valueOf(a);</span><br><span class="line">        <span class="type">BigDecimal</span> <span class="variable">bb</span> <span class="operator">=</span> BigDecimal.valueOf(b);</span><br><span class="line">        <span class="type">BigDecimal</span> <span class="variable">answer</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (optr) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;+&#x27;</span>:</span><br><span class="line">                answer = bb.add(aa);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;*&#x27;</span>:</span><br><span class="line">                answer = bb.multiply(aa);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;/&#x27;</span>:</span><br><span class="line">                answer = bb.divide(aa);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;m&#x27;</span>:</span><br><span class="line">                <span class="type">double</span> <span class="variable">ans1</span> <span class="operator">=</span> b % a;</span><br><span class="line">                answer = BigDecimal.valueOf(ans1);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;^&#x27;</span>:</span><br><span class="line">                <span class="type">double</span> <span class="variable">ans2</span> <span class="operator">=</span> Math.pow(b, a);</span><br><span class="line">                answer = BigDecimal.valueOf(ans2);</span><br><span class="line">                <span class="comment">//answer = bb.pow(aa.intValue());</span></span><br><span class="line">                <span class="comment">//BigDecimal的pow方法只能计算整数幂</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line"></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(answer);</span><br><span class="line">        <span class="keyword">return</span> answer.doubleValue();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="UI"><a href="#UI" class="headerlink" title="UI"></a>UI</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.calculator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Display</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String[] keys = &#123;</span><br><span class="line">            <span class="string">&quot;AC&quot;</span>, <span class="string">&quot;(&quot;</span>, <span class="string">&quot;)&quot;</span>, <span class="string">&quot;Delete&quot;</span>,</span><br><span class="line">            <span class="string">&quot;sin&quot;</span>, <span class="string">&quot;cos&quot;</span>, <span class="string">&quot;mod&quot;</span>, <span class="string">&quot;+&quot;</span>,</span><br><span class="line">            <span class="string">&quot;7&quot;</span>, <span class="string">&quot;8&quot;</span>, <span class="string">&quot;9&quot;</span>, <span class="string">&quot;-&quot;</span>,</span><br><span class="line">            <span class="string">&quot;4&quot;</span>, <span class="string">&quot;5&quot;</span>, <span class="string">&quot;6&quot;</span>, <span class="string">&quot;*&quot;</span>,</span><br><span class="line">            <span class="string">&quot;1&quot;</span>, <span class="string">&quot;2&quot;</span>, <span class="string">&quot;3&quot;</span>, <span class="string">&quot;/&quot;</span>,</span><br><span class="line">            <span class="string">&quot;.&quot;</span>, <span class="string">&quot;0&quot;</span>, <span class="string">&quot;^&quot;</span>, <span class="string">&quot;=&quot;</span>&#125;;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">JTextField</span> <span class="variable">result</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JTextField</span>();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> JButton[] button = <span class="keyword">new</span> <span class="title class_">JButton</span>[keys.length];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Display</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//初始化Result</span></span><br><span class="line">        result.setText(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">        result.setBackground(<span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">240</span>,<span class="number">243</span>,<span class="number">249</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setResult</span><span class="params">(String str)</span> &#123;</span><br><span class="line">        <span class="comment">//结果</span></span><br><span class="line">        result.setText(str);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> JTextField <span class="title function_">getResult</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">/* get numbers from text box */</span></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> JButton[] getButton() &#123;</span><br><span class="line">        <span class="keyword">return</span> button;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setButton</span><span class="params">(JButton button, <span class="type">int</span> i)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.button[i] = button;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getKey</span><span class="params">(<span class="type">int</span> i)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> keys[i];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">BuildUI</span> <span class="keyword">extends</span> <span class="title class_">JFrame</span> <span class="keyword">implements</span> <span class="title class_">ActionListener</span> &#123;</span><br><span class="line">    <span class="type">Display</span> <span class="variable">dis</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Display</span>();</span><br><span class="line">    String expression;</span><br><span class="line">    <span class="keyword">final</span> <span class="type">Font</span> <span class="variable">resultFont</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Font</span>(<span class="string">&quot;Helvetica&quot;</span>, Font.PLAIN, <span class="number">60</span>);</span><br><span class="line">    <span class="keyword">final</span> <span class="type">Font</span> <span class="variable">buttonFont</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Font</span>(<span class="string">&quot;Helvetica&quot;</span>, Font.PLAIN, <span class="number">30</span>);</span><br><span class="line">    <span class="comment">//ResultBuffer rb = new ResultBuffer();</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">BuildUI</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.setTitle(<span class="string">&quot;表达式计算器&quot;</span>);</span><br><span class="line">        <span class="built_in">this</span>.buildLayout();</span><br><span class="line">        <span class="built_in">this</span>.setSize(<span class="number">600</span>,<span class="number">800</span>);</span><br><span class="line">        <span class="built_in">this</span>.setVisible(<span class="literal">true</span>);</span><br><span class="line">        <span class="built_in">this</span>.setDefaultCloseOperation(<span class="number">3</span>);</span><br><span class="line">        <span class="built_in">this</span>.setLocationRelativeTo(<span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">buildLayout</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">JPanel</span> <span class="variable">calFrame</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JPanel</span>();</span><br><span class="line">        calFrame.setBackground(Color.black);</span><br><span class="line"></span><br><span class="line">        calFrame.setLayout(<span class="keyword">new</span> <span class="title class_">GridLayout</span>(<span class="number">7</span>, <span class="number">1</span>));</span><br><span class="line">        <span class="comment">//添加结果文本框</span></span><br><span class="line">        calFrame.add(dis.getResult());</span><br><span class="line">        dis.getResult().setFont(resultFont);</span><br><span class="line"></span><br><span class="line">        Container[] con = <span class="keyword">new</span> <span class="title class_">Container</span>[<span class="number">6</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; con.length; i++) &#123;</span><br><span class="line">            con[i] = <span class="keyword">new</span> <span class="title class_">Container</span>();</span><br><span class="line">            con[i].setLayout(<span class="keyword">new</span> <span class="title class_">GridLayout</span>(<span class="number">1</span>, <span class="number">4</span>));</span><br><span class="line">            <span class="comment">//添加六行单元格1*4</span></span><br><span class="line">            calFrame.add(con[i]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; dis.getButton().length; i++) &#123;</span><br><span class="line">            <span class="type">JButton</span> <span class="variable">newButton</span> <span class="operator">=</span> setBtnForm(i);</span><br><span class="line"><span class="comment">//                        newButton.setForeground(Color.DARK_GRAY);</span></span><br><span class="line"></span><br><span class="line">            dis.setButton(newButton, i);</span><br><span class="line">            con[i / <span class="number">4</span>].add(newButton);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        getContentPane().add(calFrame);</span><br><span class="line">        expression = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> JButton <span class="title function_">setBtnForm</span><span class="params">(<span class="type">int</span> i)</span> &#123;</span><br><span class="line">        <span class="comment">/* set font, color, shape of the buttom */</span></span><br><span class="line">        <span class="type">JButton</span> <span class="variable">newButton</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JButton</span>(dis.getKey(i));</span><br><span class="line">        newButton.setBorderPainted(<span class="literal">true</span>);</span><br><span class="line">        <span class="keyword">if</span> (i &lt;= <span class="number">7</span>) &#123;</span><br><span class="line">            newButton.setForeground(Color.black);</span><br><span class="line">            newButton.setBackground(<span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">247</span>, <span class="number">249</span>, <span class="number">252</span>));</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (i == <span class="number">23</span>) &#123;</span><br><span class="line">            newButton.setForeground(Color.black);</span><br><span class="line">            newButton.setBackground(<span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">0</span>, <span class="number">103</span>, <span class="number">192</span>));</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> ((i + <span class="number">1</span>) % <span class="number">4</span> == <span class="number">0</span> || i == <span class="number">22</span> || i == <span class="number">20</span>) &#123;</span><br><span class="line">            newButton.setForeground(Color.black);</span><br><span class="line">            newButton.setBackground(<span class="keyword">new</span> <span class="title class_">Color</span>(<span class="number">247</span>, <span class="number">249</span>, <span class="number">252</span>));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            newButton.setForeground(Color.black);</span><br><span class="line">            newButton.setBackground(Color.white);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        newButton.addActionListener(<span class="built_in">this</span>);</span><br><span class="line">        newButton.setFont(buttonFont);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> newButton;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">actionPerformed</span><span class="params">(ActionEvent e)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">action</span> <span class="operator">=</span> e.getActionCommand();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (dis.getKey(<span class="number">0</span>).equals(action)) &#123;</span><br><span class="line">            <span class="comment">/* press AC */</span></span><br><span class="line">            pressAC();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (dis.getKey(<span class="number">3</span>).equals(action)) &#123;</span><br><span class="line">            <span class="comment">/* press Delete */</span></span><br><span class="line">            pressDelete();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (dis.getKey(<span class="number">23</span>).equals(action)) &#123;</span><br><span class="line">            <span class="comment">/* press = */</span></span><br><span class="line">            pressCalculate();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">/* press 1, 2, 3, +, - ...*/</span></span><br><span class="line">            pressExpression(action);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">pressAC</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">/* clear the text box */</span></span><br><span class="line">        expression = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        dis.setResult(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">pressDelete</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">/* delete the last character in the text box */</span></span><br><span class="line">        expression = expression.substring(<span class="number">0</span>, expression.length() - <span class="number">1</span>);</span><br><span class="line">        dis.setResult(expression);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">pressCalculate</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">/* compute */</span></span><br><span class="line">        <span class="type">Calculate</span> <span class="variable">cal</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Calculate</span>();</span><br><span class="line">        <span class="type">String</span> <span class="variable">re</span> <span class="operator">=</span> cal.evaluationExpression(expression + <span class="string">&#x27;@&#x27;</span>);</span><br><span class="line">        dis.setResult(re);</span><br><span class="line">        expression = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">pressExpression</span><span class="params">(String action)</span> &#123;</span><br><span class="line">        <span class="comment">/* input... */</span></span><br><span class="line">        expression += action;</span><br><span class="line">        dis.setResult(expression);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Main"><a href="#Main" class="headerlink" title="Main"></a>Main</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.calculator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.net.MalformedURLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> MalformedURLException &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">BuildUI</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 项目练习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javaSwing </tag>
            
            <tag> 栈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PuzzleGame_4*4华容道</title>
      <link href="/2022/12/17/PuzzleGame/"/>
      <url>/2022/12/17/PuzzleGame/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>功能：</strong><br>切换图片 - 运动 || 动物 || 随机<br>重新游戏<br>计步数<br>长按A查看完整图片<br>W一键通关<br>背景音乐</p></blockquote><h2 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h2><p><img src="https://s1.ax1x.com/2022/12/19/zLZYMF.png" alt=""></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="GameJFrame"><a href="#GameJFrame" class="headerlink" title="GameJFrame"></a>GameJFrame</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> UI;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> javax.swing.border.BevelBorder;</span><br><span class="line"><span class="keyword">import</span> javax.swing.event.ListDataListener;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.KeyEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.KeyListener;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GameJFrame</span> <span class="keyword">extends</span> <span class="title class_">JFrame</span> <span class="keyword">implements</span> <span class="title class_">KeyListener</span>, ActionListener &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> [][]imgNumber = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">4</span>][<span class="number">4</span>];</span><br><span class="line">    <span class="comment">//空槽的位置</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> x;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> y;</span><br><span class="line">    <span class="comment">//图片路径</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">String</span> <span class="variable">path</span> <span class="operator">=</span> <span class="string">&quot;..\\puzzleGame\\image\\animal\\animal9\\&quot;</span>;</span><br><span class="line">    <span class="comment">//计步</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//用于判断win的数组</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> [][]win = &#123;</span><br><span class="line">            &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;,</span><br><span class="line">            &#123;<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>&#125;,</span><br><span class="line">            &#123;<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>&#125;,</span><br><span class="line">            &#123;<span class="number">13</span>,<span class="number">14</span>,<span class="number">15</span>,<span class="number">0</span>&#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//二级菜单条目</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">JMenu</span> <span class="variable">switchImg</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JMenu</span>(<span class="string">&quot;切换图片&quot;</span>);</span><br><span class="line">    <span class="keyword">private</span> <span class="type">JMenuItem</span> <span class="variable">replayItem</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JMenuItem</span>(<span class="string">&quot;重新游戏&quot;</span>);</span><br><span class="line">    <span class="comment">//private JMenuItem reloginItem = new JMenuItem(&quot;重新登录&quot;);</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">JMenuItem</span> <span class="variable">closeItem</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JMenuItem</span>(<span class="string">&quot;关闭游戏&quot;</span>);</span><br><span class="line">    <span class="keyword">private</span> <span class="type">JMenuItem</span> <span class="variable">WechatItem</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JMenuItem</span>(<span class="string">&quot;V我50&quot;</span>);</span><br><span class="line">    <span class="comment">//三级菜单</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">JMenuItem</span> <span class="variable">sport</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JMenuItem</span>(<span class="string">&quot;运动&quot;</span>);</span><br><span class="line">    <span class="keyword">private</span> <span class="type">JMenuItem</span> <span class="variable">animal</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JMenuItem</span>(<span class="string">&quot;动物&quot;</span>);</span><br><span class="line">    <span class="keyword">private</span> <span class="type">JMenuItem</span> <span class="variable">random</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JMenuItem</span>(<span class="string">&quot;随机&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">GameJFrame</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//初始化界面</span></span><br><span class="line">        initJFrame();</span><br><span class="line">        <span class="comment">//初始化菜单</span></span><br><span class="line">        initJMenubar(); </span><br><span class="line">        <span class="comment">//初始化数据</span></span><br><span class="line">        initData();</span><br><span class="line">        <span class="comment">//初始化图片</span></span><br><span class="line">        initImage();</span><br><span class="line">        <span class="comment">//显示窗口</span></span><br><span class="line">        <span class="built_in">this</span>.setVisible(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initData</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//打乱图片索引序列</span></span><br><span class="line">        <span class="type">int</span> []temp = <span class="keyword">new</span> <span class="title class_">int</span> [<span class="number">16</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">16</span>; i++) &#123;</span><br><span class="line">            temp[i] = i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">Random</span> <span class="variable">r</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; temp.length; i++) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> r.nextInt(temp.length);</span><br><span class="line">            <span class="type">int</span> <span class="variable">t</span> <span class="operator">=</span> temp[index];</span><br><span class="line">            temp[index] = temp[i];</span><br><span class="line">            temp[i] = t;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//用temp数组初始化二维数组</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; temp.length; i++) &#123;</span><br><span class="line">            <span class="comment">//空槽</span></span><br><span class="line">            <span class="keyword">if</span> (temp[i] == <span class="number">0</span>) &#123;</span><br><span class="line">                x = i / <span class="number">4</span>;</span><br><span class="line">                y = i % <span class="number">4</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            imgNumber[i / <span class="number">4</span>][i % <span class="number">4</span>] = temp[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initImage</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//清空界面</span></span><br><span class="line">        <span class="built_in">this</span>.getContentPane().removeAll();</span><br><span class="line">        <span class="keyword">if</span> (Victory())&#123;</span><br><span class="line">            <span class="type">JLabel</span> <span class="variable">winPic</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JLabel</span>(<span class="keyword">new</span> <span class="title class_">ImageIcon</span>(<span class="string">&quot;..\\puzzleGame\\image\\win.png&quot;</span>));</span><br><span class="line">            winPic.setBounds(<span class="number">203</span>,<span class="number">283</span>,<span class="number">197</span>,<span class="number">73</span>);</span><br><span class="line">            <span class="built_in">this</span>.getContentPane().add(winPic);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//添加拼图</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; <span class="number">4</span>; j++) &#123;</span><br><span class="line">                <span class="comment">//创建图片ImageIcon对象</span></span><br><span class="line">                <span class="comment">//创建Jlabel对象 管理img</span></span><br><span class="line">                <span class="type">JLabel</span> <span class="variable">partImg</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JLabel</span>(<span class="keyword">new</span> <span class="title class_">ImageIcon</span>(path+imgNumber[i][j]+<span class="string">&quot;.jpg&quot;</span>));</span><br><span class="line">                <span class="comment">//指定img位置</span></span><br><span class="line">                partImg.setBounds(<span class="number">83</span> + <span class="number">105</span> * j,<span class="number">134</span> + <span class="number">105</span> * i,<span class="number">105</span>,<span class="number">105</span>);</span><br><span class="line">                <span class="comment">//小图片边框</span></span><br><span class="line">                partImg.setBorder(<span class="keyword">new</span> <span class="title class_">BevelBorder</span>(BevelBorder.RAISED));</span><br><span class="line">                <span class="comment">//界面添加管理容器</span></span><br><span class="line">                <span class="built_in">this</span>.getContentPane().add(partImg);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//添加背景图片</span></span><br><span class="line">        <span class="type">JLabel</span> <span class="variable">background</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JLabel</span>(<span class="keyword">new</span> <span class="title class_">ImageIcon</span>(<span class="string">&quot;..\\puzzleGame\\image\\background.png&quot;</span>));</span><br><span class="line">        background.setBounds(<span class="number">40</span>,<span class="number">40</span>,<span class="number">508</span>,<span class="number">560</span>);</span><br><span class="line">        <span class="built_in">this</span>.getContentPane().add(background);</span><br><span class="line">        <span class="comment">//添加计步器</span></span><br><span class="line">        <span class="type">JLabel</span> <span class="variable">stepCount</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JLabel</span>(<span class="string">&quot;步数：&quot;</span>+count);</span><br><span class="line">        stepCount.setBounds(<span class="number">50</span>,<span class="number">20</span>,<span class="number">100</span>,<span class="number">30</span>);</span><br><span class="line">        <span class="built_in">this</span>.getContentPane().add(stepCount);</span><br><span class="line">        <span class="comment">//设置提示</span></span><br><span class="line">        <span class="type">JLabel</span> <span class="variable">helpL</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JLabel</span>(<span class="string">&quot;方向键控制游戏&quot;</span>);</span><br><span class="line">        helpL.setBounds(<span class="number">120</span>,<span class="number">20</span>,<span class="number">100</span>,<span class="number">30</span>);</span><br><span class="line">        <span class="built_in">this</span>.getContentPane().add(helpL);</span><br><span class="line">        <span class="type">JLabel</span> <span class="variable">helpR</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JLabel</span>(<span class="string">&quot;A：查看完整图片     W：一键通关&quot;</span>);</span><br><span class="line">        helpR.setBounds(<span class="number">355</span>,<span class="number">20</span>,<span class="number">300</span>,<span class="number">30</span>);</span><br><span class="line">        <span class="built_in">this</span>.getContentPane().add(helpR);</span><br><span class="line">        <span class="comment">//刷新界面</span></span><br><span class="line">        <span class="built_in">this</span>.getContentPane().repaint();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initJMenubar</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">JMenuBar</span> <span class="variable">menubar</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JMenuBar</span>();</span><br><span class="line">        <span class="comment">//一级菜单</span></span><br><span class="line">        <span class="type">JMenu</span> <span class="variable">functionMenu</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JMenu</span>(<span class="string">&quot;功能&quot;</span>);</span><br><span class="line">        <span class="type">JMenu</span> <span class="variable">aboutMenu</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JMenu</span>(<span class="string">&quot;关于我们&quot;</span>);</span><br><span class="line">        menubar.add(functionMenu);</span><br><span class="line">        menubar.add(aboutMenu);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//添加组件</span></span><br><span class="line">        functionMenu.add(switchImg);</span><br><span class="line">        functionMenu.add(replayItem);</span><br><span class="line">        <span class="comment">//functionMenu.add(reloginItem);</span></span><br><span class="line">        functionMenu.add(closeItem);</span><br><span class="line">        switchImg.add(sport);</span><br><span class="line">        switchImg.add(animal);</span><br><span class="line">        switchImg.add(random);</span><br><span class="line">        aboutMenu.add(WechatItem);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//添加动作监听</span></span><br><span class="line">        sport.addActionListener(<span class="built_in">this</span>);</span><br><span class="line">        animal.addActionListener(<span class="built_in">this</span>);</span><br><span class="line">        random.addActionListener(<span class="built_in">this</span>);</span><br><span class="line">        WechatItem.addActionListener(<span class="built_in">this</span>);</span><br><span class="line">        replayItem.addActionListener(<span class="built_in">this</span>);</span><br><span class="line">        closeItem.addActionListener(<span class="built_in">this</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//给界面设置菜单</span></span><br><span class="line">        <span class="built_in">this</span>.setJMenuBar(menubar);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initJFrame</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//set界面大小</span></span><br><span class="line">        <span class="built_in">this</span>.setSize(<span class="number">603</span>,<span class="number">680</span>);</span><br><span class="line">        <span class="comment">//set界面标题</span></span><br><span class="line">        <span class="built_in">this</span>.setTitle(<span class="string">&quot;lrx的拼图小游戏&quot;</span>);</span><br><span class="line">        <span class="comment">//居中</span></span><br><span class="line">        <span class="built_in">this</span>.setLocationRelativeTo(<span class="literal">null</span>);</span><br><span class="line">        <span class="comment">//界面置顶</span></span><br><span class="line">        <span class="built_in">this</span>.setAlwaysOnTop(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">//set关闭游戏方式</span></span><br><span class="line">        <span class="built_in">this</span>.setDefaultCloseOperation(<span class="number">3</span>);</span><br><span class="line">        <span class="comment">//取消默认的居中放置图片</span></span><br><span class="line">        <span class="built_in">this</span>.setLayout(<span class="literal">null</span>);</span><br><span class="line">        <span class="comment">//给整个界面添加键盘监听事件</span></span><br><span class="line">        <span class="built_in">this</span>.addKeyListener(<span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">keyTyped</span><span class="params">(KeyEvent e)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">keyPressed</span><span class="params">(KeyEvent e)</span> &#123;</span><br><span class="line">        <span class="comment">//判断游戏是否胜利</span></span><br><span class="line">        <span class="keyword">if</span> (Victory())</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        <span class="comment">//a: 65</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">code</span> <span class="operator">=</span> e.getKeyCode();</span><br><span class="line">        <span class="keyword">if</span> (code == <span class="number">65</span>)&#123;</span><br><span class="line">            <span class="comment">//清空界面</span></span><br><span class="line">            <span class="built_in">this</span>.getContentPane().removeAll();</span><br><span class="line">            <span class="comment">//加载完整图片</span></span><br><span class="line">            <span class="type">JLabel</span> <span class="variable">all</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JLabel</span>(<span class="keyword">new</span> <span class="title class_">ImageIcon</span>(path+<span class="string">&quot;all.jpg&quot;</span>));</span><br><span class="line">            all.setBounds(<span class="number">83</span>,<span class="number">134</span>,<span class="number">420</span>,<span class="number">420</span>);</span><br><span class="line">            <span class="comment">//添加容器</span></span><br><span class="line">            <span class="built_in">this</span>.getContentPane().add(all);</span><br><span class="line">            <span class="comment">//加载背景图片</span></span><br><span class="line">            <span class="type">JLabel</span> <span class="variable">background</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JLabel</span>(<span class="keyword">new</span> <span class="title class_">ImageIcon</span>(<span class="string">&quot;..\\puzzleGame\\image\\background.png&quot;</span>));</span><br><span class="line">            background.setBounds(<span class="number">40</span>,<span class="number">40</span>,<span class="number">508</span>,<span class="number">560</span>);</span><br><span class="line">            <span class="built_in">this</span>.getContentPane().add(background);</span><br><span class="line">            <span class="comment">//刷新界面</span></span><br><span class="line">            <span class="built_in">this</span>.getContentPane().repaint();</span><br><span class="line">            System.out.println(<span class="string">&quot;查看完整图片&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">keyReleased</span><span class="params">(KeyEvent e)</span> &#123;</span><br><span class="line">        <span class="comment">//判断游戏是否胜利</span></span><br><span class="line">        <span class="keyword">if</span> (Victory())</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        <span class="comment">//左：37 上：38 右：39 下：40 a: 65 w: 87</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">code</span> <span class="operator">=</span> e.getKeyCode();</span><br><span class="line">        <span class="keyword">if</span> (code == <span class="number">37</span>)&#123;</span><br><span class="line">            imgNumber[x][y] = imgNumber[x][y+<span class="number">1</span>];</span><br><span class="line">            imgNumber[x][y+<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">            y++;<span class="comment">//更新空槽坐标</span></span><br><span class="line">            count++;</span><br><span class="line">            System.out.println(<span class="string">&quot;向左移动 step：&quot;</span>+count);</span><br><span class="line">            initImage();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (code == <span class="number">38</span>)&#123;</span><br><span class="line">            imgNumber[x][y] = imgNumber[x+<span class="number">1</span>][y];</span><br><span class="line">            imgNumber[x+<span class="number">1</span>][y] = <span class="number">0</span>;</span><br><span class="line">            x++;<span class="comment">//更新空槽坐标</span></span><br><span class="line">            count++;</span><br><span class="line">            System.out.println(<span class="string">&quot;向上移动 step：&quot;</span>+count);</span><br><span class="line">            initImage();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (code == <span class="number">39</span>)&#123;</span><br><span class="line">            imgNumber[x][y] = imgNumber[x][y-<span class="number">1</span>];</span><br><span class="line">            imgNumber[x][y-<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">            y--;<span class="comment">//更新空槽坐标</span></span><br><span class="line">            count++;</span><br><span class="line">            System.out.println(<span class="string">&quot;向右移动 step：&quot;</span>+count);</span><br><span class="line">            initImage();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (code == <span class="number">40</span>)&#123;</span><br><span class="line">            imgNumber[x][y] = imgNumber[x-<span class="number">1</span>][y];</span><br><span class="line">            imgNumber[x-<span class="number">1</span>][y] = <span class="number">0</span>;</span><br><span class="line">            x--;<span class="comment">//更新空槽坐标</span></span><br><span class="line">            count++;</span><br><span class="line">            System.out.println(<span class="string">&quot;向下移动 step：&quot;</span>+count);</span><br><span class="line">            initImage();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (code == <span class="number">65</span>)&#123;</span><br><span class="line">            initImage();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (code == <span class="number">87</span>)&#123;</span><br><span class="line">            imgNumber = <span class="keyword">new</span> <span class="title class_">int</span>[][]&#123;</span><br><span class="line">                    &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;,</span><br><span class="line">                    &#123;<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>&#125;,</span><br><span class="line">                    &#123;<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>&#125;,</span><br><span class="line">                    &#123;<span class="number">13</span>,<span class="number">14</span>,<span class="number">15</span>,<span class="number">0</span>&#125;</span><br><span class="line">            &#125;;</span><br><span class="line">            initImage();</span><br><span class="line">            System.out.println(<span class="string">&quot;一键通关&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//判断获胜</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">Victory</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; imgNumber.length; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; imgNumber.length; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (imgNumber[i][j] != win[i][j])</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">actionPerformed</span><span class="params">(ActionEvent e)</span> &#123;</span><br><span class="line">        <span class="type">JMenuItem</span> <span class="variable">item</span> <span class="operator">=</span> (JMenuItem) e.getSource();</span><br><span class="line">        <span class="type">Random</span> <span class="variable">r</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (item == replayItem)&#123;</span><br><span class="line">            count = <span class="number">0</span>;<span class="comment">//计步器清0</span></span><br><span class="line">            initData();</span><br><span class="line">            initImage();</span><br><span class="line">            System.out.println(<span class="string">&quot;重新游戏&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (item == WechatItem) &#123;</span><br><span class="line">            <span class="comment">//清空界面</span></span><br><span class="line">            <span class="built_in">this</span>.getContentPane().removeAll();</span><br><span class="line">            <span class="comment">//加载完整图片</span></span><br><span class="line">            <span class="type">JLabel</span> <span class="variable">about</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JLabel</span>(<span class="keyword">new</span> <span class="title class_">ImageIcon</span>(<span class="string">&quot;..\\puzzleGame\\image\\about.jpg&quot;</span>));</span><br><span class="line">            about.setBounds(<span class="number">83</span>,<span class="number">134</span>,<span class="number">420</span>,<span class="number">420</span>);</span><br><span class="line">            <span class="comment">//添加容器</span></span><br><span class="line">            <span class="built_in">this</span>.getContentPane().add(about);</span><br><span class="line">            <span class="comment">//加载背景图片</span></span><br><span class="line">            <span class="type">JLabel</span> <span class="variable">background</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JLabel</span>(<span class="keyword">new</span> <span class="title class_">ImageIcon</span>(<span class="string">&quot;..\\puzzleGame\\image\\background.png&quot;</span>));</span><br><span class="line">            background.setBounds(<span class="number">40</span>,<span class="number">40</span>,<span class="number">508</span>,<span class="number">560</span>);</span><br><span class="line">            <span class="built_in">this</span>.getContentPane().add(background);</span><br><span class="line">            <span class="comment">//刷新界面</span></span><br><span class="line">            <span class="built_in">this</span>.getContentPane().repaint();</span><br><span class="line">            System.out.println(<span class="string">&quot;v我50&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (item == closeItem)&#123;</span><br><span class="line">            System.exit(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//判断胜利则不执行</span></span><br><span class="line">        <span class="keyword">if</span> (Victory())</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">if</span> (item == sport)&#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> r.nextInt(<span class="number">10</span>) + <span class="number">1</span>;</span><br><span class="line">            path = <span class="string">&quot;..\\puzzleGame\\image\\sport\\sport&quot;</span>+index+<span class="string">&quot;\\&quot;</span>;</span><br><span class="line">            count = <span class="number">0</span>;<span class="comment">//计步器清0</span></span><br><span class="line">            initImage();</span><br><span class="line">            System.out.println(<span class="string">&quot;随机运动&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (item == animal)&#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> r.nextInt(<span class="number">9</span>) + <span class="number">1</span>;</span><br><span class="line">            path = <span class="string">&quot;..\\puzzleGame\\image\\animal\\animal&quot;</span>+index+<span class="string">&quot;\\&quot;</span>;</span><br><span class="line">            count = <span class="number">0</span>;<span class="comment">//计步器清0</span></span><br><span class="line">            initImage();</span><br><span class="line">            System.out.println(<span class="string">&quot;随机动物&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (item == random)&#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">choice</span> <span class="operator">=</span> r.nextInt(<span class="number">2</span>);</span><br><span class="line">            <span class="comment">//随机到beauty</span></span><br><span class="line">            <span class="keyword">if</span> (choice == <span class="number">0</span>)&#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> r.nextInt(<span class="number">10</span>) + <span class="number">1</span>;</span><br><span class="line">                path = <span class="string">&quot;..\\puzzleGame\\image\\sport\\sport&quot;</span>+index+<span class="string">&quot;\\&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//随机到animal</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (choice == <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> r.nextInt(<span class="number">9</span>) + <span class="number">1</span>;</span><br><span class="line">                path = <span class="string">&quot;..\\puzzleGame\\image\\animal\\animal&quot;</span>+index+<span class="string">&quot;\\&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            count = <span class="number">0</span>;</span><br><span class="line">            initImage();</span><br><span class="line">            System.out.println(<span class="string">&quot;随机任意图片&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Music"><a href="#Music" class="headerlink" title="Music"></a>Music</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//copy的背景音乐类</span></span><br><span class="line"><span class="keyword">package</span> UI;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sound.sampled.AudioFormat;</span><br><span class="line"><span class="keyword">import</span> javax.sound.sampled.AudioInputStream;</span><br><span class="line"><span class="keyword">import</span> javax.sound.sampled.AudioSystem;</span><br><span class="line"><span class="keyword">import</span> javax.sound.sampled.DataLine;</span><br><span class="line"><span class="keyword">import</span> javax.sound.sampled.FloatControl;</span><br><span class="line"><span class="keyword">import</span> javax.sound.sampled.LineUnavailableException;</span><br><span class="line"><span class="keyword">import</span> javax.sound.sampled.SourceDataLine;</span><br><span class="line"><span class="keyword">import</span> javax.sound.sampled.UnsupportedAudioFileException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Music</span> <span class="keyword">extends</span> <span class="title class_">Thread</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String fileName;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">EXTERNAL_BUFFER_SIZE</span> <span class="operator">=</span> <span class="number">524288</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Music</span><span class="params">(String wavFile)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.fileName = wavFile;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@SuppressWarnings(&quot;unused&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">File</span> <span class="variable">soundFile</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(fileName); <span class="comment">// 播放音乐的文件名</span></span><br><span class="line">        <span class="keyword">if</span> (!soundFile.exists()) &#123;</span><br><span class="line">            System.err.println(<span class="string">&quot;Wave file not found:&quot;</span> + fileName);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123; <span class="comment">// 设置循环播放</span></span><br><span class="line">            <span class="type">AudioInputStream</span> <span class="variable">audioInputStream</span> <span class="operator">=</span> <span class="literal">null</span>; <span class="comment">// 创建音频输入流对象</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                audioInputStream = AudioSystem.getAudioInputStream(soundFile); <span class="comment">// 创建音频对象</span></span><br><span class="line">            &#125; <span class="keyword">catch</span> (UnsupportedAudioFileException e1) &#123;</span><br><span class="line">                e1.printStackTrace();</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e1) &#123;</span><br><span class="line">                e1.printStackTrace();</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">AudioFormat</span> <span class="variable">format</span> <span class="operator">=</span> audioInputStream.getFormat(); <span class="comment">// 音频格式</span></span><br><span class="line">            <span class="type">SourceDataLine</span> <span class="variable">auline</span> <span class="operator">=</span> <span class="literal">null</span>; <span class="comment">// 源数据线</span></span><br><span class="line">            DataLine.<span class="type">Info</span> <span class="variable">info</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DataLine</span>.Info(SourceDataLine.class, format);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                auline = (SourceDataLine) AudioSystem.getLine(info);</span><br><span class="line">                auline.open(format);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (LineUnavailableException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (auline.isControlSupported(FloatControl.Type.PAN)) &#123;</span><br><span class="line">                <span class="type">FloatControl</span> <span class="variable">pan</span> <span class="operator">=</span> (FloatControl) auline.getControl(FloatControl.Type.PAN);</span><br><span class="line">            &#125;</span><br><span class="line">            auline.start();</span><br><span class="line">            <span class="type">int</span> <span class="variable">nBytesRead</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="type">byte</span>[] abData = <span class="keyword">new</span> <span class="title class_">byte</span>[EXTERNAL_BUFFER_SIZE];</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">while</span> (nBytesRead != -<span class="number">1</span>) &#123;</span><br><span class="line">                    nBytesRead = audioInputStream.read(abData, <span class="number">0</span>, abData.length);</span><br><span class="line">                    <span class="keyword">if</span> (nBytesRead &gt;= <span class="number">0</span>)</span><br><span class="line">                        auline.write(abData, <span class="number">0</span>, nBytesRead);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                auline.drain();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Main"><a href="#Main" class="headerlink" title="Main"></a>Main</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> UI.GameJFrame;</span><br><span class="line"><span class="keyword">import</span> UI.Music;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">App</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Music</span> <span class="variable">playWave</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Music</span>(<span class="string">&quot;bgm.wav&quot;</span>);</span><br><span class="line">        playWave.start();</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">GameJFrame</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 项目练习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javaSwing </tag>
            
            <tag> 小游戏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaWebCrawler</title>
      <link href="/2022/12/13/JavaWebCrawler/"/>
      <url>/2022/12/13/JavaWebCrawler/</url>
      
        <content type="html"><![CDATA[<h2 id="实验名称：统计英文网页中各单词出现的次数"><a href="#实验名称：统计英文网页中各单词出现的次数" class="headerlink" title="实验名称：统计英文网页中各单词出现的次数"></a>实验名称：统计英文网页中各单词出现的次数</h2><h3 id="实验内容："><a href="#实验内容：" class="headerlink" title="实验内容："></a>实验内容：</h3><p>对于某个给定的英文网页，编写一个处理程序统计该网页中每个单词出现的次数</p><h3 id="要求："><a href="#要求：" class="headerlink" title="要求："></a>要求：</h3><ul><li>输入一个英文网页地址，下载该网页的内容；</li><li>提取该网页中的文本内容；</li><li>统计文本内容中各单词出现的频次，并按降序排列。</li></ul><h3 id="思路："><a href="#思路：" class="headerlink" title="思路："></a>思路：</h3><ul><li>下载该网页的HTML源码并保存至index.html</li><li>利用Jsoup解析HTML，提取出文本内容，并将文本写入text.txt文件</li><li>读取文本内容至str字符串，通过split方法分割str字符串并得到words字符串数组，利用hashmap容器对字符串数组进行单词频次统计，最后将map中的元素放入list集合中进行降序排序</li></ul><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> webCrawler.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.BufferedWriter;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.io.FileReader;</span><br><span class="line"><span class="keyword">import</span> java.io.FileWriter;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.Comparator;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Map.Entry;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">import</span> org.jsoup.Jsoup;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ReadFromURL</span> &#123;</span><br><span class="line"><span class="comment">//读入html代码并保存至index.html文件</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">crawler</span><span class="params">(String URLSting)</span> &#123;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">java.net.<span class="type">URL</span> <span class="variable">url</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">java</span>.net.URL(URLSting);</span><br><span class="line"><span class="type">Scanner</span> <span class="variable">input</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(url.openStream());</span><br><span class="line"><span class="type">BufferedWriter</span> <span class="variable">writer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedWriter</span>(<span class="keyword">new</span> <span class="title class_">FileWriter</span>(<span class="string">&quot;index.html&quot;</span>));</span><br><span class="line"><span class="keyword">while</span> (input.hasNext()) &#123;</span><br><span class="line"><span class="type">String</span> <span class="variable">line</span> <span class="operator">=</span> input.nextLine();</span><br><span class="line">writer.write(line);</span><br><span class="line">writer.newLine();</span><br><span class="line">&#125;</span><br><span class="line">input.close();</span><br><span class="line">writer.close();</span><br><span class="line">System.out.println(<span class="string">&quot;index.html保存成功&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span>(java.net.MalformedURLException e)&#123;</span><br><span class="line">System.err.println(<span class="string">&quot;URL Error: &quot;</span> + e.getMessage());</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">System.err.println(<span class="string">&quot;IO Error：&quot;</span>+ e.getMessage());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//提取html中的文本内容 并保存至text.txt文件</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">toText</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="type">String</span> <span class="variable">text</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="type">FileWriter</span> <span class="variable">filewriter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileWriter</span>(<span class="string">&quot;text.txt&quot;</span>);</span><br><span class="line"><span class="type">BufferedWriter</span> <span class="variable">writer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedWriter</span>(filewriter);</span><br><span class="line">text = Jsoup.parse(<span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;index.html&quot;</span>)).text();</span><br><span class="line">writer.write(text);</span><br><span class="line">writer.close();</span><br><span class="line">System.out.println(<span class="string">&quot;text.txt保存成功&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//统计文本内容</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">wordsStatistics</span><span class="params">()</span> &#123;</span><br><span class="line">Map&lt;String,Integer&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, Integer&gt;();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="type">BufferedReader</span> <span class="variable">reader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">FileReader</span>(<span class="string">&quot;text.txt&quot;</span>));</span><br><span class="line"><span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> reader.readLine();</span><br><span class="line">reader.close();</span><br><span class="line"><span class="comment">//分割字符串</span></span><br><span class="line">String[] words = str.split(<span class="string">&quot;\\s+&quot;</span>);</span><br><span class="line">System.out.println(words.length + <span class="string">&quot; words&quot;</span>);</span><br><span class="line"><span class="comment">//统计单词</span></span><br><span class="line"><span class="keyword">for</span> (String s : words) &#123;</span><br><span class="line"><span class="keyword">if</span> (!map.containsKey(s)) &#123;</span><br><span class="line">map.put(s, <span class="number">1</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">map.put(s, map.get(s)+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//将map的entryset放入list集合</span></span><br><span class="line">List&lt;Map.Entry&lt;String,Integer&gt;&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;(map.entrySet()); </span><br><span class="line"><span class="comment">//对list进行排序，并通过Comparator传入自定义的排序规则</span></span><br><span class="line">Collections.sort(list,<span class="keyword">new</span> <span class="title class_">Comparator</span>&lt;Map.Entry&lt;String, Integer&gt;&gt;() &#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">compare</span><span class="params">(Entry&lt;String, Integer&gt; o1, Entry&lt;String, Integer&gt; o2)</span> &#123;</span><br><span class="line"><span class="keyword">return</span> o2.getValue() - o1.getValue(); <span class="comment">//重写排序规则</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//遍历list</span></span><br><span class="line"><span class="keyword">for</span> (Map.Entry&lt;String,Integer&gt; entry : list) &#123;</span><br><span class="line">System.out.println(entry);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">System.out.println(<span class="string">&quot;Enter a URL: &quot;</span>);</span><br><span class="line"><span class="type">String</span> <span class="variable">URL</span> <span class="operator">=</span> scanner.next();</span><br><span class="line">scanner.close();</span><br><span class="line">crawler(URL);</span><br><span class="line">toText();</span><br><span class="line">wordsStatistics();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 项目练习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Jsoup </tag>
            
            <tag> webCrawler </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2022/12/4蓝桥杯模拟赛</title>
      <link href="/2022/12/04/%E8%93%9D%E6%A1%A5%E6%9D%AF%E7%BB%83%E4%B9%A0%E8%B5%9B20221204/"/>
      <url>/2022/12/04/%E8%93%9D%E6%A1%A5%E6%9D%AF%E7%BB%83%E4%B9%A0%E8%B5%9B20221204/</url>
      
        <content type="html"><![CDATA[<h3 id="1"><a href="#1" class="headerlink" title="#1"></a>#1</h3><p><strong>问题描述</strong><br>　　请找到一个大于 2022 的最小数，这个数转换成二进制之后，最低的 6 个二进制为全为 0 。<br>　　请将这个数的十进制形式作为答案提交。<br><strong>答案提交</strong><br>　　这是一道结果填空的题，你只需要算出结果后提交即可。本题的结果为一个整数，在提交答案时只填写这个整数，填写多余的内容将无法得分。</p><blockquote><p>答案：2048（用计算器程序员模式）</p></blockquote><h3 id="2"><a href="#2" class="headerlink" title="#2"></a>#2</h3><p><strong>问题描述</strong><br>　　我们计从 1949 年 10 月 1 日至 1949 年 10 月 2 日为经过了 1 天。<br>　　请问从 1949 年 10 月 1 日至 2022 年 1 月 1 日经过了多少天？<br><strong>答案提交</strong><br>　　这是一道结果填空的题，你只需要算出结果后提交即可。本题的结果为一个整数，在提交答案时只填写这个整数，填写多余的内容将无法得分。</p><blockquote><p>26390（用Excel很方便计算）</p></blockquote><h3 id="3"><a href="#3" class="headerlink" title="#3"></a>#3</h3><p><strong>问题描述</strong><br>　　8518 是一个非常特殊的数，如果把这个数看成 16 进制数，它的值为 (8518)16=8<em>16</em>16<em>16+5</em>16<em>16+1</em>16+8=34072，而 34072 正好是 8518 的整数倍。<br>　　9558 也是这样一个数，当看成 16 进制时是 38232。<br>　　其实长度为 1 的数 0 到 9 都满足看成 16 进制后是自己的整数倍（1倍）。<br>　　请问，除开长度为 1 的数，最小的满足这样条件的数是多少？<br><strong>答案提交</strong><br>　　这是一道结果填空的题，你只需要算出结果后提交即可。本题的结果为一个整数，在提交答案时只填写这个整数，填写多余的内容将无法得分。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">f</span><span class="params">(<span class="type">int</span> num)</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> temp;</span><br><span class="line">    <span class="type">int</span> p = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (num)</span><br><span class="line">    &#123;</span><br><span class="line">        temp = num % <span class="number">10</span>;</span><br><span class="line">        num /= <span class="number">10</span>;</span><br><span class="line">        ans += temp * <span class="built_in">pow</span>(<span class="number">16</span>, p);</span><br><span class="line">        p++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">10</span>; ; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> t = <span class="built_in">f</span>(i);</span><br><span class="line">        <span class="keyword">if</span> (t % i == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; i;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>1038</p></blockquote><h3 id="4"><a href="#4" class="headerlink" title="#4"></a>#4</h3><p><strong>问题描述</strong><br>　　小蓝有一个 30 行 60 列的数字矩阵，矩阵中的每个数都是 0 到 9 之间的数字。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">174094882455171152761423221685761892795431233411387427793198</span><br><span class="line">650286024865090061389344606618496378829135984076361542097372</span><br><span class="line">601657541200146071777733599818266038012509478351201640618984</span><br><span class="line">143988087783837107349651099683484992553337438088068198972282</span><br><span class="line">890781586124258626539246182119762952003918195325258677229419</span><br><span class="line">698255491250839396799769357665825441616335532825361862146291</span><br><span class="line">503649293440596342887581257444442930778730382520372975343211</span><br><span class="line">325351222640703400531067500454956482168314849207060705673849</span><br><span class="line">265774579830223671554026061117300483012903885770893074783710</span><br><span class="line">083450145620356667677191627276513995926532444279237315785832</span><br><span class="line">411595106453089134746365281031552217482363035280722591085079</span><br><span class="line">053410485925413958279617719034175332412908745680774313630190</span><br><span class="line">429314820559328748143552689295945058801322270313370955837837</span><br><span class="line">939182801848609300876356583948397645861551964542532682663945</span><br><span class="line">625356614462682551015176002433628234343684739800880514363921</span><br><span class="line">982340231989891351425389287014819359798014755509282450440511</span><br><span class="line">590838726938103384801541373585690893606978941566666714061214</span><br><span class="line">952341523168827712604946036245881214982452998386986623826275</span><br><span class="line">782780208928205527678781609589000725521486468983551558405472</span><br><span class="line">149903035076783644195574734088152324666290493119955560594634</span><br><span class="line">905391288186024902215444250421277955403412298227858394469856</span><br><span class="line">607272647132163832860126054679347881638761723785858733108109</span><br><span class="line">249157334220127702410373959720286708183036202841837581704881</span><br><span class="line">367895556630088230650972282944827258473951902831431040790814</span><br><span class="line">079538232104075905120989173307660289899942087873076421916033</span><br><span class="line">622143260549608274076012938515668898707915863945382394851328</span><br><span class="line">164677964192631597026176253407553188801750590935427267220117</span><br><span class="line">591817866992665840378311257621611574856498432538327068011953</span><br><span class="line">631534031790352912617015229051836886166704989498756486878095</span><br><span class="line">690013558017746707412183571476823027885971347137127534455141</span><br></pre></td></tr></table></figure><br>　　现在小蓝想从这个矩阵的第一行第一列画一条折线到第 30 行 60 列，线只能沿水平向右走或竖直向下走，只能在有数字的地方拐弯。小蓝想知道，这样一条线经过的数字的和最大是多少。<br><strong>答案提交</strong><br>　　这是一道结果填空的题，你只需要算出结果后提交即可。本题的结果为一个整数，在提交答案时只填写这个整数，填写多余的内容将无法得分。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//dfs</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> direct[<span class="number">2</span>][<span class="number">2</span>] = &#123; &#123;<span class="number">0</span>, <span class="number">1</span>&#125;, &#123;<span class="number">1</span>, <span class="number">0</span>&#125; &#125;;<span class="comment">//向右 向下</span></span><br><span class="line"><span class="type">int</span> a[<span class="number">35</span>][<span class="number">65</span>];</span><br><span class="line"><span class="type">int</span> map[<span class="number">35</span>][<span class="number">65</span>];</span><br><span class="line"><span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">string s;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> row, <span class="type">int</span> col, <span class="type">int</span> tempAns)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (row == <span class="number">29</span> &amp;&amp; col == <span class="number">59</span>)</span><br><span class="line">&#123;</span><br><span class="line">ans = <span class="built_in">max</span>(ans, tempAns);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> new_row = row + direct[i][<span class="number">0</span>];</span><br><span class="line"><span class="type">int</span> new_col = col + direct[i][<span class="number">1</span>];</span><br><span class="line"><span class="keyword">if</span> (new_row &gt;= <span class="number">0</span> &amp;&amp; new_row &lt; <span class="number">30</span> &amp;&amp; new_col &gt;= <span class="number">0</span> &amp;&amp; new_col &lt; <span class="number">60</span>)</span><br><span class="line">&#123;</span><br><span class="line">tempAns += a[new_row][new_col];</span><br><span class="line"><span class="built_in">dfs</span>(new_row, new_col, tempAns);</span><br><span class="line"><span class="comment">//回溯</span></span><br><span class="line">tempAns -= a[new_row][new_col];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">30</span>; i++) &#123;</span><br><span class="line"><span class="type">int</span> p = <span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; s;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">60</span>; j++)</span><br><span class="line">a[i][j] = s[p++] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">dfs</span>(<span class="number">0</span>, <span class="number">0</span>, a[<span class="number">0</span>][<span class="number">0</span>]);</span><br><span class="line">cout &lt;&lt; ans;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>没跑出来…</p></blockquote><h3 id="5"><a href="#5" class="headerlink" title="#5"></a>#5</h3><p><strong>问题描述</strong><br>　　将 2022 拆分成不同的质数的和，请问最多拆分成几个？<br><strong>答案提交</strong><br>　　这是一道结果填空的题，你只需要算出结果后提交即可。本题的结果为一个整数，在提交答案时只填写这个整数，填写多余的内容将无法得分。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//思路：从小到大累加质数直到超过2022 同时打印累加的质数</span></span><br><span class="line"><span class="comment">//算出累加结果与2022的差，减去部分质数去抵消差</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; a;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">initA</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    a.<span class="built_in">push_back</span>(<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> num = <span class="number">3</span>; num &lt;= <span class="number">2022</span>; num += <span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= <span class="built_in">sqrt</span>(num); i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (num % i == <span class="number">0</span>) &#123;</span><br><span class="line">                flag = <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (flag)</span><br><span class="line">            a.<span class="built_in">push_back</span>(num);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">initA</span>();</span><br><span class="line">    <span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; sum &lt;= <span class="number">2022</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; a[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        sum += a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; sum &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;sum - 2022 = &quot;</span> &lt;&lt; sum - <span class="number">2022</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; i;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">运行结果：</span><br><span class="line">2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 101 103 107 109 113 127 131 137 139</span><br><span class="line">2127</span><br><span class="line">sum - 2022 = 105</span><br><span class="line">34</span><br></pre></td></tr></table></figure></p><blockquote><p>显然105仅由一个质数无法组成，而105=2+103 刚好能通过两个质数抵消sum与2022的差 故答案为34-2=<strong>32</strong></p></blockquote><h3 id="6"><a href="#6" class="headerlink" title="#6"></a>#6</h3><p><strong>问题描述</strong><br>　　小蓝正在拷贝一份文件，他现在已经拷贝了 t 秒时间，已经拷贝了 c 字节，文件总共有 s 字节，如果拷贝是匀速进行的，请问小蓝大概还需要拷贝多少秒？<br>输入格式<br>　　输入一行包含三个整数 t, c, s，相邻两个整数之间用一个空格分隔。<br>输出格式<br>　　输出一个整数，表示答案。数据保证答案正好是整数。<br>样例输入<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3 10 20</span><br></pre></td></tr></table></figure><br>样例输出<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><br>样例输入<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">30 14 21</span><br></pre></td></tr></table></figure><br>样例输出<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">15</span><br></pre></td></tr></table></figure><br>评测用例规模与约定<br>　　对于 50% 的评测用例，1 &lt;= t, c, s &lt;= 10000。<br>　　对于所有评测用例，1 &lt;= t, c, s &lt;= 1000000000</p><blockquote><p>略</p></blockquote><h3 id="7"><a href="#7" class="headerlink" title="#7"></a>#7</h3><p><strong>问题描述</strong><br>　　小蓝有 n 个单词，但是单词中有一些是重复的，请帮小蓝去除重复的单词。<br>输入格式<br>　　输入第一行包含一个正整数 n ，表示小蓝的单词数量。<br>　　接下来 n 行，每行包含一个由小写字母组成的单词。<br>输出格式<br>　　请输出去除重复后的那些单词。如果一个单词出现了多遍，请保留第一次出现的单词，去除之后出现的单词，按输入的顺序输出。<br>样例输入<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">lanqiao</span><br><span class="line">hi</span><br><span class="line">hello</span><br><span class="line">hello</span><br><span class="line">lanqiao</span><br></pre></td></tr></table></figure><br>样例输出<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">lanqiao</span><br><span class="line">hi</span><br><span class="line">hello</span><br></pre></td></tr></table></figure><br>评测用例规模与约定<br>　　对于所有评测用例，1 &lt;= n &lt;= 100，每个单词的长度不超过 100。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">vector&lt;string&gt; a;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">while</span> (n--)</span><br><span class="line">    &#123;</span><br><span class="line">        string s;</span><br><span class="line">        <span class="type">bool</span> flag = <span class="literal">true</span>;<span class="comment">//未重复</span></span><br><span class="line">        cin &gt;&gt; s;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> temp : a)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (temp == s)&#123;</span><br><span class="line">                flag = <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (flag)</span><br><span class="line">        &#123;</span><br><span class="line">            a.<span class="built_in">push_back</span>(s);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> t : a)</span><br><span class="line">        cout &lt;&lt; t &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="8"><a href="#8" class="headerlink" title="#8"></a>#8</h3><p><strong>问题描述</strong><br>　　一个字符串如果从左向右读和从右向左读相同，则称为一个回文串，例如 lanqiaoaiqnal 是一个回文串。<br>　　小蓝有一个字符串，请将这个字符串右边加上一些字符，使其成为一个回文串。<br>　　如果有多种方案，请输出最短的回文串。<br>输入格式<br>　　输入一行包含一个字符串，由小写英文字母组成。<br>输出格式<br>　　输出一行包含答案。<br>样例输入<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lanqiao</span><br></pre></td></tr></table></figure><br>样例输出<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lanqiaoaiqnal</span><br></pre></td></tr></table></figure><br>样例输入<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">banana</span><br></pre></td></tr></table></figure><br>样例输出<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bananab</span><br></pre></td></tr></table></figure><br>样例输入<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">noon</span><br></pre></td></tr></table></figure><br>样例输出<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">noon</span><br></pre></td></tr></table></figure><br>评测用例规模与约定<br>　　对于所有评测用例，1 &lt;= 字符串长度 &lt;= 100。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(string s)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; s.<span class="built_in">size</span>()/<span class="number">2</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (s[i] != s[s.<span class="built_in">size</span>()<span class="number">-1</span>-i])</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string s;</span><br><span class="line">    cin &gt;&gt; s;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">check</span>(s))</span><br><span class="line">        cout &lt;&lt; s;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="comment">//截止字符</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; s.<span class="built_in">size</span>(); i++)</span><br><span class="line">        &#123;</span><br><span class="line">            string temps = s;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = i; j &gt;= <span class="number">0</span>; j--)</span><br><span class="line">                temps.<span class="built_in">push_back</span>(s[j]);</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">check</span>(temps))</span><br><span class="line">            &#123;</span><br><span class="line">                cout &lt;&lt; temps;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="8-1"><a href="#8-1" class="headerlink" title="#8"></a>#8</h3><p><strong>问题描述</strong><br>　　给定一个字母矩阵。一个 X 图形由中心点和由中心点向四个45度斜线方向引出的直线段组成，四条线段的长度相同，而且四条线段上的字母和中心点的字母相同。<br>　　一个 X图形可以使用三个整数 r, c, L 来描述，其中 r, c 表示中心点位于第 r 行第 c 列，正整数 L 表示引出的直线段的长度。 对于 1 到 L 之间的每个整数 i，X图形满足：第 r-i 行第 c-i 列与第 r 行第 c 列相同，第 r-i 行第 c+i 列与第 r 行第 c 列相同，第 r+i 行第 c-i 列与第 r 行第 c 列相同，第 r+i 行第 c+i 列与第 r 行第 c 列相同。<br>　　例如，对于下面的字母矩阵中，所有的字母 L 组成一个 X图形，其中中间的 5 个 L 也组成一个 X图形。所有字母 Q 组成了一个 X图形。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">LAAALA</span><br><span class="line">ALQLQA</span><br><span class="line">AALQAA</span><br><span class="line">ALQLQA</span><br><span class="line">LAAALA</span><br></pre></td></tr></table></figure><br>　　给定一个字母矩阵，请求其中有多少个 X图形。<br>输入格式<br>　　输入第一行包含两个整数 n, m，分别表示字母矩阵的行数和列数。<br>　　接下来 n 行，每行 m 个大写字母，为给定的矩阵。<br>输出格式<br>　　输出一行，包含一个整数，表示答案。<br>样例输入<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">5 6</span><br><span class="line">LAAALA</span><br><span class="line">ALQLQA</span><br><span class="line">AALQAA</span><br><span class="line">ALQLQA</span><br><span class="line">LAAALA</span><br></pre></td></tr></table></figure></p><p>样例输出<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure></p><p>评测用例规模与约定<br>　　对于 50% 的评测用例，1 &lt;= n, m &lt;= 10。<br>　　对于所有评测用例，1 &lt;= n, m &lt;= 100。</p><h3 id="10"><a href="#10" class="headerlink" title="#10"></a>#10</h3><p><strong>问题描述</strong><br>　　小蓝有一个序列 a[1], a[2], …, a[n]，每次可以交换相邻的两个元素，代价为两个元素中较大的那个。<br>　　请问，要通过交换将序列变为从小到大递增的序列，总代价最少为多少？<br>输入格式<br>　　输入一行包含一个整数 n ，表示序列长度。<br>　　第二行包含 n 个整数，表示给定的序列。<br>输出格式<br>　　输出一行包含一个整数，表示最少代价的值。<br>样例输入<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">1 5 2 1</span><br></pre></td></tr></table></figure><br>样例输出<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">12</span><br></pre></td></tr></table></figure><br>评测用例规模与约定<br>　　对于 30% 的评测用例，1 &lt;= n &lt;= 1000, 1 &lt;= a[i] &lt;= 1000。<br>　　对于 60% 的评测用例，1 &lt;= n &lt;= 50000, 1 &lt;= a[i] &lt;= 50000。<br>　　对于所有评测用例，1 &lt;= n &lt;= 1000000, 1 &lt;= a[i] &lt;= 1000000。</p>]]></content>
      
      
      <categories>
          
          <category> 算法练习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> dfs </tag>
            
            <tag> 进制转换 </tag>
            
            <tag> 贪心 </tag>
            
            <tag> 字符串 </tag>
            
            <tag> 逆序对 </tag>
            
            <tag> 树状数组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>221第十四周SQL练习题</title>
      <link href="/2022/12/02/221%E7%AC%AC%E5%8D%81%E5%9B%9B%E5%91%A8%E7%BB%83%E4%B9%A0%E9%A2%98/"/>
      <url>/2022/12/02/221%E7%AC%AC%E5%8D%81%E5%9B%9B%E5%91%A8%E7%BB%83%E4%B9%A0%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h2 id="习题一"><a href="#习题一" class="headerlink" title="习题一"></a>习题一</h2><p>设有一个 SPJ 数据库，包括 S、P、J、SPJ4 个关系模式：</p><blockquote><p>S ( SNO, SNAME, STATUS, CITY );<br>P ( PNO, PNAME, COLOR, WEIGHT );<br>J ( JNO, JNAME, CITY );<br>SPJ ( SNO, PNO, JNO, QTY );</p></blockquote><ul><li>供应商表 S 由供应商代码（SNO）、供应商姓名（SNAME）、供应商状态（STATUS）、供应商所在城市（CITY）组成。</li><li>零件表 P 由零件代码（PNO）、零件名（PNAME）、颜色（COLOR）、重量（WEIGHT）组成。</li><li>工程项目表 J 由工程项目代码（JNO）、工程项目名（JNAME）、工程项目所在城市（CITY）组成。</li><li>供应情况表 SPJ 由供应商代码（SNO）、零件代码（PNO）、工程项目代码（JNO）、供应数量（QTY）组成，表示某供应商供应某种零件给某工程项目的数量为 QTY。</li></ul><p>今有若干数据如下：<br><img src="https://s1.ax1x.com/2022/11/30/zw7hTJ.png" alt=""></p><p>建表：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*建立S表*/</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> S(</span><br><span class="line">SNO <span class="type">CHAR</span>(<span class="number">9</span>) <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">SNAME <span class="type">CHAR</span>(<span class="number">24</span>) <span class="keyword">UNIQUE</span>,</span><br><span class="line">STATUS <span class="type">INT</span>(<span class="number">4</span>),</span><br><span class="line">CITY <span class="type">CHAR</span>(<span class="number">16</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*P表*/</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> P(</span><br><span class="line">PNO <span class="type">CHAR</span>(<span class="number">9</span>) <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">PNAME <span class="type">CHAR</span>(<span class="number">24</span>),</span><br><span class="line">COLOR <span class="type">CHAR</span>(<span class="number">8</span>),</span><br><span class="line">WEIGHT <span class="type">INT</span>(<span class="number">4</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*J表*/</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> J(</span><br><span class="line">JNO <span class="type">CHAR</span>(<span class="number">9</span>) <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">JNAME <span class="type">CHAR</span>(<span class="number">24</span>),</span><br><span class="line">CITY <span class="type">CHAR</span>(<span class="number">16</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*spj表*/</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> SPJ(</span><br><span class="line">SNO <span class="type">CHAR</span>(<span class="number">9</span>),</span><br><span class="line">PNO <span class="type">CHAR</span>(<span class="number">9</span>),</span><br><span class="line">JNO <span class="type">CHAR</span>(<span class="number">9</span>),</span><br><span class="line">QTY <span class="type">INT</span>(<span class="number">6</span>),</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY(SNO,PNO,JNO),</span><br><span class="line"><span class="keyword">FOREIGN</span> KEY(SNO) <span class="keyword">REFERENCES</span> S(SNO),</span><br><span class="line"><span class="keyword">FOREIGN</span> KEY(PNO) <span class="keyword">REFERENCES</span> P(PNO),</span><br><span class="line"><span class="keyword">FOREIGN</span> KEY(JNO) <span class="keyword">REFERENCES</span> J(JNO)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*S表添加数据*/</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> S <span class="keyword">VALUES</span>(<span class="string">&#x27;S1&#x27;</span>,<span class="string">&#x27;精益&#x27;</span>,<span class="number">20</span>,<span class="string">&#x27;天津&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> S <span class="keyword">VALUES</span>(<span class="string">&#x27;S2&#x27;</span>,<span class="string">&#x27;盛锡&#x27;</span>,<span class="number">10</span>,<span class="string">&#x27;北京&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> S <span class="keyword">VALUES</span>(<span class="string">&#x27;S3&#x27;</span>,<span class="string">&#x27;东方红&#x27;</span>,<span class="number">30</span>,<span class="string">&#x27;北京&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> S <span class="keyword">VALUES</span>(<span class="string">&#x27;S4&#x27;</span>,<span class="string">&#x27;丰泰盛&#x27;</span>,<span class="number">20</span>,<span class="string">&#x27;天津&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> S <span class="keyword">VALUES</span>(<span class="string">&#x27;S5&#x27;</span>,<span class="string">&#x27;为民&#x27;</span>,<span class="number">30</span>,<span class="string">&#x27;上海&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*P表添加数据*/</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> P <span class="keyword">VALUES</span>(<span class="string">&#x27;P1&#x27;</span>,<span class="string">&#x27;螺母&#x27;</span>,<span class="string">&#x27;红&#x27;</span>,<span class="number">12</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> P <span class="keyword">VALUES</span>(<span class="string">&#x27;P2&#x27;</span>,<span class="string">&#x27;螺栓&#x27;</span>,<span class="string">&#x27;绿&#x27;</span>,<span class="number">17</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> P <span class="keyword">VALUES</span>(<span class="string">&#x27;P3&#x27;</span>,<span class="string">&#x27;螺丝刀&#x27;</span>,<span class="string">&#x27;蓝&#x27;</span>,<span class="number">14</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> P <span class="keyword">VALUES</span>(<span class="string">&#x27;P4&#x27;</span>,<span class="string">&#x27;螺丝刀&#x27;</span>,<span class="string">&#x27;红&#x27;</span>,<span class="number">14</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> P <span class="keyword">VALUES</span>(<span class="string">&#x27;P5&#x27;</span>,<span class="string">&#x27;凸轮&#x27;</span>,<span class="string">&#x27;蓝&#x27;</span>,<span class="number">40</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> P <span class="keyword">VALUES</span>(<span class="string">&#x27;P6&#x27;</span>,<span class="string">&#x27;齿轮&#x27;</span>,<span class="string">&#x27;红&#x27;</span>,<span class="number">30</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*J表添加数据*/</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> J <span class="keyword">VALUES</span>(<span class="string">&#x27;J1&#x27;</span>,<span class="string">&#x27;三建&#x27;</span>,<span class="string">&#x27;北京&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> J <span class="keyword">VALUES</span>(<span class="string">&#x27;J2&#x27;</span>,<span class="string">&#x27;一汽&#x27;</span>,<span class="string">&#x27;长春&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> J <span class="keyword">VALUES</span>(<span class="string">&#x27;J3&#x27;</span>,<span class="string">&#x27;弹簧厂&#x27;</span>,<span class="string">&#x27;天津&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> J <span class="keyword">VALUES</span>(<span class="string">&#x27;J4&#x27;</span>,<span class="string">&#x27;造船厂&#x27;</span>,<span class="string">&#x27;天津&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> J <span class="keyword">VALUES</span>(<span class="string">&#x27;J5&#x27;</span>,<span class="string">&#x27;机车厂&#x27;</span>,<span class="string">&#x27;唐山&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> J <span class="keyword">VALUES</span>(<span class="string">&#x27;J6&#x27;</span>,<span class="string">&#x27;无线电厂&#x27;</span>,<span class="string">&#x27;常州&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> J <span class="keyword">VALUES</span>(<span class="string">&#x27;J7&#x27;</span>,<span class="string">&#x27;半导体厂&#x27;</span>,<span class="string">&#x27;南京&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*SPJ表添加数据*/</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> SPJ <span class="keyword">VALUES</span>(<span class="string">&#x27;S1&#x27;</span>, <span class="string">&#x27;P1&#x27;</span>, <span class="string">&#x27;J1&#x27;</span>,<span class="number">200</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> SPJ <span class="keyword">VALUES</span>(<span class="string">&#x27;S1&#x27;</span>, <span class="string">&#x27;P1&#x27;</span>, <span class="string">&#x27;J3&#x27;</span>,<span class="number">100</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> SPJ <span class="keyword">VALUES</span>(<span class="string">&#x27;S1&#x27;</span>, <span class="string">&#x27;P1&#x27;</span>, <span class="string">&#x27;J4&#x27;</span>,<span class="number">700</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> SPJ <span class="keyword">VALUES</span>(<span class="string">&#x27;S1&#x27;</span>, <span class="string">&#x27;P2&#x27;</span>, <span class="string">&#x27;J4&#x27;</span>,<span class="number">700</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> SPJ <span class="keyword">VALUES</span>(<span class="string">&#x27;S1&#x27;</span>, <span class="string">&#x27;P2&#x27;</span>, <span class="string">&#x27;J2&#x27;</span>,<span class="number">100</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> SPJ <span class="keyword">VALUES</span>(<span class="string">&#x27;S2&#x27;</span>, <span class="string">&#x27;P3&#x27;</span>, <span class="string">&#x27;J1&#x27;</span>,<span class="number">400</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> SPJ <span class="keyword">VALUES</span>(<span class="string">&#x27;S2&#x27;</span>, <span class="string">&#x27;P3&#x27;</span>, <span class="string">&#x27;J2&#x27;</span>,<span class="number">200</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> SPJ <span class="keyword">VALUES</span>(<span class="string">&#x27;S2&#x27;</span>, <span class="string">&#x27;P3&#x27;</span>, <span class="string">&#x27;J4&#x27;</span>,<span class="number">500</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> SPJ <span class="keyword">VALUES</span>(<span class="string">&#x27;S2&#x27;</span>, <span class="string">&#x27;P3&#x27;</span>, <span class="string">&#x27;J5&#x27;</span>,<span class="number">400</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> SPJ <span class="keyword">VALUES</span>(<span class="string">&#x27;S2&#x27;</span>, <span class="string">&#x27;P5&#x27;</span>, <span class="string">&#x27;J1&#x27;</span>,<span class="number">400</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> SPJ <span class="keyword">VALUES</span>(<span class="string">&#x27;S2&#x27;</span>, <span class="string">&#x27;P5&#x27;</span>, <span class="string">&#x27;J2&#x27;</span>,<span class="number">100</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> SPJ <span class="keyword">VALUES</span>(<span class="string">&#x27;S3&#x27;</span>, <span class="string">&#x27;P1&#x27;</span>, <span class="string">&#x27;J1&#x27;</span>,<span class="number">200</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> SPJ <span class="keyword">VALUES</span>(<span class="string">&#x27;S3&#x27;</span>, <span class="string">&#x27;P3&#x27;</span>, <span class="string">&#x27;J1&#x27;</span>,<span class="number">200</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> SPJ <span class="keyword">VALUES</span>(<span class="string">&#x27;S4&#x27;</span>, <span class="string">&#x27;P5&#x27;</span>, <span class="string">&#x27;J1&#x27;</span>,<span class="number">100</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> SPJ <span class="keyword">VALUES</span>(<span class="string">&#x27;S4&#x27;</span>, <span class="string">&#x27;P6&#x27;</span>, <span class="string">&#x27;J3&#x27;</span>,<span class="number">300</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> SPJ <span class="keyword">VALUES</span>(<span class="string">&#x27;S4&#x27;</span>, <span class="string">&#x27;P6&#x27;</span>, <span class="string">&#x27;J4&#x27;</span>,<span class="number">200</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> SPJ <span class="keyword">VALUES</span>(<span class="string">&#x27;S5&#x27;</span>, <span class="string">&#x27;P2&#x27;</span>, <span class="string">&#x27;J4&#x27;</span>,<span class="number">100</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> SPJ <span class="keyword">VALUES</span>(<span class="string">&#x27;S5&#x27;</span>, <span class="string">&#x27;P3&#x27;</span>, <span class="string">&#x27;J1&#x27;</span>,<span class="number">200</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> SPJ <span class="keyword">VALUES</span>(<span class="string">&#x27;S5&#x27;</span>, <span class="string">&#x27;P6&#x27;</span>, <span class="string">&#x27;J2&#x27;</span>,<span class="number">200</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> SPJ <span class="keyword">VALUES</span>(<span class="string">&#x27;S5&#x27;</span>, <span class="string">&#x27;P6&#x27;</span>, <span class="string">&#x27;J4&#x27;</span>,<span class="number">500</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> SPJ <span class="keyword">VALUES</span>(<span class="string">&#x27;S1&#x27;</span>, <span class="string">&#x27;P2&#x27;</span>, <span class="string">&#x27;J4&#x27;</span>,<span class="number">700</span>);</span><br></pre></td></tr></table></figure><p>试用SQL语句写出如下查询：</p><ol><li>求供应工程J1零件的供应商号码SNO。</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> SNO </span><br><span class="line"><span class="keyword">FROM</span> SPJ</span><br><span class="line"><span class="keyword">WHERE</span> JNO <span class="operator">=</span> <span class="string">&#x27;J1&#x27;</span>;</span><br></pre></td></tr></table></figure><ol><li>求供应工程J1零件P1的供应商号码SNO。</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> SNO </span><br><span class="line"><span class="keyword">FROM</span> SPJ</span><br><span class="line"><span class="keyword">WHERE</span> JNO <span class="operator">=</span> <span class="string">&#x27;J1&#x27;</span> <span class="keyword">AND</span> PNO <span class="operator">=</span> <span class="string">&#x27;P1&#x27;</span>;</span><br></pre></td></tr></table></figure><ol><li>求供应工程J1零件为红色的供应商号码SNO。</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*写法1：*/</span></span><br><span class="line"><span class="keyword">SELECT</span> SNO</span><br><span class="line"><span class="keyword">FROM</span>(</span><br><span class="line"><span class="keyword">SELECT</span> PNO </span><br><span class="line"><span class="keyword">FROM</span> P</span><br><span class="line"><span class="keyword">WHERE</span> COLOR <span class="operator">=</span> <span class="string">&#x27;红&#x27;</span></span><br><span class="line">) t1,(</span><br><span class="line"><span class="keyword">SELECT</span> SNO, PNO</span><br><span class="line"><span class="keyword">FROM</span> SPJ</span><br><span class="line"><span class="keyword">WHERE</span> JNO <span class="operator">=</span> <span class="string">&#x27;J1&#x27;</span></span><br><span class="line">) t2</span><br><span class="line"><span class="keyword">WHERE</span> t1.PNO <span class="operator">=</span> t2.PNO;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*写法2：*/</span></span><br><span class="line"><span class="keyword">SELECT</span> SNO</span><br><span class="line"><span class="keyword">FROM</span> SPJ,P</span><br><span class="line"><span class="keyword">WHERE</span> JNO<span class="operator">=</span><span class="string">&#x27;J1&#x27;</span> <span class="keyword">AND</span> P.COLOR<span class="operator">=</span><span class="string">&#x27;红&#x27;</span> <span class="keyword">AND</span> SPJ.PNO<span class="operator">=</span>P.PNO;</span><br></pre></td></tr></table></figure><blockquote><p>思考：1.在网上看到很多这样的文章，在进行多表查询的时候，<strong>用小表或者交叉表做基础表，放在后面</strong>，大表放在from后面的位置，因为<strong>表的访问顺序是从右往左的</strong>，这样查询效率更高。（mysql sql优化器会对sql的表的连接顺序做一定的优化） 2.<strong>WHERE</strong>后面<strong>将筛选掉数据多的条件放前面</strong>（执行顺序左到右）</p></blockquote><ol><li>求没有使用天津供应商生产的红色零件的工程号。</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*写法1：*/</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> JNO</span><br><span class="line"><span class="keyword">FROM</span> SPJ</span><br><span class="line"><span class="keyword">WHERE</span> JNO <span class="keyword">NOT</span> <span class="keyword">IN</span> (</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> JNO</span><br><span class="line"><span class="keyword">FROM</span>(</span><br><span class="line"><span class="keyword">SELECT</span> SNO</span><br><span class="line"><span class="keyword">FROM</span> S</span><br><span class="line"><span class="keyword">WHERE</span> CITY <span class="operator">=</span> <span class="string">&#x27;天津&#x27;</span></span><br><span class="line">) t1,(</span><br><span class="line"><span class="keyword">SELECT</span> SNO, PNO, JNO</span><br><span class="line"><span class="keyword">FROM</span> SPJ</span><br><span class="line">) t2,(</span><br><span class="line"><span class="keyword">SELECT</span> PNO</span><br><span class="line"><span class="keyword">FROM</span> P</span><br><span class="line"><span class="keyword">WHERE</span> COLOR <span class="operator">=</span> <span class="string">&#x27;红&#x27;</span></span><br><span class="line">) t3</span><br><span class="line"><span class="keyword">WHERE</span> t1.SNO <span class="operator">=</span> t2.SNO <span class="keyword">AND</span> t2.PNO <span class="operator">=</span> t3.PNO</span><br><span class="line">);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">写法<span class="number">2</span>：</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> JNO</span><br><span class="line"><span class="keyword">FROM</span> SPJ</span><br><span class="line"><span class="keyword">WHERE</span> JNO <span class="keyword">NOT</span> <span class="keyword">IN</span>(</span><br><span class="line">    <span class="keyword">SELECT</span> JNO</span><br><span class="line">    <span class="keyword">FROM</span> SPJ, P, S</span><br><span class="line">    <span class="keyword">WHERE</span> S.CITY<span class="operator">=</span><span class="string">&#x27;天津&#x27;</span></span><br><span class="line">    <span class="keyword">AND</span> SPJ.SNO<span class="operator">=</span>S.SNO</span><br><span class="line">    <span class="keyword">AND</span> SPJ.PNO<span class="operator">=</span>P.PNO </span><br><span class="line">    <span class="keyword">AND</span> P.COLOR<span class="operator">=</span><span class="string">&#x27;红&#x27;</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><ol><li><strong>求至少用了供应商S2所供应的全部零件的工程号JNO。</strong> </li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> jno</span><br><span class="line"><span class="keyword">FROM</span> spj spjz</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span>(</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> spj spjx</span><br><span class="line"><span class="keyword">WHERE</span> spjx.sno <span class="operator">=</span> <span class="string">&#x27;S2&#x27;</span> </span><br><span class="line"><span class="keyword">AND</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span>(</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> spj spjy</span><br><span class="line"><span class="keyword">WHERE</span> spjy.pno <span class="operator">=</span> spjx.pno <span class="keyword">AND</span> spjy.jno <span class="operator">=</span> spjz.jno</span><br><span class="line">)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><ol><li>找出所有供应商的姓名和所在城市。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> SNAME, CITY </span><br><span class="line"><span class="keyword">FROM</span> S;</span><br></pre></td></tr></table></figure></li><li>找出所有零件的名称、颜色、重量。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> PNAME, COLOR, WEIGHT </span><br><span class="line"><span class="keyword">FROM</span> P;</span><br></pre></td></tr></table></figure></li><li>找出所有工程项目名及所在城市。</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> JCITY</span><br><span class="line"><span class="keyword">FROM</span> J;</span><br></pre></td></tr></table></figure><ol><li>找出使用供应商S3所供应零件的工程号码。</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> JNO</span><br><span class="line"><span class="keyword">FROM</span> SPJ</span><br><span class="line"><span class="keyword">WHERE</span> SNO <span class="operator">=</span> <span class="string">&#x27;S3&#x27;</span>;</span><br></pre></td></tr></table></figure><ol><li>找出工程项目J2使用的各种零件的名称及其数量。</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> PNAME, QTY</span><br><span class="line"><span class="keyword">FROM</span> SPJ, P</span><br><span class="line"><span class="keyword">WHERE</span> SPJ.PNO <span class="operator">=</span> P.PNO <span class="keyword">AND</span> JNO <span class="operator">=</span> <span class="string">&#x27;J2&#x27;</span>;</span><br></pre></td></tr></table></figure><ol><li>找出上海厂商供应的所有零件的号码。</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> PNO </span><br><span class="line"><span class="keyword">FROM</span> SPJ </span><br><span class="line"><span class="keyword">WHERE</span> SNO <span class="keyword">IN</span> (</span><br><span class="line"><span class="keyword">SELECT</span> SNO</span><br><span class="line"><span class="keyword">FROM</span> S</span><br><span class="line"><span class="keyword">WHERE</span> CITY <span class="operator">=</span> <span class="string">&#x27;上海&#x27;</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><ol><li>找出使用北京产的零件的工程名称。</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> JNO </span><br><span class="line"><span class="keyword">FROM</span> SPJ </span><br><span class="line"><span class="keyword">WHERE</span> SNO <span class="keyword">IN</span> (</span><br><span class="line"><span class="keyword">SELECT</span> SNO</span><br><span class="line"><span class="keyword">FROM</span> S</span><br><span class="line"><span class="keyword">WHERE</span> CITY <span class="operator">=</span> <span class="string">&#x27;北京&#x27;</span></span><br><span class="line">);</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol><li>找出没有使用天津产的零件的工程号码</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> JNO </span><br><span class="line"><span class="keyword">FROM</span> SPJ </span><br><span class="line"><span class="keyword">WHERE</span> JNO <span class="keyword">NOT</span> <span class="keyword">IN</span>(</span><br><span class="line"><span class="keyword">SELECT</span> JNO</span><br><span class="line"><span class="keyword">FROM</span> SPJ, S</span><br><span class="line"><span class="keyword">WHERE</span> CITY <span class="operator">=</span> <span class="string">&#x27;天津&#x27;</span> <span class="keyword">AND</span> SPJ.SNO <span class="operator">=</span> S.SNO</span><br><span class="line">);</span><br></pre></td></tr></table></figure><ol><li>把全部红色零件的颜色改成绿色</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> P </span><br><span class="line"><span class="keyword">SET</span> COLOR <span class="operator">=</span> <span class="string">&#x27;绿&#x27;</span> </span><br><span class="line"><span class="keyword">WHERE</span> COLOR<span class="operator">=</span><span class="string">&#x27;红&#x27;</span>;</span><br></pre></td></tr></table></figure><ol><li>由S5供给J4的零件P6改为用S3供应。请作必要的修改</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> SPJ</span><br><span class="line"><span class="keyword">SET</span> SNO <span class="operator">=</span> <span class="string">&#x27;S3&#x27;</span></span><br><span class="line"><span class="keyword">WHERE</span> SNO<span class="operator">=</span><span class="string">&#x27;S5&#x27;</span> <span class="keyword">AND</span> PNO<span class="operator">=</span><span class="string">&#x27;P6&#x27;</span> <span class="keyword">AND</span> JNO <span class="operator">=</span> <span class="string">&#x27;J4&#x27;</span>;</span><br></pre></td></tr></table></figure><ol><li>从供应商关系中删除S2的记录，并从供应情况关系中删除相应记录</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span></span><br><span class="line"><span class="keyword">FROM</span> S</span><br><span class="line"><span class="keyword">WHERE</span> SNO <span class="operator">=</span> <span class="string">&#x27;S2&#x27;</span>;</span><br><span class="line"><span class="keyword">DELETE</span></span><br><span class="line"><span class="keyword">FROM</span> SPJ</span><br><span class="line"><span class="keyword">WHERE</span> SNO <span class="operator">=</span> <span class="string">&#x27;S2&#x27;</span>;</span><br></pre></td></tr></table></figure><ol><li>请将(S2,J6,P4,100)插入供应情况关系</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> SPJ <span class="keyword">VALUES</span>(<span class="string">&#x27;S2&#x27;</span>, <span class="string">&#x27;P4&#x27;</span>, <span class="string">&#x27;J6&#x27;</span>, <span class="number">100</span>);</span><br></pre></td></tr></table></figure><ol><li>请为三建工程项目建立一个供应情况的视图，包括供应商代码（SNO）、零件代码（PNO）、供应数量（QTY）。</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> v1 <span class="keyword">AS</span>(</span><br><span class="line"><span class="keyword">SELECT</span> SNO, PNO, QTY</span><br><span class="line"><span class="keyword">FROM</span> SPJ, J</span><br><span class="line"><span class="keyword">WHERE</span> SPJ.JNO <span class="operator">=</span> J.JNO <span class="keyword">AND</span> JNAME <span class="operator">=</span> <span class="string">&#x27;三建&#x27;</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><ol><li>针对18题的视图，找出三建工程项目使用的各种零件代码及其数量。</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> PNO, QTY</span><br><span class="line"><span class="keyword">FROM</span> v1;</span><br></pre></td></tr></table></figure><ol><li>针对18题的视图，找出供应商S1的供应情况。</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> v1</span><br><span class="line"><span class="keyword">WHERE</span> SNO<span class="operator">=</span><span class="string">&#x27;S1&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="习题二："><a href="#习题二：" class="headerlink" title="习题二："></a>习题二：</h2><p>假设有下面两个关系模式：</p><blockquote><p>职工(职工号,姓名,年龄,职务,工资,部门号)，其中职工号为主码；<br>部门(部门号,名称,经理名,地址,电话)，其中部门号为主码。</p></blockquote><p>用SQL语言定义这两个关系模式，要求在模式中完成以下完整性约束条件的定义：<br>约束1：定义每个模式的主码；<br>约束2：<strong>定义参照完整性；</strong><br>约束3：<strong>定义职工年龄不得超过50岁。</strong></p><ol><li>定义关系模式：职工(职工号,姓名,年龄,职务,工资,部门号)，其中职工号为主码；</li><li>定义关系模式：部门(部门号,名称,经理名,电话)，其中部门号为主码；</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Create</span> <span class="keyword">Table</span> 部门(</span><br><span class="line">    部门号 <span class="type">Char</span>(<span class="number">10</span>) <span class="keyword">Primary</span> Key,</span><br><span class="line">    名称 <span class="type">Char</span>(<span class="number">10</span>),</span><br><span class="line">    经理名 <span class="type">Char</span>(<span class="number">10</span>),</span><br><span class="line">    电话 <span class="type">Char</span>(<span class="number">11</span>),</span><br><span class="line">);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Create</span> <span class="keyword">Table</span> 职工(</span><br><span class="line">    职工号 <span class="type">Char</span>(<span class="number">10</span>) <span class="keyword">Primary</span> Key,</span><br><span class="line">    姓名 <span class="type">Char</span>(<span class="number">10</span>),</span><br><span class="line">    年龄 <span class="type">Char</span>(<span class="number">2</span>) <span class="keyword">Check</span>(年龄 <span class="operator">&lt;=</span> <span class="number">60</span>),</span><br><span class="line">    职务 <span class="type">Char</span>(<span class="number">10</span>),</span><br><span class="line">    工资 <span class="type">Char</span>(<span class="number">6</span>),</span><br><span class="line">    部门号 <span class="type">Char</span>(<span class="number">10</span>),</span><br><span class="line">    <span class="keyword">Foreign</span> Key(部门号) <span class="keyword">References</span> 部门(部门号)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h2 id="习题三："><a href="#习题三：" class="headerlink" title="习题三："></a>习题三：</h2><p>假设有下面两个关系模式：</p><blockquote><p>职工(职工号,姓名,年龄,职务,工资,部门号)<br>部门(部门号,名称,经理名,地址,电话)</p></blockquote><p>使用SQL的GRANT和REVOKE语句（加上视图机制）完成以下授权定义或存取控制功能：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Dept (</span><br><span class="line">Dno <span class="type">CHAR</span> (<span class="number">10</span>) <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">Dname <span class="type">CHAR</span> (<span class="number">10</span>),</span><br><span class="line">Mname <span class="type">CHAR</span> (<span class="number">10</span>),</span><br><span class="line">Address <span class="type">CHAR</span> (<span class="number">20</span>),</span><br><span class="line">Tel <span class="type">CHAR</span> (<span class="number">11</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Staff (</span><br><span class="line">Sno <span class="type">CHAR</span> (<span class="number">10</span>) <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">Sname <span class="type">CHAR</span> (<span class="number">10</span>),</span><br><span class="line">Sage <span class="type">CHAR</span> (<span class="number">2</span>) <span class="keyword">CHECK</span> (Sage <span class="operator">&lt;=</span> <span class="number">60</span>),</span><br><span class="line">Post <span class="type">CHAR</span> (<span class="number">10</span>),</span><br><span class="line">Pay <span class="type">CHAR</span> (<span class="number">6</span>),</span><br><span class="line">Dno <span class="type">CHAR</span> (<span class="number">10</span>),</span><br><span class="line"><span class="keyword">FOREIGN</span> KEY (Dno) <span class="keyword">REFERENCES</span> Dept (Dno)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> 王明 IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> 李勇 IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> 刘星 IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> 张新 IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> 周平 IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> 杨兰 IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;123456&#x27;</span>;</span><br></pre></td></tr></table></figure><ol><li>用户王明对两个表有SELECT权限。</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span></span><br><span class="line"><span class="keyword">ON</span> <span class="keyword">TABLE</span> dept</span><br><span class="line"><span class="keyword">TO</span> 王明;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span> </span><br><span class="line"><span class="keyword">ON</span> <span class="keyword">TABLE</span> staff</span><br><span class="line"><span class="keyword">TO</span> 王明;</span><br></pre></td></tr></table></figure><blockquote><p><strong>注意</strong>不能写成：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span> </span><br><span class="line"><span class="keyword">ON</span> <span class="keyword">TABLE</span> dept,staff</span><br><span class="line"><span class="keyword">TO</span> 王明;</span><br></pre></td></tr></table></figure><br>↑ 语法报错</p></blockquote><ol><li>用户李勇对两个表有INSERT和DELETE权限。</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="keyword">INSERT</span>,<span class="keyword">DELETE</span></span><br><span class="line"><span class="keyword">ON</span> <span class="keyword">TABLE</span> dept</span><br><span class="line"><span class="keyword">TO</span> 李勇;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">INSERT</span>,<span class="keyword">DELETE</span></span><br><span class="line"><span class="keyword">ON</span> <span class="keyword">TABLE</span> staff</span><br><span class="line"><span class="keyword">TO</span> 李勇;</span><br></pre></td></tr></table></figure><ol><li><strong>每个职工只对自己的记录有SELECT权限</strong></li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span> </span><br><span class="line"><span class="keyword">ON</span> <span class="keyword">TABLE</span> staff </span><br><span class="line"><span class="keyword">WHEN</span> <span class="keyword">USER</span>()<span class="operator">=</span> Sname</span><br><span class="line"><span class="keyword">TO</span> <span class="keyword">ALL</span>;</span><br></pre></td></tr></table></figure><blockquote><p>ALL指代所有用户，事实上mysql不能这样写</p><ol><li>用户刘星对职工表有SELECT权限，对工资字段具有UPDATE权限。</li></ol></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span>,<span class="keyword">UPDATE</span>(Pay)</span><br><span class="line"><span class="keyword">ON</span> <span class="keyword">TABLE</span> staff</span><br><span class="line"><span class="keyword">TO</span> 刘星;</span><br></pre></td></tr></table></figure><ol><li>用户张新具有修改这两个表的结构的权限。</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALTER</span></span><br><span class="line"><span class="keyword">ON</span> <span class="keyword">TABLE</span> staff <span class="keyword">TO</span> 张新;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALTER</span></span><br><span class="line"><span class="keyword">ON</span> <span class="keyword">TABLE</span> dept <span class="keyword">TO</span> 张新;</span><br></pre></td></tr></table></figure><ol><li>用户周平具有对两个表的所有权限(读、插、改、删数据)，并具有给其他用户授权的权限。</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES</span><br><span class="line"><span class="keyword">ON</span> <span class="keyword">TABLE</span> staff <span class="keyword">TO</span> 周平</span><br><span class="line"><span class="keyword">WITH</span> <span class="keyword">GRANT</span> OPTION;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES</span><br><span class="line"><span class="keyword">ON</span> <span class="keyword">TABLE</span> dept <span class="keyword">TO</span> 周平</span><br><span class="line"><span class="keyword">WITH</span> <span class="keyword">GRANT</span> OPTION;</span><br></pre></td></tr></table></figure><h2 id="习题四："><a href="#习题四：" class="headerlink" title="习题四："></a>习题四：</h2><p>对下列两个关系模式：<br>学生(学号，姓名，年龄，性别，家庭住址，班级号)<br>班级(班级号，班级名，班主任，班长)<br>使用GRANT 语句完成下列授权功能：</p><ol><li>授予用户U1对两个表的所有权限，并可给其他用户授权。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES</span><br><span class="line"><span class="keyword">ON</span> Class</span><br><span class="line"><span class="keyword">TO</span> U1</span><br><span class="line"><span class="keyword">WITH</span> <span class="keyword">GRANT</span> OPTION；</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES</span><br><span class="line"><span class="keyword">ON</span> Student</span><br><span class="line"><span class="keyword">TO</span> U1</span><br><span class="line"><span class="keyword">WITH</span> <span class="keyword">GRANT</span> OPTION；</span><br></pre></td></tr></table></figure></li><li>授予用户U2对学生表具有查看权限,对家庭住址具有更新权限。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span>,<span class="keyword">UPDATE</span>(Saddress)</span><br><span class="line"><span class="keyword">ON</span> Student</span><br><span class="line"><span class="keyword">TO</span> U2；</span><br></pre></td></tr></table></figure></li><li>将对班级表查看权限授予所有用户。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span></span><br><span class="line"><span class="keyword">ON</span> Class</span><br><span class="line"><span class="keyword">TO</span> <span class="keyword">ALL</span>;</span><br></pre></td></tr></table></figure></li><li>将对学生表的查询、更新权限授予角色R1。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span>,<span class="keyword">UPDATE</span></span><br><span class="line"><span class="keyword">ON</span> Student</span><br><span class="line"><span class="keyword">TO</span> R1;</span><br></pre></td></tr></table></figure></li><li>将角色R1授予用户U1，并且U1可继续授权给其他角色。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> R1</span><br><span class="line"><span class="keyword">TO</span> U1</span><br><span class="line"><span class="keyword">WITH</span> <span class="keyword">GRANT</span> OPTION;</span><br></pre></td></tr></table></figure></li></ol><h2 id="习题五："><a href="#习题五：" class="headerlink" title="习题五："></a>习题五：</h2><p>设教学数据库education有三个关系：<strong>学生关系S（SNO，SNAME，SAGE，SSEX，SDEPT）</strong>； 其中，SDEPT学生为所在系 <strong>学习关系SC（SNO，CNO，GRADE）</strong>；其中GRADE为成绩 <strong>课程关系C（CNO，CNAME，CDEPT，TNAME）</strong>，其中TNAME为授课教师姓名 用SQL语句表达下列操作：</p><ol><li>查所有年龄在20岁以下的学生姓名及年龄。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> SNAME, AGE</span><br><span class="line"><span class="keyword">FROM</span> S</span><br><span class="line"><span class="keyword">WHERE</span> AGE <span class="operator">&lt;</span> <span class="number">20</span>;</span><br></pre></td></tr></table></figure></li><li>查考试成绩有不及格（&lt;60）的学生的学号。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> SNO</span><br><span class="line"><span class="keyword">FROM</span> SC</span><br><span class="line"><span class="keyword">WHERE</span> GRADE <span class="operator">&lt;</span> <span class="number">60</span>;</span><br></pre></td></tr></table></figure></li><li>查所年龄在20至23岁之间的学生姓名、系别及年龄。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> SNAME,SDEPT,AGE</span><br><span class="line"><span class="keyword">FROM</span> S</span><br><span class="line"><span class="keyword">WHERE</span> AGE <span class="keyword">BETWEEN</span> <span class="number">20</span> <span class="keyword">AND</span> <span class="number">23</span>;</span><br></pre></td></tr></table></figure></li><li>查所有姓“刘”的学生的姓名、学号和性别。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> SNAME,SNO,SEX</span><br><span class="line"><span class="keyword">FROM</span> S</span><br><span class="line"><span class="keyword">WHERE</span> SNAME <span class="keyword">LIKE</span> <span class="string">&#x27;刘%&#x27;</span></span><br></pre></td></tr></table></figure></li><li>查所有不姓“张”的学生的姓名。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> SNAME</span><br><span class="line"><span class="keyword">FROM</span> S</span><br><span class="line"><span class="keyword">WHERE</span> SNAME <span class="keyword">NOT</span> <span class="keyword">LIKE</span> <span class="string">&#x27;张%&#x27;</span></span><br></pre></td></tr></table></figure></li><li>查课程名为db_design的课程号。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> CNO</span><br><span class="line"><span class="keyword">FROM</span> C</span><br><span class="line"><span class="keyword">WHERE</span> CNAME <span class="operator">=</span> <span class="string">&#x27;DB_Design&#x27;</span></span><br></pre></td></tr></table></figure></li><li>查缺考（GRADE为NULL）的学生的学号和课程号。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> SNO,CNO</span><br><span class="line"><span class="keyword">FROM</span> SC</span><br><span class="line"><span class="keyword">WHERE</span> GRADE <span class="keyword">IS</span> <span class="keyword">NULL</span></span><br></pre></td></tr></table></figure></li><li>查年龄为空值的学生的学号和姓名。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> SNO,SNAME</span><br><span class="line"><span class="keyword">FROM</span> S</span><br><span class="line"><span class="keyword">WHERE</span> AGE <span class="keyword">IS</span> <span class="keyword">NULL</span></span><br></pre></td></tr></table></figure></li><li>查计算机系（CS）20岁以下的学生的学号和姓名。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> SNO,SNAME</span><br><span class="line"><span class="keyword">FROM</span> S</span><br><span class="line"><span class="keyword">WHERE</span> SDEPT <span class="operator">=</span> <span class="string">&#x27;CS&#x27;</span> <span class="keyword">AND</span> AGE <span class="operator">&lt;</span> <span class="number">20</span></span><br></pre></td></tr></table></figure></li><li>查询选修了c3课程的学生的学号和成绩，其结果按分数的降序排列。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> SNO,GRADE</span><br><span class="line"><span class="keyword">FROM</span> SC</span><br><span class="line"><span class="keyword">WHERE</span> CNO <span class="operator">=</span> <span class="string">&#x27;c3&#x27;</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> GRADE <span class="keyword">DESC</span></span><br></pre></td></tr></table></figure></li><li>查询学生总人数。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>)</span><br><span class="line"><span class="keyword">FROM</span> S</span><br></pre></td></tr></table></figure></li><li>计算选修了c1课程的学生平均成绩。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">AVG</span>(GRADE)</span><br><span class="line"><span class="keyword">FROM</span> SC</span><br><span class="line"><span class="keyword">WHERE</span> CNO <span class="operator">=</span> <span class="string">&#x27;c1&#x27;</span></span><br></pre></td></tr></table></figure></li><li>查询学习c3课程的学生最高分数。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MAX</span>(GRADE)</span><br><span class="line"><span class="keyword">FROM</span> SC</span><br><span class="line"><span class="keyword">WHERE</span> CNO <span class="operator">=</span> <span class="string">&#x27;c3&#x27;</span></span><br></pre></td></tr></table></figure></li><li>查询各个课程号与相应的选课人数。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> CNO,<span class="built_in">COUNT</span>(SNO)</span><br><span class="line"><span class="keyword">FROM</span> SC</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> CNO</span><br></pre></td></tr></table></figure></li><li><p>求基本表S中男同学的每一年龄组（超过50人）有多少人？要求查询结果按人数升序排列，人数相同按年龄降序排列</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> AGE,<span class="built_in">COUNT</span>(SNO)</span><br><span class="line"><span class="keyword">FROM</span> S</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> AGE</span><br><span class="line"><span class="keyword">HAVING</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>)<span class="operator">&gt;</span><span class="number">50</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">ASC</span>, AGE <span class="keyword">DESC</span></span><br></pre></td></tr></table></figure><blockquote><p>不能用where having指定组条件 往往与 GROUP BY 配合使用，为聚合操作指定条件</p></blockquote></li><li><p>查询每个学生及其选修课程的情况。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> S.SNO,SNAME,SC.CNO,C.CNAME,SC.GRADE</span><br><span class="line"><span class="keyword">FROM</span> S,SC,C</span><br><span class="line"><span class="keyword">WHERE</span> S.SNO <span class="operator">=</span> SC.SNO <span class="keyword">AND</span> SC.CNO <span class="operator">=</span> C.CNO</span><br></pre></td></tr></table></figure></li><li>查询选修了c2课程且成绩在90分以上的所有学生。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> S.SNO,S.SNAME</span><br><span class="line"><span class="keyword">FROM</span> S,SC</span><br><span class="line"><span class="keyword">WHERE</span> SC.CNO <span class="operator">=</span> <span class="string">&#x27;c2&#x27;</span> <span class="keyword">AND</span> SC.GRADE <span class="operator">&gt;</span> <span class="number">90</span> <span class="keyword">AND</span> S.SNO <span class="operator">=</span> SC.SNO </span><br></pre></td></tr></table></figure></li><li>查询每个学生选修的课程名及其成绩。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> S.SNO,S.SNAME,C.CNAME,SC.GRADE</span><br><span class="line"><span class="keyword">FROM</span> S,SC,C</span><br><span class="line"><span class="keyword">WHERE</span> SC.SNO <span class="operator">=</span> S.SNO <span class="keyword">AND</span> SC.CNO <span class="operator">=</span> C.CNO</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> S.SNO, C.CNAME</span><br></pre></td></tr></table></figure></li><li>查询与“张三”在同一个系学习的学生学号、姓名和系别。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> SNO,SNAME,SDEPT</span><br><span class="line"><span class="keyword">FROM</span> S</span><br><span class="line"><span class="keyword">WHERE</span> SDEPT <span class="keyword">IN</span> (</span><br><span class="line"><span class="keyword">SELECT</span> SDEPT</span><br><span class="line">    <span class="keyword">FROM</span> S</span><br><span class="line">    <span class="keyword">WHERE</span> SNAME <span class="operator">=</span> <span class="string">&#x27;张三&#x27;</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure></li><li>查询选修课程名为“数据库”（CNAME=’DB’）的学生学号和姓名。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> SNO,SNAME</span><br><span class="line"><span class="keyword">FROM</span> S,SC,C</span><br><span class="line"><span class="keyword">WHERE</span> CNAME <span class="operator">=</span> <span class="string">&#x27;DB&#x27;</span> <span class="keyword">AND</span> S.SNO <span class="operator">=</span> SC.SNO <span class="keyword">AND</span> C.CNO <span class="operator">=</span> SC.CNO</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库系统概论复习（一）</title>
      <link href="/2022/11/30/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A4%8D%E4%B9%A0/"/>
      <url>/2022/11/30/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A4%8D%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<blockquote><p>先上一张思维导图</p></blockquote><p><img src="https://s1.ax1x.com/2022/11/29/zdbuTJ.png" alt=""></p><hr><blockquote><p>以下题目来自课堂复习</p></blockquote><h1 id="第一章-绪论"><a href="#第一章-绪论" class="headerlink" title="第一章 绪论"></a>第一章 绪论</h1><h2 id="1-简答题"><a href="#1-简答题" class="headerlink" title="1 简答题"></a>1 简答题</h2><h3 id="1-1-简述数据库系统的组成和特点"><a href="#1-1-简述数据库系统的组成和特点" class="headerlink" title="1.1 简述数据库系统的组成和特点"></a>1.1 简述数据库系统的组成和特点</h3><p><strong>组成：</strong><br>数据库系统（DBS）一般由数据库（DB）、数据库管理系统（DBMS）及其应用开发工具、应用程序和数据库管理员（DBA）构成，是储存、管理、处理和维护数据的系统。<br><strong>特点：</strong></p><ol><li><p>数据结构化</p><ul><li>整体数据的结构化，这是数据库的主要特征之一，也是数据库系统和文件系统的本质区别。<br><img src="https://s1.ax1x.com/2022/11/29/zdHXSP.jpg" alt=""></li></ul></li><li><p>数据的共享性高、冗余度低且易扩充</p></li><li><p>数据独立性高</p><ul><li>数据独立性<ul><li>物理独立性</li><li>逻辑独立性</li></ul></li></ul></li><li><p>数据由数据库管理系统统一管理和控制</p></li></ol><h3 id="1-2-简述数据库独立性的原理和作用"><a href="#1-2-简述数据库独立性的原理和作用" class="headerlink" title="1.2 简述数据库独立性的原理和作用"></a>1.2 简述数据库独立性的原理和作用</h3><p>数据库系统通常采用三级模式结构，是数据库系统内部的系统结构<br><img src="https://img-blog.csdnimg.cn/2020070809585186.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Njg4MDU1Ng==,size_16,color_FFFFFF,t_70#pic_center" alt=""></p><ol><li><p><strong>外模式</strong><br>又称子模式或用户模式。外模式是某个数据视图，独立于存储模式和存储设备；一个DB可以有多个外模式，外模式是模式的子集。<br>外模式的用途：保证数据库安全性的一个有力措施；每个用户只能看见和访问所对应的外模式中的数据。</p></li><li><p><strong>模式</strong><br>又称逻辑模式，模式只涉及到型的描述，不涉及具体的值，反映的是数据的结构及其联系；模式起到了承上启下的作用；一个数据库只有一个模式。</p></li><li><p><strong>内模式</strong><br>又称存储模式。数据的物理结构和存储方式的描述，即DB中数据的内部表示方式。<br>一个数据库只有一个内模式；独立于具体的存储设备</p></li></ol><blockquote><p>当数据库的存储结构改变了，数据库管理员可<strong>修改内模式/模式映像，</strong> 使模式保持不变。保证了数据的<strong>物理独立性</strong> 。</p><p>对于同一个模式可以有任意多个外模式，对于每一个外模式，数据库系统都有一个外模式映像。当模式改变时，由数据库管理员对<strong>各个外模式/模式的映像作相应的改变</strong>，可以使外模式保持不变。保证了数据与程序的<strong>数据独立性</strong>。</p></blockquote><h3 id="1-3-简述文件系统和数据库系统在处理数据中的区别和联系"><a href="#1-3-简述文件系统和数据库系统在处理数据中的区别和联系" class="headerlink" title="1.3 简述文件系统和数据库系统在处理数据中的区别和联系"></a>1.3 简述文件系统和数据库系统在处理数据中的区别和联系</h3><ol><li><strong>区别：</strong></li></ol><ul><li><p>文件系统由操作系统中的存取方式对数据进行管理，数据库中由DBMS对数据进行管理和控制；</p></li><li><p>文件系统中数据与应用程序有联系，而数据库系统中数据和应用程序分离；</p></li><li><p>文件系统是以文件为单位的共享，这就可能会造成数据间不相融与不一致性，而数据库系统的共享是以数据项为单位的共享，共享性更高。</p></li></ul><ol><li><strong>联系：</strong></li></ol><ul><li><p>均为数据组织的管理技术；</p></li><li><p>均由数据管理软件管理数据，程序与数据之间用存取方法进行转换；</p></li><li><p>数据库系统是在文件系统的基础上发展而来的。</p></li></ul><h3 id="1-4-简述数据库相关的三个数据模型的联系与区别"><a href="#1-4-简述数据库相关的三个数据模型的联系与区别" class="headerlink" title="1.4 简述数据库相关的三个数据模型的联系与区别"></a>1.4 简述数据库相关的三个数据模型的联系与区别</h3><ol><li><strong>联系：</strong></li></ol><ul><li>都是主要的数据模型。数据模型分两类，一类是概念模型，一类是逻辑模型和物理模型。</li><li>都是数据库系统的核心和基础。</li></ul><ol><li><strong>区别：</strong></li></ol><ul><li>概念模型是按照用户的观点来对数据和信息进行建模，主要用于数据库设计。</li><li>逻辑模型是按照计算机系统的观点对数据进行数据建模，主要用于数据库管理系统的实现。</li><li>物理模型是对数据最底层的抽象，它描述数据在系统内部的表达方式和存取方法，或在磁盘或磁盘带上的储存方式和存取方法，是面向计算机的。</li></ul><h3 id="1-5-与网状模型和层次模型相比，关系模型的优点是什么"><a href="#1-5-与网状模型和层次模型相比，关系模型的优点是什么" class="headerlink" title="1.5 与网状模型和层次模型相比，关系模型的优点是什么"></a>1.5 与网状模型和层次模型相比，关系模型的优点是什么</h3><ul><li>关系模型与格式化模型（网状模型、层次模型）不同，它是建立在严格的数学概念（集合）的基础上的。</li><li>数据结构简单、清晰，用户易懂易用。</li><li>具有更好的数据独立性、更好的安全保密性。</li></ul><h1 id="第二章-关系数据库"><a href="#第二章-关系数据库" class="headerlink" title="第二章 关系数据库"></a>第二章 关系数据库</h1><h2 id="2-1-关系模型的三个组成部分"><a href="#2-1-关系模型的三个组成部分" class="headerlink" title="2.1 关系模型的三个组成部分"></a>2.1 关系模型的三个组成部分</h2><ol><li><strong>关系数据结构</strong><br>主要描述数据的类型、内容、性质以及数据间的联系等。</li><li><strong>关系操作集合</strong><br>主要描述在相应的数据结构上的操作类型和操作方式。它是操作算符的集合，包括若干操作和推理准则，用以对目标类型的有效实例所组成的数据库进行操作。</li><li><strong>关系完整性约束</strong><br>数据约束主要描述数据结构内数据间的语法、词义联系、他们之间的制约和依存关系，以及数据动态变化的规则，以保证数据的正确、有效和相容。它是完整性规则的集合，用以限定符合数据模型的数据库状态，以及状态的变化。</li></ol><ul><li>静态约束：数据库中数据的语法、语义限制与数据之间的逻辑约束称为静态约束。</li><li>动态约束：数据库中的数据变化应遵守的规则称为数据动态约束</li></ul><h2 id="2-2-关系模式和关系的区别"><a href="#2-2-关系模式和关系的区别" class="headerlink" title="2.2 关系模式和关系的区别"></a>2.2 关系模式和关系的区别</h2><ol><li><p><strong>关系：</strong> 关系模型的数据结构，D1 × D2 × ··· × Dn 的子集叫做在域D1，D2，···，Dn 上的关系，表示为 R(D1，D2，···，Dn )，其中R就是关系名，n就是目或度。关系对应一张二维表，关系中的每个元素称为元组，由于元组数据会时常修改，所以关系呈现出动态的。</p><blockquote><ul><li>元组：关系中每个元素叫作一个n元组，简称元组</li><li>属性：表中的一列即为一个属性，给每个属性起一个名称即为属性名，表中任意的属性名不能相同</li><li>码：属性/属性组 组成【候选码：唯一标识符】【主码：从候选码中选定】【全码：关系模式中的所有属性组是这个关系模式的候选码】</li></ul></blockquote></li><li><p><strong>关系模式：</strong> 对关系的描述。关系模式是静态的。</p><blockquote><p>例如：教师（教师号，姓名，性别，年龄，职称，所在系）</p></blockquote></li></ol><h2 id="2-3-试述关系模型的完整性规则。在参照完整性中，什么情况下外码属性的值可以为空值？"><a href="#2-3-试述关系模型的完整性规则。在参照完整性中，什么情况下外码属性的值可以为空值？" class="headerlink" title="2.3 试述关系模型的完整性规则。在参照完整性中，什么情况下外码属性的值可以为空值？"></a>2.3 试述关系模型的完整性规则。在参照完整性中，什么情况下外码属性的值可以为空值？</h2><ol><li>关系模型的完整性规则是对关系的某种约束条件。关系模型中有三类完整性约束，分别为实体完整性规则、参照完整性规则和用户定义的完整性规则。</li></ol><ul><li>实体完整性规则：若一个或一组属性A是基本关系R中的主属性，则属性A不能为空值。</li><li>参照完整性规则：若一个或一组属性F是基本关系R的外码，Ks是基本关系S的主码，且F与Ks相对应，则R中任一元组在F上的值必须：F为空值或S中的某个元组的Ks值。 </li><li>用户定义的完整性规则：用户自定义的完整性就是针对某一具体数据的约束条件，它反映某一具体应用所涉及的数据必须满足的语义要求。 </li></ul><ol><li>在参照完整性规则中，当外码和另一关系的主码相对应时，外码可为空值。</li></ol><h2 id="2-4-教材第二章习题部分第6题"><a href="#2-4-教材第二章习题部分第6题" class="headerlink" title="2.4 教材第二章习题部分第6题"></a>2.4 教材第二章习题部分第6题</h2><p>设有一个 SPJ 数据库，包括 S、P、J、SPJ4 个关系模式：</p><blockquote><p>S ( SNO, SNAME, STATUS, CITY );<br>P ( PNO, PNAME, COLOR, WEIGHT );<br>J ( JNO, JNAME, CITY );<br>SPJ ( SNO, PNO, JNO, QTY );</p></blockquote><ul><li>供应商表 S 由供应商代码（SNO）、供应商姓名（SNAME）、供应商状态（STATUS）、供应商所在城市（CITY）组成。</li><li>零件表 P 由零件代码（PNO）、零件名（PNAME）、颜色（COLOR）、重量（WEIGHT）组成。</li><li>工程项目表 J 由工程项目代码（JNO）、工程项目名（JNAME）、工程项目所在城市（CITY）组成。</li><li>供应情况表 SPJ 由供应商代码（SNO）、零件代码（PNO）、工程项目代码（JNO）、供应数量（QTY）组成，表示某供应商供应某种零件给某工程项目的数量为 QTY。</li></ul><p>今有若干数据如下：<br><img src="https://s1.ax1x.com/2022/11/30/zw7hTJ.png" alt=""></p><p><img src="https://s1.ax1x.com/2022/11/30/zw7qOO.png" alt=""><br><img src="https://s1.ax1x.com/2022/11/30/zw7X0e.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Floyd求多源最短路径</title>
      <link href="/2022/11/30/%E5%A4%A7%E4%B8%80Floyd/"/>
      <url>/2022/11/30/%E5%A4%A7%E4%B8%80Floyd/</url>
      
        <content type="html"><![CDATA[<blockquote><p>这篇文章记录一下大一写的Floyd算法求多源最短路径</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 32767 <span class="comment">//表示无穷</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX 99</span></span><br><span class="line"><span class="comment">//邻接矩阵类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AMgraph</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//创建无向网 undirected net</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Create_UDnet</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;&gt;请依次输入总顶点数和总边数：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; VertexNum &gt;&gt; EdgeNum;</span><br><span class="line"><span class="comment">//输入错误</span></span><br><span class="line"><span class="keyword">if</span> (VertexNum &lt; <span class="number">1</span> || EdgeNum &lt; <span class="number">1</span> || (EdgeNum &gt; VertexNum * (VertexNum - <span class="number">1</span>)))</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;input error！&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//依次输入点的信息</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;&gt;请依次输入点的信息：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; VertexNum; i++)</span><br><span class="line">cin &gt;&gt; Vertex[i];</span><br><span class="line"><span class="comment">//初始化邻接矩阵</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; VertexNum; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; EdgeNum; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (i == j)</span><br><span class="line">Matrix[i][j] == <span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">Matrix[i][j] = INF;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输入边的信息</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;&gt;请依次输入每条边连接的两个顶点及边的权值：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="type">char</span> v1, v2;<span class="comment">//边连接的两个顶点</span></span><br><span class="line"><span class="type">int</span> x, y;<span class="comment">//在邻接矩阵中的坐标</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; EdgeNum; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; v1 &gt;&gt; v2 &gt;&gt; weight;</span><br><span class="line">x = <span class="built_in">GetPos</span>(v1);</span><br><span class="line">y = <span class="built_in">GetPos</span>(v2);</span><br><span class="line">Matrix[x][y] = weight;</span><br><span class="line">Matrix[y][x] = weight;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//创建有向网 directed net</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Create_Dnet</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;&gt;请依次输入总顶点数和总边数：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; VertexNum &gt;&gt; EdgeNum;</span><br><span class="line"><span class="comment">//输入错误</span></span><br><span class="line"><span class="keyword">if</span> (VertexNum &lt; <span class="number">1</span> || EdgeNum &lt; <span class="number">1</span> || (EdgeNum &gt; VertexNum * (VertexNum - <span class="number">1</span>)))</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;input error！&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//依次输入点的信息</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;&gt;请依次输入点的信息：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; VertexNum; i++)</span><br><span class="line">cin &gt;&gt; Vertex[i];</span><br><span class="line"><span class="comment">//初始化邻接矩阵</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; VertexNum; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; VertexNum; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (i == j)</span><br><span class="line">Matrix[i][j] == <span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">Matrix[i][j] = INF;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输入边的信息</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;&gt;请依次输入每条边连接的起点和终点及边的权值：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="type">char</span> v1, v2;<span class="comment">//边连接的两个顶点</span></span><br><span class="line"><span class="type">int</span> x, y;<span class="comment">//在邻接矩阵中的坐标</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; EdgeNum; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; v1 &gt;&gt; v2 &gt;&gt; weight;</span><br><span class="line">x = <span class="built_in">GetPos</span>(v1);</span><br><span class="line">y = <span class="built_in">GetPos</span>(v2);</span><br><span class="line">Matrix[x][y] = weight;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//打印邻接矩阵</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">display</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;邻接矩阵：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; VertexNum; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; VertexNum; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//无穷</span></span><br><span class="line"><span class="keyword">if</span> (Matrix[i][j] == INF)</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;∞ &quot;</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">cout &lt;&lt; Matrix[i][j] &lt;&lt; <span class="string">&quot;  &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//Floyd算法的实现</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Floyd_Path</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//初始化</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; VertexNum; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; VertexNum; j++)</span><br><span class="line">&#123;</span><br><span class="line">Path[i][j] = <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//算法实现</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; VertexNum; k++)<span class="comment">//过度顶点</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; VertexNum; i++)<span class="comment">//起点</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; VertexNum; j++)<span class="comment">//终点</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (i != j &amp;&amp; i != k &amp;&amp; j != k) </span><br><span class="line"><span class="keyword">if</span> (Matrix[i][j] &gt; Matrix[i][k] + Matrix[k][j])</span><br><span class="line">&#123;</span><br><span class="line">Matrix[i][j] = Matrix[i][k] + Matrix[k][j];</span><br><span class="line">Path[i][j] = Vertex[k];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//打印最短路径</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">ShowPath</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; VertexNum; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; VertexNum; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (Matrix[i][j] == INF)</span><br><span class="line">cout &lt;&lt; Vertex[i] &lt;&lt; <span class="string">&quot;---&gt;&quot;</span> &lt;&lt; Vertex[j] &lt;&lt; <span class="string">&quot; : Weight: ∞&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (i != j)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; Vertex[i] &lt;&lt; <span class="string">&quot;---&gt;&quot;</span> &lt;&lt; Vertex[j];</span><br><span class="line">cout &lt;&lt; <span class="string">&quot; : Weight:&quot;</span> &lt;&lt; <span class="built_in">setw</span>(<span class="number">3</span>) &lt;&lt; Matrix[i][j];</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;  Path: &quot;</span> &lt;&lt; Vertex[i] &lt;&lt; <span class="string">&quot;-&gt;&quot;</span>;</span><br><span class="line"><span class="built_in">GetPath</span>(Vertex[i], Vertex[j]);</span><br><span class="line">cout &lt;&lt; Vertex[j];</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">char</span> Vertex[MAX]; <span class="comment">//顶点集合</span></span><br><span class="line"><span class="type">int</span> Matrix[MAX][MAX];<span class="comment">//邻接矩阵</span></span><br><span class="line"><span class="type">int</span> VertexNum; <span class="comment">//顶点数</span></span><br><span class="line"><span class="type">int</span> EdgeNum; <span class="comment">//边数</span></span><br><span class="line"><span class="type">int</span> weight; <span class="comment">//权值</span></span><br><span class="line"><span class="type">char</span> Path[MAX][MAX];  <span class="comment">//记录中间点</span></span><br><span class="line"><span class="comment">//查找顶点的坐标</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">GetPos</span><span class="params">(<span class="type">char</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; VertexNum; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (v == Vertex[i])</span><br><span class="line"><span class="keyword">return</span> i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//递归得到中间路径</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">GetPath</span><span class="params">(<span class="type">char</span> x, <span class="type">char</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> a = <span class="built_in">GetPos</span>(x);</span><br><span class="line"><span class="type">int</span> b = <span class="built_in">GetPos</span>(y);</span><br><span class="line"><span class="keyword">if</span> (Path[a][b] != <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> temp = <span class="built_in">GetPos</span>(Path[a][b]);</span><br><span class="line"><span class="comment">//判断从起点到中间点之间是否还有过渡点</span></span><br><span class="line"><span class="keyword">if</span> (Path[a][temp] == <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">cout &lt;&lt; Path[a][b] &lt;&lt; <span class="string">&quot;-&gt;&quot;</span>;</span><br><span class="line"><span class="comment">//起点到中间点之间还有过渡点</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">GetPath</span>(x, Path[a][b]);</span><br><span class="line"><span class="comment">//中间点到终点</span></span><br><span class="line"><span class="built_in">GetPath</span>(Path[a][b], y);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">AMgraph g;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Function</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\n     1.无向图  2.有向图  3.退 出&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;--------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;&gt;请选择类型或退出：&quot;</span>;</span><br><span class="line"><span class="type">int</span> select;</span><br><span class="line">cin &gt;&gt; select;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line"><span class="keyword">switch</span> (select)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">g.<span class="built_in">Create_UDnet</span>();</span><br><span class="line">g.<span class="built_in">display</span>();</span><br><span class="line">g.<span class="built_in">Floyd_Path</span>();</span><br><span class="line">g.<span class="built_in">ShowPath</span>();</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">g.<span class="built_in">Create_Dnet</span>();</span><br><span class="line">g.<span class="built_in">display</span>();</span><br><span class="line">g.<span class="built_in">Floyd_Path</span>();</span><br><span class="line">g.<span class="built_in">ShowPath</span>();</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;输入错误，请重新选择！&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">Function</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Floyd </tag>
            
            <tag> 邻接矩阵 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>堆排序</title>
      <link href="/2022/11/28/%E5%A0%86%E6%8E%92%E5%BA%8F/"/>
      <url>/2022/11/28/%E5%A0%86%E6%8E%92%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="堆排序"><a href="#堆排序" class="headerlink" title="堆排序"></a>堆排序</h1><hr><h2 id="1-知识准备"><a href="#1-知识准备" class="headerlink" title="1 知识准备"></a>1 知识准备</h2><p>堆的结构可以分为大根堆和小根堆，是一个完全二叉树，而堆排序是根据堆的这种数据结构设计的一种排序，下面先来看看什么是大根堆和小根堆。</p><h3 id="1-1-大根堆和小根堆"><a href="#1-1-大根堆和小根堆" class="headerlink" title="1.1 大根堆和小根堆"></a>1.1 大根堆和小根堆</h3><p><strong>[大根堆]：</strong> 每个结点的值都大于其左孩子和右孩子结点的值<br><strong>[小根堆]：</strong> 每个结点的值都小于其左孩子和右孩子结点的值<br><a href="https://imgse.com/i/zaTLZ9"><img src="https://s1.ax1x.com/2022/11/28/zaTLZ9.md.png" alt="zaTLZ9.md.png"></a><br><strong>[数组储存]：</strong> 可用数组储存此类完全二叉树 </p><p><strong>父节点索引：</strong> (i-1)/2<br><strong>左孩子索引：</strong> 2<em>i + 1<br><strong>右孩子索引：</strong> 2</em>i + 2</p><blockquote><p>大根堆 需要满足 arr(i)&gt;arr(2<em>i+1) &amp;&amp; arr(i)&gt;arr(2</em>i+2)<br>小根堆 需要满足 arr(i)&lt;arr(2<em>i+1) &amp;&amp; arr(i)&lt;arr(2</em>i+2)</p></blockquote><h2 id="2-堆排序步骤"><a href="#2-堆排序步骤" class="headerlink" title="2 堆排序步骤"></a>2 堆排序步骤</h2><p>（1）首先将待排序的数组构造成一个大根堆，此时，整个数组的最大值就是堆结构的顶端</p><p>（2）将顶端的数与末尾的数交换，此时，末尾的数为最大值，剩余待排序数组个数为n-1</p><p>（3）将剩余的n-1个数再构造成大根堆，再将顶端数与n-1位置的数交换……如此反复执行，便能得到有序数组</p><h3 id="2-2-构造初始的大根堆"><a href="#2-2-构造初始的大根堆" class="headerlink" title="2.2 构造初始的大根堆"></a>2.2 构造初始的大根堆</h3><p>（1）从<strong>最后一棵子树</strong>开始（即最后一个元素的父节点 index = size/2 - 1），从后往前调整<br>（2）每次调整，从上往下调整 <strong>(递归思想)</strong>，使所有父节点始终大于子节点<br>（3）构建成大根堆</p><h3 id="2-3-顶端与末尾的数交换后如何调整堆"><a href="#2-3-顶端与末尾的数交换后如何调整堆" class="headerlink" title="2.3 顶端与末尾的数交换后如何调整堆"></a>2.3 顶端与末尾的数交换后如何调整堆</h3><p>由于执行该步操作后顶端的子树并未发生变化（此时堆或者说数组的长度-1），且<strong>子树依旧是大根堆</strong>，所以之后的调整堆并不需要像第一次构造堆一样从后往前调整每一棵子树，<strong>我们只需要对交换后的顶端重新调整，即HeapAdjust(a, 0, size)。</strong></p><h3 id="2-4-代码实现"><a href="#2-4-代码实现" class="headerlink" title="2.4 代码实现"></a>2.4 代码实现</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">HeapAdjust</span><span class="params">(<span class="type">int</span> *a, <span class="type">int</span> i, <span class="type">int</span> size)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> p = i;<span class="comment">//下标</span></span><br><span class="line">    <span class="type">int</span> left = <span class="number">2</span> * i + <span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> right = <span class="number">2</span> * i + <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span> (left &lt; size &amp;&amp; a[left] &gt; a[p])</span><br><span class="line">        p = left;</span><br><span class="line">    <span class="keyword">if</span> (right &lt; size &amp;&amp; a[right] &gt; a[p])</span><br><span class="line">        p = right;</span><br><span class="line">    <span class="keyword">if</span> (p != i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">swap</span>(a[p], a[i]);</span><br><span class="line">        <span class="built_in">HeapAdjust</span>(a, p, size);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">HeapSort</span><span class="params">(<span class="type">int</span> *a, <span class="type">int</span> size)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//建立初始大根堆</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = size/<span class="number">2</span> <span class="number">-1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">        <span class="built_in">HeapAdjust</span>(a, i, size);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = size - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">swap</span>(a[<span class="number">0</span>], a[i]);</span><br><span class="line">        <span class="built_in">HeapAdjust</span>(a, <span class="number">0</span>, i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">8</span>] = &#123;<span class="number">53</span>, <span class="number">17</span>, <span class="number">78</span>, <span class="number">9</span>, <span class="number">45</span>, <span class="number">65</span>, <span class="number">87</span>, <span class="number">23</span>&#125;;</span><br><span class="line">    <span class="built_in">HeapSort</span>(a, <span class="number">8</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; a[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><a href="&quot;https://www.bilibili.com/video/BV1fp4y1D7cj/?spm_id_from=333.337.search-card.all.click&amp;vd_source=4c4e06d9794ecf36566117b17c0bf46a&quot;">B站相关视频演示</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 堆 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【传智】莲子的机械动力学</title>
      <link href="/2022/11/28/%5B%E4%BC%A0%E6%99%BA%5DB%E8%8E%B2%E5%AD%90%E7%9A%84%E6%9C%BA%E6%A2%B0%E5%8A%A8%E5%8A%9B%E5%AD%A6/"/>
      <url>/2022/11/28/%5B%E4%BC%A0%E6%99%BA%5DB%E8%8E%B2%E5%AD%90%E7%9A%84%E6%9C%BA%E6%A2%B0%E5%8A%A8%E5%8A%9B%E5%AD%A6/</url>
      
        <content type="html"><![CDATA[<blockquote><p>新定义竖式运算</p></blockquote><h1 id="莲子的机械动力学"><a href="#莲子的机械动力学" class="headerlink" title="莲子的机械动力学"></a>莲子的机械动力学</h1><h2 id="题目背景"><a href="#题目背景" class="headerlink" title="题目背景"></a>题目背景</h2><p><strong>【题目背景和题目描述的两个题面是完全等价的，您可以选择阅读其中一部分。】</strong></p><p>专攻超统一物理学的莲子，对机械结构的运动颇有了解。如下图所示，是一个三进制加法计算器的（超简化）示意图。</p><p><img src="https://cdn.luogu.com.cn/upload/image_hosting/l6gm0j36.png" alt=""></p><p>一个四位的三进制整数，从低到高位，标为 $x<em>1,x_2,x_3,x_4$。换言之，这个数可以写成 $\overline{x_4x_3x_2x_1}</em>{(3)}$。把它放在这四个齿轮里，对应箭头指向的数字就是现在这位的数值。</p><p>在这种机械式计算机里，我们通过齿轮的啮合来实现数位间的连接。通过不同齿轮半径的比例来确定进制。图中所有浅灰色的小齿轮的半径，比上使用皮带相接的较大齿轮的半径，都是 $1:3$。那么小齿轮每转动一圈，大齿轮就转动 $\dfrac{1}{3}$ 圈，也就是刚好一个数码的角度。</p><p>于是，我们通过控制齿轮的半径实现了 $3$ 进制的进位。</p><p>如果需要实现三进制加法，则只需要在对应数位拨动对应的数码长度即可。</p><p>如下是个例子，实现 $\overline{1021}<em>{(3)}+\overline{0021}</em>{(3)}=\overline{1112}_{(3)}$</p><p><img src="https://cdn.luogu.com.cn/upload/image_hosting/4kcgnp7j.png" alt=""></p><p>初始时齿轮的状态如上。</p><p><img src="https://cdn.luogu.com.cn/upload/image_hosting/dcd66l5v.png" alt=""></p><p>把第一个齿轮拨动一个单位长度，变为如上图所示。</p><p><img src="https://cdn.luogu.com.cn/upload/image_hosting/oiexg3yw.png" alt=""></p><p>把第二个齿轮拨动两个单位长度，变为如上图所示。读数，得到结果 $\overline{1112}_{(3)}$。</p><hr><p>现在莲子设计了如下图所示的机械结构。对于从左往右数的第 $i$ 枚齿轮，它上面的浅色小齿轮与第 $i+1$ 枚齿轮上的深色小齿轮的半径之比为 $1:(i+2)$。也就是说，第 $i$ 枚齿轮每转动 $1$ 圈，第 $i+1$ 枚齿轮转过的角度恰好为它上面的一个数码。</p><p><img src="https://cdn.luogu.com.cn/upload/image_hosting/zi1d0qnn.png" alt=""></p><p>莲子想要知道，在这样的特别的进制表示下，给定 $a,b$，那么计算出的 $a+b$ 的结果是多少。</p><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>题目背景的问题可以转化为如下描述：</p><p>给定两个长度分别为 $n,m$ 的整数 $a,b$，计算它们的和。</p><p>但是要注意的是，这里的 $a,b$ 采用了某种特殊的进制表示法。最终的结果也会采用该种表示法。具体而言，从低位往高位数起，第 $i$ 位采用的是 $i+1$ 进制。换言之，相较于十进制下每一位的「逢 $10$ 进 $1$」，该种进制下第 $i$ 位是「逢 $i+1$ 进 $1$」。</p><p>下图所示，左边是十进制的竖式加法；右边是这种特殊进制的竖式加法。图中的红色加号表示上一位发生了进位。</p><p><img src="https://cdn.luogu.com.cn/upload/image_hosting/px92d6yd.png" alt=""></p><h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><ul><li>第一行有两个整数 $n,m$，分别表示 $a$ 和 $b$ 的位数。</li><li>第二行有 $n$ 个整数，中间用空格隔开，<strong>从高到低位</strong>描述 $a$ 的每个数码。</li><li>第三行有 $m$ 个整数，中间用空格隔开，<strong>从高到低位</strong>描述 $b$ 的每个数码。</li></ul><h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><ul><li>输出有若干个整数，从高到低位输出 $a+b$ 在这种特殊表示法下的结果。</li></ul><h2 id="样例-1"><a href="#样例-1" class="headerlink" title="样例 #1"></a>样例 #1</h2><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入 #1"></a>样例输入 #1</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">5 4</span><br><span class="line">3 3 2 1 1</span><br><span class="line">3 2 2 1</span><br></pre></td></tr></table></figure><h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出 #1"></a>样例输出 #1</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4 2 1 1 0</span><br></pre></td></tr></table></figure><h2 id="样例-2"><a href="#样例-2" class="headerlink" title="样例 #2"></a>样例 #2</h2><h3 id="样例输入-2"><a href="#样例输入-2" class="headerlink" title="样例输入 #2"></a>样例输入 #2</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">10 1</span><br><span class="line">10 9 8 7 6 5 4 3 2 1</span><br><span class="line">0</span><br></pre></td></tr></table></figure><h3 id="样例输出-2"><a href="#样例输出-2" class="headerlink" title="样例输出 #2"></a>样例输出 #2</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10 9 8 7 6 5 4 3 2 1</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><p>对于全部数据，保证 $1\le n,m\le 2\times 10^5$，从低位往高位数起有 $a_i\in[0,i]$，$b_i\in[0,i]$。请使用 Java 或 Python 语言作答的选手注意输入输出时的效率。</p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>类似于高精度运算的模板<br><strong>坑点：</strong><br>主要是细节 进位后总长度为 max(n, m) + 1 例如：0 + 0 = 0<br>这个0也是有长度的 但要小心输出0 0 <em>if(进位 &gt; 0)</em>再pushback</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">400010</span>;</span><br><span class="line"><span class="type">int</span> x[N], y[N];</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; c;</span><br><span class="line"><span class="type">int</span> m;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a, b;</span><br><span class="line">    cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; a; i++)</span><br><span class="line">        cin &gt;&gt; x[i];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; b; i++)</span><br><span class="line">        cin &gt;&gt; y[i];</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> t = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = a - <span class="number">1</span>, j = b - <span class="number">1</span>; i &gt;= <span class="number">0</span> || j &gt;= <span class="number">0</span>; i--, j--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (a &lt; b)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> s = t;</span><br><span class="line">            <span class="keyword">if</span> (i &gt;= <span class="number">0</span>)</span><br><span class="line">                s += x[i];</span><br><span class="line">            <span class="keyword">if</span> (j &gt;= <span class="number">0</span>)</span><br><span class="line">                s += y[j];</span><br><span class="line">            <span class="type">int</span> r = a - i + <span class="number">1</span>;</span><br><span class="line">            c.<span class="built_in">push_back</span>(s % r);</span><br><span class="line">            t = s / r;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> s = t;</span><br><span class="line">            <span class="keyword">if</span> (i &gt;= <span class="number">0</span>)</span><br><span class="line">                s += x[i];</span><br><span class="line">            <span class="keyword">if</span> (j &gt;= <span class="number">0</span>)</span><br><span class="line">                s += y[j];</span><br><span class="line">            <span class="type">int</span> r = b - j + <span class="number">1</span>;</span><br><span class="line">            c.<span class="built_in">push_back</span>(s % r);</span><br><span class="line">            t = s / r;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (t)</span><br><span class="line">        c.<span class="built_in">push_back</span>(t);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = c.<span class="built_in">size</span>() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">        cout &lt;&lt; c[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法练习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 模拟 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown_Learning</title>
      <link href="/2022/11/28/Markdown-Learning/"/>
      <url>/2022/11/28/Markdown-Learning/</url>
      
        <content type="html"><![CDATA[<h1 id="Markdown基本语法学习"><a href="#Markdown基本语法学习" class="headerlink" title="Markdown基本语法学习"></a>Markdown基本语法学习</h1><blockquote><p>这篇文章是用来学习Markdown的<br>编辑器：Vscode</p></blockquote><p><img src="https://s1.ax1x.com/2022/11/28/zUowRS.png" alt="背景图片"></p><h2 id="1-标题"><a href="#1-标题" class="headerlink" title="1 标题"></a>1 标题</h2><p>一级标题内容<br>这是第二个段落<br><em>斜体的文字</em><br><strong>加粗的文字</strong></p><h3 id="1-1-标题"><a href="#1-1-标题" class="headerlink" title="1.1 标题"></a>1.1 标题</h3><p>二级标题内容</p><h4 id="1-1-1-标题"><a href="#1-1-1-标题" class="headerlink" title="1.1.1 标题"></a>1.1.1 标题</h4><p>三级标题内容</p><h2 id="2-列表"><a href="#2-列表" class="headerlink" title="2 列表"></a>2 列表</h2><h3 id="2-1-有序列表"><a href="#2-1-有序列表" class="headerlink" title="2.1 有序列表"></a>2.1 有序列表</h3><ol><li>第一项</li><li>第二项</li></ol><h3 id="2-2-无序列表"><a href="#2-2-无序列表" class="headerlink" title="2.2 无序列表"></a>2.2 无序列表</h3><ul><li>第一项</li><li>第二项</li></ul><h3 id="2-3-嵌套列表"><a href="#2-3-嵌套列表" class="headerlink" title="2.3 嵌套列表"></a>2.3 嵌套列表</h3><ol><li>第一<ul><li>point1：</li></ul></li><li>第二<ul><li>point1：</li></ul></li><li><p>第三</p><ul><li>point1：</li></ul><hr></li></ol><h2 id="3-区块"><a href="#3-区块" class="headerlink" title="3 区块"></a>3 区块</h2><h3 id="3-1-区块"><a href="#3-1-区块" class="headerlink" title="3.1 区块"></a>3.1 区块</h3><blockquote><p>一层引用</p></blockquote><h3 id="3-2-嵌套区块"><a href="#3-2-嵌套区块" class="headerlink" title="3.2 嵌套区块"></a>3.2 嵌套区块</h3><blockquote><p>一层引用</p><blockquote><p>第二层引用</p><blockquote><p>第三层引用</p></blockquote></blockquote></blockquote><h3 id="3-3-列表中使用区块"><a href="#3-3-列表中使用区块" class="headerlink" title="3.3 列表中使用区块"></a>3.3 列表中使用区块</h3><ul><li><blockquote><p>hi</p></blockquote></li></ul><h3 id="3-4-代码区块"><a href="#3-4-代码区块" class="headerlink" title="3.4 代码区块"></a>3.4 代码区块</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">//注释</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Other </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/11/27/hello-world/"/>
      <url>/2022/11/27/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> Other </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>

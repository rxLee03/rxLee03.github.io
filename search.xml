<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>堆排序</title>
      <link href="/2022/11/28/%E5%A0%86%E6%8E%92%E5%BA%8F/"/>
      <url>/2022/11/28/%E5%A0%86%E6%8E%92%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="堆排序"><a href="#堆排序" class="headerlink" title="堆排序"></a>堆排序</h1><hr><h2 id="1-知识准备"><a href="#1-知识准备" class="headerlink" title="1 知识准备"></a>1 知识准备</h2><p>堆的结构可以分为大根堆和小根堆，是一个完全二叉树，而堆排序是根据堆的这种数据结构设计的一种排序，下面先来看看什么是大根堆和小根堆。</p><h3 id="1-1-大根堆和小根堆"><a href="#1-1-大根堆和小根堆" class="headerlink" title="1.1 大根堆和小根堆"></a>1.1 大根堆和小根堆</h3><p><strong>[大根堆]：</strong> 每个结点的值都大于其左孩子和右孩子结点的值<br><strong>[小根堆]：</strong> 每个结点的值都小于其左孩子和右孩子结点的值<br><a href="https://imgse.com/i/zaTLZ9"><img src="https://s1.ax1x.com/2022/11/28/zaTLZ9.md.png" alt="zaTLZ9.md.png"></a><br><strong>[数组储存]：</strong> 可用数组储存此类完全二叉树 </p><p><strong>父节点索引：</strong> (i-1)/2<br><strong>左孩子索引：</strong> 2<em>i + 1<br><strong>右孩子索引：</strong> 2</em>i + 2</p><blockquote><p>大根堆 需要满足 arr(i)&gt;arr(2<em>i+1) &amp;&amp; arr(i)&gt;arr(2</em>i+2)<br>小根堆 需要满足 arr(i)&lt;arr(2<em>i+1) &amp;&amp; arr(i)&lt;arr(2</em>i+2)</p></blockquote><h2 id="2-堆排序步骤"><a href="#2-堆排序步骤" class="headerlink" title="2 堆排序步骤"></a>2 堆排序步骤</h2><p>（1）首先将待排序的数组构造成一个大根堆，此时，整个数组的最大值就是堆结构的顶端</p><p>（2）将顶端的数与末尾的数交换，此时，末尾的数为最大值，剩余待排序数组个数为n-1</p><p>（3）将剩余的n-1个数再构造成大根堆，再将顶端数与n-1位置的数交换……如此反复执行，便能得到有序数组</p><h3 id="2-2-构造初始的大根堆"><a href="#2-2-构造初始的大根堆" class="headerlink" title="2.2 构造初始的大根堆"></a>2.2 构造初始的大根堆</h3><p>（1）从<strong>最后一棵子树</strong>开始（即最后一个元素的父节点 index = size/2 - 1），从后往前调整<br>（2）每次调整，从上往下调整 <strong>(递归思想)</strong>，使所有父节点始终大于子节点<br>（3）构建成大根堆</p><h3 id="2-3-顶端与末尾的数交换后如何调整堆"><a href="#2-3-顶端与末尾的数交换后如何调整堆" class="headerlink" title="2.3 顶端与末尾的数交换后如何调整堆"></a>2.3 顶端与末尾的数交换后如何调整堆</h3><p>由于执行该步操作后顶端的子树并未发生变化（此时堆或者说数组的长度-1），且<strong>子树依旧是大根堆</strong>，所以之后的调整堆并不需要像第一次构造堆一样从后往前调整每一棵子树，<strong>我们只需要对交换后的顶端重新调整，即HeapAdjust(a, 0, size)。</strong></p><h3 id="2-4-代码实现"><a href="#2-4-代码实现" class="headerlink" title="2.4 代码实现"></a>2.4 代码实现</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">HeapAdjust</span><span class="params">(<span class="type">int</span> *a, <span class="type">int</span> i, <span class="type">int</span> size)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> p = i;<span class="comment">//下标</span></span><br><span class="line">    <span class="type">int</span> left = <span class="number">2</span> * i + <span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> right = <span class="number">2</span> * i + <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span> (left &lt; size &amp;&amp; a[left] &gt; a[p])</span><br><span class="line">        p = left;</span><br><span class="line">    <span class="keyword">if</span> (right &lt; size &amp;&amp; a[right] &gt; a[p])</span><br><span class="line">        p = right;</span><br><span class="line">    <span class="keyword">if</span> (p != i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">swap</span>(a[p], a[i]);</span><br><span class="line">        <span class="built_in">HeapAdjust</span>(a, p, size);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">HeapSort</span><span class="params">(<span class="type">int</span> *a, <span class="type">int</span> size)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//建立初始大根堆</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = size/<span class="number">2</span> <span class="number">-1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">        <span class="built_in">HeapAdjust</span>(a, i, size);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = size - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">swap</span>(a[<span class="number">0</span>], a[i]);</span><br><span class="line">        <span class="built_in">HeapAdjust</span>(a, <span class="number">0</span>, i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">8</span>] = &#123;<span class="number">53</span>, <span class="number">17</span>, <span class="number">78</span>, <span class="number">9</span>, <span class="number">45</span>, <span class="number">65</span>, <span class="number">87</span>, <span class="number">23</span>&#125;;</span><br><span class="line">    <span class="built_in">HeapSort</span>(a, <span class="number">8</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; a[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><a href="&quot;https://www.bilibili.com/video/BV1fp4y1D7cj/?spm_id_from=333.337.search-card.all.click&amp;vd_source=4c4e06d9794ecf36566117b17c0bf46a&quot;">B站相关视频演示</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 算法练习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法练习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【传智】莲子的机械动力学</title>
      <link href="/2022/11/28/%5B%E4%BC%A0%E6%99%BA%5DB%E8%8E%B2%E5%AD%90%E7%9A%84%E6%9C%BA%E6%A2%B0%E5%8A%A8%E5%8A%9B%E5%AD%A6/"/>
      <url>/2022/11/28/%5B%E4%BC%A0%E6%99%BA%5DB%E8%8E%B2%E5%AD%90%E7%9A%84%E6%9C%BA%E6%A2%B0%E5%8A%A8%E5%8A%9B%E5%AD%A6/</url>
      
        <content type="html"><![CDATA[<blockquote><p>新定义竖式运算</p></blockquote><h1 id="莲子的机械动力学"><a href="#莲子的机械动力学" class="headerlink" title="莲子的机械动力学"></a>莲子的机械动力学</h1><h2 id="题目背景"><a href="#题目背景" class="headerlink" title="题目背景"></a>题目背景</h2><p><strong>【题目背景和题目描述的两个题面是完全等价的，您可以选择阅读其中一部分。】</strong></p><p>专攻超统一物理学的莲子，对机械结构的运动颇有了解。如下图所示，是一个三进制加法计算器的（超简化）示意图。</p><p><img src="https://cdn.luogu.com.cn/upload/image_hosting/l6gm0j36.png" alt=""></p><p>一个四位的三进制整数，从低到高位，标为 $x<em>1,x_2,x_3,x_4$。换言之，这个数可以写成 $\overline{x_4x_3x_2x_1}</em>{(3)}$。把它放在这四个齿轮里，对应箭头指向的数字就是现在这位的数值。</p><p>在这种机械式计算机里，我们通过齿轮的啮合来实现数位间的连接。通过不同齿轮半径的比例来确定进制。图中所有浅灰色的小齿轮的半径，比上使用皮带相接的较大齿轮的半径，都是 $1:3$。那么小齿轮每转动一圈，大齿轮就转动 $\dfrac{1}{3}$ 圈，也就是刚好一个数码的角度。</p><p>于是，我们通过控制齿轮的半径实现了 $3$ 进制的进位。</p><p>如果需要实现三进制加法，则只需要在对应数位拨动对应的数码长度即可。</p><p>如下是个例子，实现 $\overline{1021}<em>{(3)}+\overline{0021}</em>{(3)}=\overline{1112}_{(3)}$</p><p><img src="https://cdn.luogu.com.cn/upload/image_hosting/4kcgnp7j.png" alt=""></p><p>初始时齿轮的状态如上。</p><p><img src="https://cdn.luogu.com.cn/upload/image_hosting/dcd66l5v.png" alt=""></p><p>把第一个齿轮拨动一个单位长度，变为如上图所示。</p><p><img src="https://cdn.luogu.com.cn/upload/image_hosting/oiexg3yw.png" alt=""></p><p>把第二个齿轮拨动两个单位长度，变为如上图所示。读数，得到结果 $\overline{1112}_{(3)}$。</p><hr><p>现在莲子设计了如下图所示的机械结构。对于从左往右数的第 $i$ 枚齿轮，它上面的浅色小齿轮与第 $i+1$ 枚齿轮上的深色小齿轮的半径之比为 $1:(i+2)$。也就是说，第 $i$ 枚齿轮每转动 $1$ 圈，第 $i+1$ 枚齿轮转过的角度恰好为它上面的一个数码。</p><p><img src="https://cdn.luogu.com.cn/upload/image_hosting/zi1d0qnn.png" alt=""></p><p>莲子想要知道，在这样的特别的进制表示下，给定 $a,b$，那么计算出的 $a+b$ 的结果是多少。</p><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>题目背景的问题可以转化为如下描述：</p><p>给定两个长度分别为 $n,m$ 的整数 $a,b$，计算它们的和。</p><p>但是要注意的是，这里的 $a,b$ 采用了某种特殊的进制表示法。最终的结果也会采用该种表示法。具体而言，从低位往高位数起，第 $i$ 位采用的是 $i+1$ 进制。换言之，相较于十进制下每一位的「逢 $10$ 进 $1$」，该种进制下第 $i$ 位是「逢 $i+1$ 进 $1$」。</p><p>下图所示，左边是十进制的竖式加法；右边是这种特殊进制的竖式加法。图中的红色加号表示上一位发生了进位。</p><p><img src="https://cdn.luogu.com.cn/upload/image_hosting/px92d6yd.png" alt=""></p><h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><ul><li>第一行有两个整数 $n,m$，分别表示 $a$ 和 $b$ 的位数。</li><li>第二行有 $n$ 个整数，中间用空格隔开，<strong>从高到低位</strong>描述 $a$ 的每个数码。</li><li>第三行有 $m$ 个整数，中间用空格隔开，<strong>从高到低位</strong>描述 $b$ 的每个数码。</li></ul><h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><ul><li>输出有若干个整数，从高到低位输出 $a+b$ 在这种特殊表示法下的结果。</li></ul><h2 id="样例-1"><a href="#样例-1" class="headerlink" title="样例 #1"></a>样例 #1</h2><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入 #1"></a>样例输入 #1</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">5 4</span><br><span class="line">3 3 2 1 1</span><br><span class="line">3 2 2 1</span><br></pre></td></tr></table></figure><h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出 #1"></a>样例输出 #1</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4 2 1 1 0</span><br></pre></td></tr></table></figure><h2 id="样例-2"><a href="#样例-2" class="headerlink" title="样例 #2"></a>样例 #2</h2><h3 id="样例输入-2"><a href="#样例输入-2" class="headerlink" title="样例输入 #2"></a>样例输入 #2</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">10 1</span><br><span class="line">10 9 8 7 6 5 4 3 2 1</span><br><span class="line">0</span><br></pre></td></tr></table></figure><h3 id="样例输出-2"><a href="#样例输出-2" class="headerlink" title="样例输出 #2"></a>样例输出 #2</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10 9 8 7 6 5 4 3 2 1</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><p>对于全部数据，保证 $1\le n,m\le 2\times 10^5$，从低位往高位数起有 $a_i\in[0,i]$，$b_i\in[0,i]$。请使用 Java 或 Python 语言作答的选手注意输入输出时的效率。</p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>类似于高精度运算的模板<br><strong>坑点：</strong><br>主要是细节 进位后总长度为 max(n, m) + 1 例如：0 + 0 = 0<br>这个0也是有长度的 但要小心输出0 0 <em>if(进位 &gt; 0)</em>再pushback</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">400010</span>;</span><br><span class="line"><span class="type">int</span> x[N], y[N];</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; c;</span><br><span class="line"><span class="type">int</span> m;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a, b;</span><br><span class="line">    cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; a; i++)</span><br><span class="line">        cin &gt;&gt; x[i];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; b; i++)</span><br><span class="line">        cin &gt;&gt; y[i];</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> t = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = a - <span class="number">1</span>, j = b - <span class="number">1</span>; i &gt;= <span class="number">0</span> || j &gt;= <span class="number">0</span>; i--, j--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (a &lt; b)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> s = t;</span><br><span class="line">            <span class="keyword">if</span> (i &gt;= <span class="number">0</span>)</span><br><span class="line">                s += x[i];</span><br><span class="line">            <span class="keyword">if</span> (j &gt;= <span class="number">0</span>)</span><br><span class="line">                s += y[j];</span><br><span class="line">            <span class="type">int</span> r = a - i + <span class="number">1</span>;</span><br><span class="line">            c.<span class="built_in">push_back</span>(s % r);</span><br><span class="line">            t = s / r;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> s = t;</span><br><span class="line">            <span class="keyword">if</span> (i &gt;= <span class="number">0</span>)</span><br><span class="line">                s += x[i];</span><br><span class="line">            <span class="keyword">if</span> (j &gt;= <span class="number">0</span>)</span><br><span class="line">                s += y[j];</span><br><span class="line">            <span class="type">int</span> r = b - j + <span class="number">1</span>;</span><br><span class="line">            c.<span class="built_in">push_back</span>(s % r);</span><br><span class="line">            t = s / r;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (t)</span><br><span class="line">        c.<span class="built_in">push_back</span>(t);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = c.<span class="built_in">size</span>() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">        cout &lt;&lt; c[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法练习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法练习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown_Learning</title>
      <link href="/2022/11/28/Markdown-Learning/"/>
      <url>/2022/11/28/Markdown-Learning/</url>
      
        <content type="html"><![CDATA[<h1 id="Markdown基本语法学习"><a href="#Markdown基本语法学习" class="headerlink" title="Markdown基本语法学习"></a>Markdown基本语法学习</h1><blockquote><p>这篇文章是用来学习Markdown的<br>编辑器：Vscode</p></blockquote><p><img src="https://s1.ax1x.com/2022/11/28/zUowRS.png" alt="背景图片"></p><h2 id="1-标题"><a href="#1-标题" class="headerlink" title="1 标题"></a>1 标题</h2><p>一级标题内容<br>这是第二个段落<br><em>斜体的文字</em><br><strong>加粗的文字</strong></p><h3 id="1-1-标题"><a href="#1-1-标题" class="headerlink" title="1.1 标题"></a>1.1 标题</h3><p>二级标题内容</p><h4 id="1-1-1-标题"><a href="#1-1-1-标题" class="headerlink" title="1.1.1 标题"></a>1.1.1 标题</h4><p>三级标题内容</p><h2 id="2-列表"><a href="#2-列表" class="headerlink" title="2 列表"></a>2 列表</h2><h3 id="2-1-有序列表"><a href="#2-1-有序列表" class="headerlink" title="2.1 有序列表"></a>2.1 有序列表</h3><ol><li>第一项</li><li>第二项</li></ol><h3 id="2-2-无序列表"><a href="#2-2-无序列表" class="headerlink" title="2.2 无序列表"></a>2.2 无序列表</h3><ul><li>第一项</li><li>第二项</li></ul><h3 id="2-3-嵌套列表"><a href="#2-3-嵌套列表" class="headerlink" title="2.3 嵌套列表"></a>2.3 嵌套列表</h3><ol><li>第一<ul><li>point1：</li></ul></li><li>第二<ul><li>point1：</li></ul></li><li><p>第三</p><ul><li>point1：</li></ul><hr></li></ol><h2 id="3-区块"><a href="#3-区块" class="headerlink" title="3 区块"></a>3 区块</h2><h3 id="3-1-区块"><a href="#3-1-区块" class="headerlink" title="3.1 区块"></a>3.1 区块</h3><blockquote><p>一层引用</p></blockquote><h3 id="3-2-嵌套区块"><a href="#3-2-嵌套区块" class="headerlink" title="3.2 嵌套区块"></a>3.2 嵌套区块</h3><blockquote><p>一层引用</p><blockquote><p>第二层引用</p><blockquote><p>第三层引用</p></blockquote></blockquote></blockquote><h3 id="3-3-列表中使用区块"><a href="#3-3-列表中使用区块" class="headerlink" title="3.3 列表中使用区块"></a>3.3 列表中使用区块</h3><ul><li><blockquote><p>hi</p></blockquote></li></ul><h3 id="3-4-代码区块"><a href="#3-4-代码区块" class="headerlink" title="3.4 代码区块"></a>3.4 代码区块</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">//注释</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Other </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdowwn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大一写了啥</title>
      <link href="/2022/11/28/%E5%A4%A7%E4%B8%80%E5%86%99%E4%BA%86%E5%95%A5/"/>
      <url>/2022/11/28/%E5%A4%A7%E4%B8%80%E5%86%99%E4%BA%86%E5%95%A5/</url>
      
        <content type="html"><![CDATA[<blockquote><p>这篇文章记录一下大一写的东西（）<br>话不多说直接上视频吧（懒得写文字了）</p></blockquote><iframe height=498 width=610 src="//player.bilibili.com/player.html?aid=685367081&bvid=BV1nU4y1Q7in&cid=757148283&page=1"></iframe><blockquote><p>搬运简介：<br>h5+css ：（1）仿写北京大学官网首页 （2）设计学习强国pc端网页<br>C语言 ：经典图书管理系统（找不到了）<br>c++ ：小型书店进销存管理系统（这不就是图书管理系统吗）<br>小学期 ：（1）基于huffman编码的压缩程序（2）表达式求值（栈）<br>（3）Floyd求多源最短路径</p></blockquote><hr><p><strong>挖个坑：有时间补一下小学期那几个算法的笔记吧</strong></p>]]></content>
      
      
      <categories>
          
          <category> Other </category>
          
      </categories>
      
      
        <tags>
            
            <tag> record </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/11/27/hello-world/"/>
      <url>/2022/11/27/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> Other </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
